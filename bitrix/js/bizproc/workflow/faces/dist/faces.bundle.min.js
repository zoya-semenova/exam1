this.BX=this.BX||{};this.BX.Bizproc=this.BX.Bizproc||{};(function(t,e,s,a,i,o,r){"use strict";const n={name:"bp-workflow-faces-column",props:{title:String,avatars:Array,status:{type:String,validator:t=>["accept","decline","progress"].includes(t)},hasMoreTasks:{type:Boolean,default:false},tasksCount:Number,time:Number},computed:{hasTitle(){return r.Type.isStringFilled(this.title)},hasFaces(){return r.Type.isArrayFilled(this.avatars)},hasStatus(){return r.Type.isStringFilled(this.status)},hasTime(){return r.Type.isNumber(this.time)},isProgressStatus(){return this.status==="progress"},isAcceptStatus(){return this.status==="accept"},isDeclineStatus(){return this.status==="decline"},duration(){if(r.Type.isNil(this.time)||this.time===0){return this.$Bitrix.Loc.getMessage("BIZPROC_JS_WORKFLOW_FACES_EMPTY_TIME")}return a.DateTimeFormat.format([["s","sdiff"],["i","idiff"],["H","Hdiff"],["d","ddiff"],["m","mdiff"],["Y","Ydiff"]],0,this.time)},completedTasksCountMessage(){return this.$Bitrix.Loc.getMessage("BIZPROC_JS_WORKFLOW_COMPLETED_TASK_COUNT",{"#COUNT#":this.tasksCount})}},methods:{getSafeUrl(t){return`url('${encodeURI(r.Text.encode(t))}')`}},template:`\n\t\t<div\n\t\t\t:class="{\n\t\t\t\t'bp-workflow-faces__steps-item': true,\n\t\t\t\t'--in-progress': hasFaces,\n\t\t\t\t'--loading': !hasFaces && hasStatus,\n\t\t\t}">\n\t\t\t<div\n\t\t\t\tv-if="hasMoreTasks"\n\t\t\t\t:title="completedTasksCountMessage"\n\t\t\t\tclass="bp-workflow-faces__icon-progress-box"\n\t\t\t>\n\t\t\t\t<div class="ui-icon-set --more bp-workflow-faces__icon-progress"></div>\n\t\t\t\t<div class="bp-workflow-faces__icon-progress-overlay"></div>\n\t\t\t</div>\n\t\t\t<div class="bp-workflow-faces__steps-name">\n\t\t\t\t<div v-if="hasTitle" class="bp-workflow-faces__text-area">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t\t<div v-else class="bp-workflow-faces__fake-area">\n\t\t\t\t\t<div class="bp-workflow-faces__fake-area-stub"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bp-workflow-faces__steps-users">\n\t\t\t\t<div v-if="!hasFaces && !hasStatus" class="ui-icon-set --person bp-workflow-faces__steps-user"></div>\n\t\t\t\t<template v-else-if="hasFaces">\n\t\t\t\t\t<template v-if="hasStatus">\n\t\t\t\t\t\t<div v-if="isProgressStatus" class="bp-workflow-faces__icon-waiting-box">\n\t\t\t\t\t\t\t<div class="ui-icon-set --black-clock bp-workflow-faces__icon-waiting"></div>\n\t\t\t\t\t\t\t<div class="bp-workflow-faces__icon-overlay"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-if="isAcceptStatus" class="bp-workflow-faces__icon-done-box">\n\t\t\t\t\t\t\t<div class="ui-icon-set --circle-check bp-workflow-faces__icon-done"></div>\n\t\t\t\t\t\t\t<div class="bp-workflow-faces__icon-overlay"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-if="isDeclineStatus" class="bp-workflow-faces__icon-decline-box">\n\t\t\t\t\t\t\t<div class="ui-icon-set --cross-circle-60 bp-workflow-faces__icon-decline"></div>\n\t\t\t\t\t\t\t<div class="bp-workflow-faces__icon-overlay"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-for="avatar in avatars" :key="avatar.id">\n\t\t\t\t\t\t<div \n\t\t\t\t\t\t\tv-if="avatar.avatarUrl"\n\t\t\t\t\t\t\tclass="bp-workflow-faces__steps-user-item"\n\t\t\t\t\t\t\t:style="{ backgroundImage: getSafeUrl(avatar.avatarUrl)}"\n\t\t\t\t\t\t\t:bx-tooltip-user-id="avatar.id"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tv-else-if="avatar.id > 0"\n\t\t\t\t\t\t\tclass="bp-workflow-faces__steps-user-item"\n\t\t\t\t\t\t\t:bx-tooltip-user-id="avatar.id"\n\t\t\t\t\t\t></div>\n\t\t\t\t\t\t<div v-else class="bp-workflow-faces__steps-user-item --tech"></div>\n\t\t\t\t\t</template>\n\t\t\t\t</template>\n\t\t\t\t<template v-else>\n\t\t\t\t\t<div v-if="isProgressStatus" class="bp-workflow-faces__icon-waiting-box --center">\n\t\t\t\t\t\t<div class="ui-icon-set --black-clock bp-workflow-faces__icon-waiting"></div>\n\t\t\t\t\t\t<div class="bp-workflow-faces__icon-overlay"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-if="isAcceptStatus" class="bp-workflow-faces__icon-done-box --center">\n\t\t\t\t\t\t<div class="ui-icon-set --circle-check bp-workflow-faces__icon-done"></div>\n\t\t\t\t\t\t<div class="bp-workflow-faces__icon-overlay"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t\t<div class="bp-workflow-faces__steps-duration">\n\t\t\t\t<div v-if="hasTime" class="bp-workflow-faces__text-area">\n\t\t\t\t\t{{ duration }}\n\t\t\t\t</div>\n\t\t\t\t<div v-else class="bp-workflow-faces__fake-area">\n\t\t\t\t\t<div class="bp-workflow-faces__fake-area-stub"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const l={name:"bp-workflow-faces-column-author",components:{Column:n},props:{avatars:Array,time:Number,hasMoreTasks:{type:Boolean,default:false},tasksCount:Number},computed:{hasAvatars(){return r.Type.isArrayFilled(this.avatars)}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<Column\n\t\t\t:title="loc('BIZPROC_JS_WORKFLOW_FACES_COLUMN_AUTHOR')"\n\t\t\t:avatars="hasAvatars ? avatars : null"\n\t\t\t:has-more-tasks="hasMoreTasks"\n\t\t\t:tasks-count="tasksCount"\n\t\t\t:time="time"\n\t\t/>\n\t`};const c={name:"bp-workflow-faces-column-done",components:{Column:n},props:{avatars:Array,time:Number,successStatus:Boolean},computed:{hasAvatars(){return r.Type.isArrayFilled(this.avatars)},status(){return this.hasAvatars?this.successStatus?"accept":"decline":"accept"}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<Column\n\t\t\t:title="loc('BIZPROC_JS_WORKFLOW_FACES_COLUMN_DONE')"\n\t\t\t:avatars="hasAvatars ? avatars : null"\n\t\t\t:status="status"\n\t\t\t:time="time"\n\t\t/>\n\t`};const u=60*60;const d={name:"bp-workflow-faces-column-running",components:{Column:n},props:{avatars:Array,time:Number},data(){return{timer:null,computedTime:0,startTime:Math.floor(Date.now()/1e3)}},computed:{hasAvatars(){return r.Type.isArrayFilled(this.avatars)}},mounted(){this.startTimer()},unmounted(){this.stopTimer()},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)},startTimer(){this.timer=setInterval((()=>{if(this.time+this.computedTime<u){this.computedTime=Math.floor(Date.now()/1e3)-this.startTime;return}this.stopTimer()}),1e3)},stopTimer(){if(this.timer){clearInterval(this.timer);this.timer=null}}},template:`\n\t\t<Column\n\t\t\t:title="loc('BIZPROC_JS_WORKFLOW_FACES_COLUMN_RUNNING')"\n\t\t\t:avatars="hasAvatars ? avatars : null"\n\t\t\t:status="'progress'"\n\t\t\t:time="time + computedTime"\n\t\t/>\n\t`};const p={name:"bp-workflow-faces-column-completed",components:{Column:n},props:{avatars:Array,time:Number,successStatus:Boolean},computed:{hasAvatars(){return r.Type.isArrayFilled(this.avatars)},status(){return this.successStatus?"accept":"decline"}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<Column\n\t\t\t:title="loc('BIZPROC_JS_WORKFLOW_FACES_COLUMN_COMPLETED')"\n\t\t\t:avatars="hasAvatars ? avatars : null"\n\t\t\t:status="status"\n\t\t\t:time="time"\n\t\t/>\n\t`};const m={name:"bp-workflow-faces-column-timeline",props:{workflowId:{type:String,required:true},isFinalState:{type:Boolean,default:false},time:Number,showArrow:{type:Boolean,default:true},showContent:{type:Boolean,default:true}},mounted(){this.renderSummary()},updated(){this.renderSummary()},unmounted(){if(this.$refs.content){r.Dom.clean(this.$refs.content)}},methods:{renderSummary(){if(this.$refs.content){r.Dom.clean(this.$refs.content);r.Dom.append(new o.Summary({workflowId:this.workflowId,time:this.time,workflowIsCompleted:this.isFinalState,showArrow:this.showArrow,showContent:this.showContent}).render(),this.$refs.content)}}},template:`\n\t\t<div class="bp-workflow-faces__steps-summary-item" ref="content"></div>\n\t`};const v=t=>r.Type.isNull(t)||t===0||r.Text.toInteger(t)>0;const h={name:"bp-workflow-faces-application",components:{Column:n,ColumnAuthor:l,ColumnDone:c,ColumnRunning:d,ColumnCompleted:p,Summary:m},props:{avatars:{type:Object,required:true,validator:t=>r.Type.isArrayFilled(t.author)&&r.Type.isArray(t.running)&&r.Type.isArray(t.completed)&&r.Type.isArray(t.done)},statuses:{type:Object,validator:t=>r.Type.isBoolean(t.completedSuccess)&&r.Type.isBoolean(t.doneSuccess)},time:{type:Object,validator:t=>v(t.author)&&v(t.running)&&v(t.completed)&&v(t.done)&&v(t.total)},initialCompletedTaskCount:{type:Number,default:0},workflowIsCompleted:{type:Boolean,default:false},workflowId:{type:String,required:true},userId:{type:Number,required:true,validator:t=>r.Type.isInteger(t)&&t>0},taskId:{type:Number,default:0},summaryProps:{type:Object,default:{showArrow:true,showContent:true}}},data(){return{author:{avatars:this.avatars.author,time:this.time.author},running:{avatars:this.avatars.running,time:this.time.running},completed:{avatars:this.avatars.completed,successStatus:this.statuses.completedSuccess,time:this.time.completed},done:{avatars:this.avatars.done,successStatus:this.statuses.doneSuccess,time:this.time.done},runningTaskId:this.taskId,isFinalState:this.workflowIsCompleted,completedTaskCount:this.initialCompletedTaskCount,handleUpdateData:t=>{this.updateData(t.getData())},unsubscribePushCallback:null,summary:{workflowId:this.workflowId,time:this.time.total,isFinalState:this.workflowIsCompleted,showArrow:r.Type.isBoolean(this.summaryProps.showArrow)?this.summaryProps.showArrow:true,showContent:r.Type.isBoolean(this.summaryProps.showContent)?this.summaryProps.showContent:true},errorMessage:null}},computed:{showCompletedColumn(){return r.Type.isArrayFilled(this.completed.avatars)},hasMoreTaskIcon(){return this.hiddenTasksCount>0},hiddenTasksCount(){if(this.isFinalState){return this.completedTaskCount>2?this.completedTaskCount-2:0}return this.completedTaskCount>1?this.completedTaskCount-1:0},hasErrors(){return r.Type.isStringFilled(this.errorMessage)}},mounted(){this.subscribeOnEvents()},unmounted(){this.unsubscribeOnEvents()},methods:{subscribeOnEvents(){if(!this.isFinalState){if(BX.PULL){this.unsubscribePushCallback=BX.PULL.subscribe({moduleId:"bizproc",command:"workflow",callback:this.onPush.bind(this)})}if(this.$root.$app){s.EventEmitter.subscribe(this.$root.$app,"Bizproc.WorkflowFaces.OnUpdateData",this.handleUpdateData)}}},unsubscribeOnEvents(){if(r.Type.isFunction(this.unsubscribePushCallback)){this.unsubscribePushCallback();this.unsubscribePushCallback=null}if(this.$root.$app){s.EventEmitter.unsubscribe(this.$root.$app,"Bizproc.WorkflowFaces.OnUpdateData",this.handleUpdateData)}},onPush(t){if(t&&t.eventName==="UPDATED"&&r.Type.isArrayFilled(t.items)){for(const e of t.items){if(String(e.id)===this.workflowId){this.load();return}}}},load(){if(this.$refs.container){r.ajax.runAction("bizproc.workflow.faces.load",{data:{workflowId:this.workflowId,runningTaskId:this.runningTaskId,userId:this.userId}}).then((({data:t})=>{this.updateData(t)})).catch((({errors:t})=>{if(r.Type.isArrayFilled(t)){const e=t.pop();if(e.code==="ACCESS_DENIED"){this.errorMessage=e.message}}}))}},updateData(t){if(!r.Type.isPlainObject(t)){return}const{avatars:e,time:s,statuses:a,completedTaskCount:i,workflowIsCompleted:o,runningTaskId:n}=t;if(!r.Type.isPlainObject(e)&&!r.Type.isPlainObject(s)&&!r.Type.isPlainObject(a)){return}this.running={avatars:r.Type.isArray(e.running)?e.running:null,time:v(s.running)?s.running:null};this.completed={avatars:r.Type.isArray(e.completed)?e.completed:null,successStatus:r.Text.toBoolean(a.completedSuccess),time:v(s.completed)?s.completed:null};this.done={avatars:r.Type.isArray(e.done)?e.done:null,successStatus:r.Text.toBoolean(a.doneSuccess),time:v(s.done)?s.done:null};this.updateSummary(t);this.runningTaskId=r.Text.toInteger(n);this.completedTaskCount=r.Text.toInteger(i);this.isFinalState=r.Text.toBoolean(o);if(this.isFinalState){this.unsubscribeOnEvents()}},updateSummary(t){const{time:e,workflowIsCompleted:s}=t;this.summary.time=v(e.total)?e.total:null;this.summary.isFinalState=r.Text.toBoolean(s)}},template:`\n\t\t<div ref="container">\n\t\t\t<div class="bp-workflow-faces">\n\t\t\t\t<div v-if="hasErrors" class="bp-workflow-faces__steps">\n\t\t\t\t\t<span class="bp-workflow-faces__steps-error">{{ errorMessage }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div v-else class="bp-workflow-faces__steps">\n\t\t\t\t\t<ColumnAuthor\n\t\t\t\t\t\t:avatars="author.avatars"\n\t\t\t\t\t\t:has-more-tasks="hasMoreTaskIcon"\n\t\t\t\t\t\t:tasks-count="hiddenTasksCount"\n\t\t\t\t\t\t:time="author.time"\n\t\t\t\t\t/>\n\t\t\t\t\t<ColumnCompleted\n\t\t\t\t\t\tv-if="showCompletedColumn"\n\t\t\t\t\t\t:avatars="completed.avatars"\n\t\t\t\t\t\t:time="completed.time"\n\t\t\t\t\t\t:success-status="completed.successStatus"\n\t\t\t\t\t/>\n\t\t\t\t\t<ColumnDone\n\t\t\t\t\t\tv-else-if="isFinalState"\n\t\t\t\t\t\t:avatars="done.avatars"\n\t\t\t\t\t\t:time="done.time"\n\t\t\t\t\t\t:success-status="done.successStatus"\n\t\t\t\t\t/>\n\t\t\t\t\t<ColumnRunning\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\t:avatars="running.avatars"\n\t\t\t\t\t\t:time="running.time"\n\t\t\t\t\t/>\n\t\t\t\t\t<Column v-if="!showCompletedColumn"/>\n\t\t\t\t\t<ColumnDone\n\t\t\t\t\t\tv-else-if="isFinalState"\n\t\t\t\t\t\t:avatars="done.avatars"\n\t\t\t\t\t\t:time="done.time"\n\t\t\t\t\t\t:success-status="done.successStatus"\n\t\t\t\t\t/>\n\t\t\t\t\t<ColumnRunning\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\t:avatars="running.avatars"\n\t\t\t\t\t\t:time="running.time"\n\t\t\t\t\t/>\n\t\t\t\t\t<Summary v-bind="summary"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};var f=babelHelpers.classPrivateFieldLooseKey("target");var w=babelHelpers.classPrivateFieldLooseKey("data");var b=babelHelpers.classPrivateFieldLooseKey("workflowId");var k=babelHelpers.classPrivateFieldLooseKey("targetUserId");var y=babelHelpers.classPrivateFieldLooseKey("application");var T=babelHelpers.classPrivateFieldLooseKey("initApplication");class _{constructor(t={}){Object.defineProperty(this,T,{value:C});Object.defineProperty(this,f,{writable:true,value:void 0});Object.defineProperty(this,w,{writable:true,value:{}});Object.defineProperty(this,b,{writable:true,value:void 0});Object.defineProperty(this,k,{writable:true,value:void 0});Object.defineProperty(this,y,{writable:true,value:void 0});if(!r.Type.isStringFilled(t.workflowId)){throw new TypeError("workflowId must be filled string")}babelHelpers.classPrivateFieldLooseBase(this,b)[b]=t.workflowId;if(!r.Type.isDomNode(t.target)){throw new TypeError("target must be dom node")}babelHelpers.classPrivateFieldLooseBase(this,f)[f]=t.target;if(!r.Type.isInteger(t.targetUserId)||t.targetUserId<=0){throw new TypeError("targetUserId must be positive integer")}babelHelpers.classPrivateFieldLooseBase(this,k)[k]=t.targetUserId;if(r.Type.isPlainObject(t.data)){babelHelpers.classPrivateFieldLooseBase(this,w)[w]=t.data}babelHelpers.classPrivateFieldLooseBase(this,T)[T]()}render(){babelHelpers.classPrivateFieldLooseBase(this,y)[y].mount(babelHelpers.classPrivateFieldLooseBase(this,f)[f])}updateData(t){s.EventEmitter.emit(this,"Bizproc.WorkflowFaces.OnUpdateData",new s.BaseEvent({data:t}))}destroy(){babelHelpers.classPrivateFieldLooseBase(this,y)[y].unmount();babelHelpers.classPrivateFieldLooseBase(this,y)[y]=null;babelHelpers.classPrivateFieldLooseBase(this,f)[f]=null;babelHelpers.classPrivateFieldLooseBase(this,w)[w]=null;babelHelpers.classPrivateFieldLooseBase(this,b)[b]=null}}function C(){const t=this;babelHelpers.classPrivateFieldLooseBase(this,y)[y]=e.BitrixVue.createApp({name:"bp-workflow-faces",components:{Application:h},props:{workflowId:String,userId:Number,avatars:Object,statuses:Object,time:Object,completedTaskCount:Number,workflowIsCompleted:Boolean,runningTaskId:Number,summaryProps:Object},created(){this.$app=t},template:`\n\t\t\t\t\t<Application\n\t\t\t\t\t\t:workflowId="workflowId"\n\t\t\t\t\t\t:userId="userId"\n\t\t\t\t\t\t:avatars="avatars"\n\t\t\t\t\t\t:statuses="statuses"\n\t\t\t\t\t\t:time="time"\n\t\t\t\t\t\t:workflow-is-completed="workflowIsCompleted"\n\t\t\t\t\t\t:initial-completed-task-count="completedTaskCount"\n\t\t\t\t\t\t:task-id="runningTaskId"\n\t\t\t\t\t\t:summary-props="summaryProps"\n\t\t\t\t\t></Application>\n\t\t\t\t`},{workflowId:babelHelpers.classPrivateFieldLooseBase(this,b)[b],userId:babelHelpers.classPrivateFieldLooseBase(this,k)[k],avatars:babelHelpers.classPrivateFieldLooseBase(this,w)[w].avatars,statuses:babelHelpers.classPrivateFieldLooseBase(this,w)[w].statuses,time:babelHelpers.classPrivateFieldLooseBase(this,w)[w].time,completedTaskCount:babelHelpers.classPrivateFieldLooseBase(this,w)[w].completedTaskCount,workflowIsCompleted:babelHelpers.classPrivateFieldLooseBase(this,w)[w].workflowIsCompleted,runningTaskId:babelHelpers.classPrivateFieldLooseBase(this,w)[w].runningTaskId,summaryProps:babelHelpers.classPrivateFieldLooseBase(this,w)[w].summaryProps})}t.WorkflowFaces=_})(this.BX.Bizproc.Workflow=this.BX.Bizproc.Workflow||{},BX.Vue3,BX.Event,BX.Main,BX.UI,BX.Bizproc.Workflow.Faces,BX);
//# sourceMappingURL=faces.bundle.map.js