this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,i,s,a,n,o,r,l,d,c,h,u,g,m,p,I,v,b,_,f,C,x,M,S,T,L,k,y,D,B,E,P,A,w,R,F){"use strict";function N(t){const e=E.Core.getStore().getters["chats/get"](t,true);return e.chatId}function $(t,e="ASC"){if(t.length===0){return null}t.sort(((t,i)=>{if(e==="ASC"){return t.id-i.id}return i.id-t.id}));const[i]=t;if(L.Type.isNumber(i.id)){return i.id}return null}const U=50;class O{constructor({dialogId:t}){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=N(t);this.userManager=new B.UserManager}getInitialQuery(){return{[A.RestMethod.imChatFavoriteCounterGet]:{chat_id:this.chatId},[A.RestMethod.imChatFavoriteGet]:{chat_id:this.chatId,limit:U}}}getResponseHandler(){return t=>{if(!t[A.RestMethod.imChatFavoriteCounterGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=t[A.RestMethod.imChatFavoriteCounterGet];const i=this.store.dispatch("sidebar/favorites/setCounter",{chatId:this.chatId,counter:e.counter});const s=this.handleResponse(t[A.RestMethod.imChatFavoriteGet]);return Promise.all([i,s])}}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:U};const e=this.store.getters["sidebar/favorites/getLastId"](this.chatId);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(A.RestMethod.imChatFavoriteGet,t).then((t=>this.handleResponse(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imChatFavoriteGet: page request error",t)}))}handleResponse(t){return this.updateModels(t)}updateModels(t){const{list:e=[],users:i=[],files:s=[]}=t;const a=this.userManager.setUsersToModel(i);const n=e.map((t=>t.message));const o=e.length===U;const r=$(e);const l=this.store.dispatch("files/set",s);const d=this.store.dispatch("messages/store",n);const c=this.store.dispatch("sidebar/favorites/set",{chatId:this.chatId,favorites:e,hasNextPage:o,lastId:r});return Promise.all([l,d,c,a])}}const H={user:[A.ChatType.user],chat:[A.ChatType.chat],copilot:[A.ChatType.copilot],support24Question:[A.ChatType.support24Question],channel:[A.ChatType.channel],openChannel:[A.ChatType.openChannel],comment:[A.ChatType.comment],generalChannel:[A.ChatType.generalChannel]};const G=Object.freeze({support:"support",chat:"chat",user:"user",copilot:"copilot",copilotInfo:"copilotInfo",info:"info",post:"post",file:"file",fileUnsorted:"fileUnsorted",task:"task",meeting:"meeting",market:"market",multidialog:"multidialog"});const z={[H.user]:{[G.user]:10,[G.info]:20,[G.file]:30,[G.fileUnsorted]:30,[G.task]:40,[G.meeting]:50,[G.market]:60},[H.chat]:{[G.chat]:10,[G.info]:20,[G.file]:30,[G.fileUnsorted]:30,[G.task]:40,[G.meeting]:50,[G.market]:60},[H.copilot]:{[G.copilot]:10,[G.copilotInfo]:20,[G.task]:40,[G.meeting]:50},[H.channel]:{[G.chat]:10,[G.info]:20,[G.file]:30},[H.openChannel]:{[G.chat]:10,[G.info]:20,[G.file]:30},[H.generalChannel]:{[G.chat]:10,[G.info]:20,[G.file]:30},[H.comment]:{[G.post]:10,[G.info]:20,[G.file]:30,[G.task]:40,[G.meeting]:50},[H.support24Question]:{[G.support]:10,[G.multidialog]:20,[G.info]:30,[G.file]:40}};class q{constructor(){this.saveSettings()}async saveSettings(){await E.Core.ready();const t=c.FeatureManager.isFeatureAvailable(c.Feature.sidebarFiles);const e=c.FeatureManager.isFeatureAvailable(c.Feature.sidebarLinks);void E.Core.getStore().dispatch("sidebar/setFilesMigrated",t);void E.Core.getStore().dispatch("sidebar/setLinksMigrated",e)}}function X(t){const e=V(t);return Object.entries(z[e]).sort((([,t],[,e])=>t-e)).map((([t])=>t))}function V(t){var e;const i=K(t);if(Q(t)){return H.support24Question}return(e=H[i])!=null?e:H.chat}const Q=t=>E.Core.getStore().getters["sidebar/multidialog/isSupport"](t);const K=t=>E.Core.getStore().getters["chats/get"](t,true).type;function j(t){const e=X(t);return Y(t,e)}function Y(t,e){(new q).saveSettings();const i=new Set(e);if(J()){i.delete(G.fileUnsorted)}else{i.delete(G.file)}if(!Z(t)){i.delete(G.market)}if(W(t)){i.delete(G.task);i.delete(G.meeting)}return[...i]}function W(t){const e=E.Core.getStore().getters["users/get"](t);return(e==null?void 0:e.bot)===true}function J(){return c.FeatureManager.isFeatureAvailable(c.Feature.sidebarFiles)}function Z(t){return b.MarketManager.getInstance().getAvailablePlacementsByType(A.PlacementType.sidebar,t).length>0}const tt=50;class et{constructor({dialogId:t}){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=N(t);this.userManager=new B.UserManager}getInitialQuery(){return{[A.RestMethod.imChatUrlCounterGet]:{chat_id:this.chatId},[A.RestMethod.imChatUrlGet]:{chat_id:this.chatId,limit:tt}}}getResponseHandler(){return t=>{if(!t[A.RestMethod.imChatUrlCounterGet]||!t[A.RestMethod.imChatUrlGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.handleUrlGetResponse(t[A.RestMethod.imChatUrlGet]);const i=this.handleCounterGetResponse(t[A.RestMethod.imChatUrlCounterGet]);return Promise.all([e,i])}}loadNextPage(){const t=this.getLinksCountFromModel();if(t===0){return Promise.resolve()}const e=this.getQueryParams(t);return this.requestPage(e)}getQueryParams(t=0){const e={CHAT_ID:this.chatId,LIMIT:tt};if(L.Type.isNumber(t)&&t>0){e.OFFSET=t}return e}requestPage(t){return this.restClient.callMethod(A.RestMethod.imChatUrlGet,t).then((t=>this.handleUrlGetResponse(t.data()))).catch((t=>{console.error("SidebarInfo: Im.chatUrlList: page request error",t)}))}handleUrlGetResponse(t){const{list:e,users:i}=t;const s=this.userManager.setUsersToModel(i);const a=this.store.dispatch("sidebar/links/set",{chatId:this.chatId,links:e,hasNextPage:e.length===tt});return Promise.all([a,s])}handleCounterGetResponse(t){const e=t.counter;return this.store.dispatch("sidebar/links/setCounter",{chatId:this.chatId,counter:e})}getLinksCountFromModel(){return this.store.getters["sidebar/links/getSize"](this.chatId)}}const it=50;class st{constructor({dialogId:t}){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=N(t);this.userManager=new B.UserManager}getInitialQuery(){return{[A.RestMethod.imChatFileCollectionGet]:{chat_id:this.chatId,limit:it}}}getResponseHandler(){return t=>{if(!t[A.RestMethod.imChatFileCollectionGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[A.RestMethod.imChatFileCollectionGet])}}updateModels(t){const{list:e,users:i,files:s}=t;const a=this.userManager.setUsersToModel(i);const n=this.store.dispatch("files/set",s);const o={};e.forEach((t=>{if(!o[t.subType]){o[t.subType]=[]}o[t.subType].push(t)}));const r=[];Object.keys(o).forEach((t=>{const e=o[t];r.push(this.store.dispatch("sidebar/files/set",{chatId:this.chatId,files:e,subType:t}),this.store.dispatch("sidebar/files/setHasNextPage",{chatId:this.chatId,subType:t,hasNextPage:e.length===it}),this.store.dispatch("sidebar/files/setLastId",{chatId:this.chatId,subType:t,lastId:$(e)}))}));return Promise.all([n,a,...r])}loadFirstPage(t){return this.loadFirstPageBySubType(t)}loadNextPage(t){return this.loadNextPageBySubType(t)}loadFirstPageBySubType(t){const e=this.getFilesCountFromModel(t);if(e>it){return Promise.resolve()}const i=this.getQueryParams(t);return this.requestPage(i)}loadNextPageBySubType(t){const e=this.getQueryParams(t);return this.requestPage(e)}getQueryParams(t){const e={CHAT_ID:this.chatId,SUBTYPE:t,LIMIT:it};const i=this.store.getters["sidebar/files/getLastId"](this.chatId,t);if(i>0){e.LAST_ID=i}return e}requestPage(t){return this.restClient.callMethod(A.RestMethod.imChatFileGet,t).then((t=>this.updateModels(t.data()))).catch((t=>{console.error("SidebarInfo: imChatFileGet: page request error",t)}))}getFilesCountFromModel(t){return this.store.getters["sidebar/files/getSize"](this.chatId,t)}}const at=50;class nt{constructor({dialogId:t}){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=N(t);this.userManager=new B.UserManager}getInitialQuery(){return{[A.RestMethod.imChatTaskGet]:{chat_id:this.chatId,limit:at}}}getResponseHandler(){return t=>{if(!t[A.RestMethod.imChatTaskGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[A.RestMethod.imChatTaskGet])}}loadFirstPage(){const t=this.getTasksCountFromModel();if(t>at){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:at};const e=this.store.getters["sidebar/tasks/getLastId"](this.chatId);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(A.RestMethod.imChatTaskGet,t).then((t=>this.updateModels(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imChatFavoriteGet: page request error",t)}))}updateModels(t){const{list:e,users:i}=t;const s=e.length===at;const a=$(e);const n=this.userManager.setUsersToModel(i);const o=this.store.dispatch("sidebar/tasks/set",{chatId:this.chatId,tasks:e,hasNextPage:s,lastId:a});return Promise.all([o,n])}getTasksCountFromModel(){return this.store.getters["sidebar/tasks/getSize"](this.chatId)}}const ot=50;class rt{constructor({dialogId:t}){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=N(t);this.userManager=new B.UserManager}getInitialQuery(){return{[A.RestMethod.imChatCalendarGet]:{chat_id:this.chatId,limit:ot}}}getResponseHandler(){return t=>{if(!t[A.RestMethod.imChatCalendarGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[A.RestMethod.imChatCalendarGet])}}loadFirstPage(){const t=this.getMeetingsCountFromState();if(t>ot){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:ot};const e=this.store.getters["sidebar/meetings/getLastId"](this.chatId);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(A.RestMethod.imChatCalendarGet,t).then((t=>this.updateModels(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imChatCalendarGet: page request error",t)}))}updateModels(t){const{list:e,users:i}=t;const s=e.length===ot;const a=$(e);const n=this.userManager.setUsersToModel(i);const o=this.store.dispatch("sidebar/meetings/set",{chatId:this.chatId,meetings:e,hasNextPage:s,lastId:a});return Promise.all([o,n])}getMeetingsCountFromState(){return this.store.getters["sidebar/meetings/getSize"](this.chatId)}}const lt=50;class dt{constructor({dialogId:t}){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=N(t);this.userManager=new B.UserManager}getInitialQuery(){return{[A.RestMethod.imDialogUsersList]:{dialog_id:this.dialogId,limit:lt,LAST_ID:0}}}loadFirstPage(){const t=this.getMembersCountFromModel();if(t>lt){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){return{DIALOG_ID:this.dialogId,LIMIT:lt,LAST_ID:this.store.getters["sidebar/members/getLastId"](this.chatId)}}async requestPage(t){let e=[];try{const i=await this.restClient.callMethod(A.RestMethod.imDialogUsersList,t);e=i.data()}catch(t){console.error("SidebarMain: Im.DialogUsersList: page request error",t)}return this.updateModels(e)}getResponseHandler(){return t=>this.updateModels(t[A.RestMethod.imDialogUsersList])}updateModels(t){const e=[];const i=this.userManager.setUsersToModel(t);t.forEach((t=>{e.push(t.id)}));const s=this.store.dispatch("sidebar/members/set",{chatId:this.chatId,users:e,lastId:$(t,"DESC"),hasNextPage:t.length===lt});return Promise.all([i,s])}getMembersCountFromModel(){return this.store.getters["sidebar/members/getSize"](this.chatId)}}const ct=25;class ht{constructor(){this.store=E.Core.getStore();this.userManager=new B.UserManager}getInitialQuery(){if(this.isInitedMultidialogBlock()){return{}}return{[A.RestMethod.imBotNetworkChatCount]:{}}}getResponseHandler(){return t=>{if(this.isInitedMultidialogBlock()){return Promise.resolve()}if(!t[A.RestMethod.imBotNetworkChatCount]){return Promise.reject(new Error("SidebarInfo service error: no response"))}const e=this.store.dispatch("sidebar/multidialog/setInited",true);const i=this.updateModels(t[A.RestMethod.imBotNetworkChatCount]);return Promise.all([e,i])}}loadNextPage(){const t=this.store.getters["sidebar/multidialog/hasNextPage"];if(!t){return Promise.resolve()}const e=this.store.getters["sidebar/multidialog/getNumberMultidialogs"];const i={data:this.getQueryParams({offset:e})};return this.requestPage(i)}getQueryParams(t){const e={offset:0,limit:ct,...t};Object.keys(e).forEach((t=>{const i=e[t];if(L.Type.isNumber(i)&&i>0){e[t]=i}}));return e}requestPage(t){return l.runAction(A.RestMethod.imBotNetworkChatList,t).then((t=>this.updateModels(t))).catch((t=>{console.error("SidebarInfo: imBotNetworkChatList: page request error",t)}))}createSupportChat(){T.Logger.warn("SidebarInfo: imBotNetworkChatAdd");return l.runAction(A.RestMethod.imBotNetworkChatAdd).then((t=>{void this.updateModels({chats:t});const{dialogId:e}=t;T.Logger.warn("SidebarInfo: createSupportChat result",t);return e})).catch((t=>{console.error("SidebarInfo: createSupportChat error:",t)}))}loadFirstPage(){const t=this.store.getters["sidebar/multidialog/isInitedDetail"];if(t){return Promise.resolve()}const e=this.store.getters["sidebar/multidialog/getNumberMultidialogs"];const i=ct<e?e:ct;const s={data:this.getQueryParams({limit:i})};return this.requestPage(s).then((()=>this.store.dispatch("sidebar/multidialog/setInitedDetail",true)))}updateModels(t){const{count:e,chatIdsWithCounters:i,multidialogs:s,chats:a,users:n,openSessionsLimit:o}=t;const r=[];if(a){const t=this.store.dispatch("chats/set",a);r.push(t)}if(n){const t=this.userManager.setUsersToModel(n);r.push(t)}const l=this.store.dispatch("sidebar/multidialog/set",{chatsCount:e,unreadChats:i,multidialogs:s,openSessionsLimit:o});r.push(l);return Promise.all(r)}isInitedMultidialogBlock(){return this.store.getters["sidebar/multidialog/isInited"]}}const ut=50;class gt{constructor({dialogId:t}){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=this.getChatId();this.userManager=new B.UserManager}getInitialQuery(){return{[A.RestMethod.imDiskFolderListGet]:{chat_id:this.chatId,limit:ut}}}getResponseHandler(){return t=>{if(!t[A.RestMethod.imDiskFolderListGet]){return Promise.reject(new Error("SidebarInfo service error: no response"))}return this.updateModels(t[A.RestMethod.imDiskFolderListGet])}}loadFirstPage(){const t=this.getFilesCountFromModel(A.SidebarDetailBlock.fileUnsorted);if(t>ut){return Promise.resolve()}const e=this.getQueryParams();return this.requestPage(e)}loadNextPage(){const t=this.getQueryParams();return this.requestPage(t)}getQueryParams(){const t={CHAT_ID:this.chatId,LIMIT:ut};const e=this.store.getters["sidebar/files/getLastId"](this.chatId,A.SidebarDetailBlock.fileUnsorted);if(e>0){t.LAST_ID=e}return t}requestPage(t){return this.restClient.callMethod(A.RestMethod.imDiskFolderListGet,t).then((t=>this.handleResponse(t.data()))).catch((t=>{console.error("SidebarInfo: Im.imDiskFolderListGet: page request error",t)}))}handleResponse(t){const e=t;if(e.files.length<ut){this.hasMoreItemsToLoad=false}const i=$(e.files);if(i){this.lastId=i}return this.updateModels(e)}updateModels(t){const{users:e,files:i}=t;const s=i.map((t=>({...t,subType:A.SidebarDetailBlock.fileUnsorted})));const a=this.userManager.setUsersToModel(e);const n=this.store.dispatch("files/set",s);const o=this.store.dispatch("sidebar/files/set",{chatId:this.chatId,files:s,subType:A.SidebarDetailBlock.fileUnsorted});const r=this.store.dispatch("sidebar/files/setHasNextPage",{chatId:this.chatId,subType:A.SidebarDetailBlock.fileUnsorted,hasNextPage:s.length===ut});const l=this.store.dispatch("sidebar/files/setLastId",{chatId:this.chatId,subType:A.SidebarDetailBlock.fileUnsorted,lastId:$(s)});return Promise.all([n,o,a,r,l])}getFilesCountFromModel(t){return this.store.getters["sidebar/files/getSize"](this.chatId,t)}getChatId(){const t=this.store.getters["chats/get"](this.dialogId,true);return t.chatId}}const mt={Members:dt,Favorite:O,Link:et,Task:nt,File:st,Meeting:rt,FileUnsorted:gt,Multidialog:ht};const pt=Object.freeze({[G.chat]:[A.SidebarDetailBlock.members],[G.copilot]:[A.SidebarDetailBlock.members],[G.copilotInfo]:[A.SidebarDetailBlock.favorite],[G.info]:[A.SidebarDetailBlock.favorite,A.SidebarDetailBlock.link],[G.file]:[A.SidebarDetailBlock.file],[G.fileUnsorted]:[A.SidebarDetailBlock.fileUnsorted],[G.task]:[A.SidebarDetailBlock.task],[G.meeting]:[A.SidebarDetailBlock.meeting],[G.multidialog]:[A.SidebarDetailBlock.multidialog]});class It{constructor({dialogId:t}){this.blockServices=[];this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.buildBlocks()}async requestInitialData(){const t=this.getInitialQuery();const e=await l.callBatch(t);return this.handleBatchRequestResult(e)}buildBlocks(){const t=this.getServiceClassesForBlocks();this.blockServices=t.map((t=>{const e=new mt[t]({dialogId:this.dialogId});return{initialQuery:e.getInitialQuery(),responseHandler:e.getResponseHandler()}}))}getServiceClassesForBlocks(){const t=[];const e=j(this.dialogId);e.forEach((e=>{const i=pt[e];if(i){t.push(...i)}}));return t.map((t=>L.Text.capitalize(t)))}getInitialQuery(){let t={};this.blockServices.forEach((e=>{t=Object.assign(t,e.initialQuery)}));return t}handleBatchRequestResult(t){const e=[];this.blockServices.forEach((i=>{e.push(i.responseHandler(t))}));return Promise.all(e).then((()=>this.setInited())).catch((t=>console.error(t)))}setInited(){return this.store.dispatch("sidebar/setInited",N(this.dialogId))}}const vt={name:"ChatLinks",directives:{hint:o.hint},props:{dialogId:{type:String,required:true}},data(){return{expanded:false}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},urlCounter(){const t=this.$store.getters["sidebar/links/getCounter"](this.chatId);return this.getCounterString(t)},isLinksAvailable(){return this.$store.state.sidebar.isLinksMigrated},hintDirectiveContent(){return{text:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_LINKS_NOT_AVAILABLE"),popupOptions:{angle:true,targetContainer:document.body,offsetLeft:141,offsetTop:-10,bindOptions:{position:"top"}}}},chatId(){return this.dialog.chatId}},methods:{getCounterString(t){const e=100;if(t>=e){return"99+"}return t.toString()},onLinkClick(){if(!this.isLinksAvailable){return}R.EventEmitter.emit(A.EventType.sidebar.open,{panel:A.SidebarDetailBlock.link,dialogId:this.dialogId})},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-chat-links__container" \n\t\t\t:class="[isLinksAvailable ? '' : '--links-not-active']"\n\t\t\t@click="onLinkClick"\n\t\t>\n\t\t\t<div \n\t\t\t\tv-if="!isLinksAvailable" \n\t\t\t\tclass="bx-im-sidebar-chat-links__hint-not-active" \n\t\t\t\tv-hint="hintDirectiveContent"\n\t\t\t></div>\n\t\t\t<div class="bx-im-sidebar-chat-links__title-container">\n\t\t\t\t<div class="bx-im-sidebar-chat-links__icon"></div>\n\t\t\t\t<div class="bx-im-sidebar-chat-links__title-text">\n\t\t\t\t\t{{ loc('IM_SIDEBAR_LINK_DETAIL_TITLE') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-chat-links__counter-container">\n\t\t\t\t<span class="bx-im-sidebar-chat-links__counter">{{urlCounter}}</span>\n\t\t\t</div>\n\t\t</div>\n\t`};const bt={name:"ChatFavourites",props:{dialogId:{type:String,required:true}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},favoriteCounter(){const t=this.$store.getters["sidebar/favorites/getCounter"](this.chatId);return this.getCounterString(t)},chatId(){return this.dialog.chatId},isCopilotLayout(){const{name:t}=this.$store.getters["application/getLayout"];return t===A.Layout.copilot.name}},methods:{getCounterString(t){const e=100;if(t>=e){return"99+"}return t.toString()},onFavouriteClick(){R.EventEmitter.emit(A.EventType.sidebar.open,{panel:A.SidebarDetailBlock.favorite,dialogId:this.dialogId})},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-chat-favourites__container" \n\t\t\t:class="{'--copilot': isCopilotLayout}"\n\t\t\t@click="onFavouriteClick"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-chat-favourites__title">\n\t\t\t\t<div class="bx-im-sidebar-chat-favourites__icon"></div>\n\t\t\t\t<div class="bx-im-sidebar-chat-favourites__title-text">\n\t\t\t\t\t{{ loc('IM_SIDEBAR_FAVORITE_DETAIL_TITLE') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-chat-favourites__counter-container">\n\t\t\t\t<span class="bx-im-sidebar-chat-favourites__counter">{{favoriteCounter}}</span>\n\t\t\t</div>\n\t\t</div>\n\t`};const _t=25;const ft="\n";const Ct={[A.ChatType.user]:L.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_USER"),[A.ChatType.channel]:L.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_CHANNEL"),[A.ChatType.openChannel]:L.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_CHANNEL"),[A.ChatType.generalChannel]:L.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_CHANNEL"),[A.ChatType.comment]:L.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_COMMENTS"),default:L.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_GROUP_V2")};const xt={name:"ChatDescription",props:{dialogId:{type:String,required:true}},data(){return{expanded:false}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},isUser(){return this.dialog.type===A.ChatType.user},isBot(){const t=this.$store.getters["users/get"](this.dialogId,true);return t.bot===true},isLongDescription(){const t=this.dialog.description.includes(ft);return this.dialog.description.length>_t||t},previewDescription(){if(this.dialog.description.length===0){return this.chatTypeText}if(this.isLongDescription){return`${this.dialog.description.slice(0,_t)}...`}return this.dialog.description},descriptionToShow(){return this.expanded?this.dialog.description:this.previewDescription},chatTypeText(){var t;if(this.isCopilotLayout){return this.$store.getters["copilot/getProvider"]}if(this.isBot){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_BOT")}return(t=Ct[this.dialog.type])!=null?t:Ct.default},showExpandButton(){if(this.expanded){return false}return this.isLongDescription},isCopilotLayout(){const{name:t}=this.$store.getters["application/getLayout"];return t===A.Layout.copilot.name}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-chat-description__container">\n\t\t\t<div class="bx-im-sidebar-chat-description__text-container" :class="[expanded ? '--expanded' : '']">\n\t\t\t\t<div class="bx-im-sidebar-chat-description__icon"></div>\n\t\t\t\t<div class="bx-im-sidebar-chat-description__text"> {{ descriptionToShow }}</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showExpandButton"\n\t\t\t\tclass="bx-im-sidebar-chat-description__show-more-button"\n\t\t\t\t@click="expanded = !expanded"\n\t\t\t>\n\t\t\t\t{{ loc('IM_SIDEBAR_CHAT_DESCRIPTION_SHOW') }}\n\t\t\t</button>\n\t\t</div>\n\t`};const Mt={name:"InfoPreview",components:{ChatDescription:xt,ChatLinks:vt,ChatFavourites:bt},props:{dialogId:{type:String,required:true}},template:`\n\t\t<div class="bx-im-sidebar-info-preview__container">\n\t\t\t<ChatDescription :dialogId="dialogId" />\n\t\t\t<ChatFavourites :dialogId="dialogId" />\n\t\t\t<ChatLinks :dialogId="dialogId" />\n\t\t</div>\n\t`};const St={name:"FilePreviewItem",directives:{lazyload:i.lazyload},props:{fileItem:{type:Object,required:true}},computed:{sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},previewImageStyles(){if(!this.hasPreview){return{}}return{backgroundImage:`url('${this.file.urlPreview}')`}},hasPreview(){return this.file.urlPreview!==""},fileShortName(){const t=22;return D.Utils.file.getShortFileName(this.file.name,t)},viewerAttributes(){return D.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isImage(){return this.file.type==="image"},isVideo(){return this.file.type==="video"},isAudio(){return this.file.type==="audio"},fileIconClass(){return`ui-icon ui-icon-file-${this.file.icon}`},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-preview-item__container bx-im-sidebar-file-preview-item__scope" \n\t\t\tv-bind="viewerAttributes" \n\t\t\t@click="download" \n\t\t\t:title="file.name"\n\t\t>\n\t\t\t<img\n\t\t\t\tv-if="isImage"\n\t\t\t\tv-lazyload\n\t\t\t\tdata-lazyload-dont-hide\n\t\t\t\t:data-lazyload-src="file.urlShow"\n\t\t\t\t:title="file.name"\n\t\t\t\t:alt="file.name"\n\t\t\t\tclass="bx-im-sidebar-file-preview-item__preview-box"\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tv-else-if="isVideo" \n\t\t\t\tclass="bx-im-sidebar-file-preview-item__preview-box bx-im-sidebar-file-preview-item__preview-video-box"\n\t\t\t\t:style="previewImageStyles"\n\t\t\t>\n\t\t\t\t<video v-if="!hasPreview" class="bx-im-sidebar-file-preview-item__preview-video" preload="metadata" :src="file.urlDownload"></video>\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-video-play-button"></div>\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-video-play-icon"></div>\n\t\t\t</div>\n\t\t\t<div v-else-if="isAudio" class="bx-im-sidebar-file-preview-item__preview-box">\n\t\t\t\t<div class="bx-im-sidebar-file-preview-item__preview-audio-play-button"></div>\n\t\t\t</div>\n\t\t\t<div v-else class="bx-im-sidebar-file-preview-item__preview-box">\n\t\t\t\t<div :class="fileIconClass"><i></i></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-file-preview-item__text">{{ fileShortName }}</div>\n\t\t</div>\n\t`};const Tt={name:"DetailEmptyState",props:{title:{type:String,required:true},iconType:{type:String,required:true}},computed:{iconClass(){return`--${L.Text.toKebabCase(this.iconType)}`}},template:`\n\t\t<div class="bx-im-sidebar-detail-empty-state__container bx-im-sidebar-detail-empty-state__scope">\n\t\t\t<span class="bx-im-sidebar-detail-empty-state__icon" :class="[iconClass]"></span>\n\t\t\t<span class="bx-im-sidebar-detail-empty-state__text">{{ title }}</span>\n\t\t</div>\n\t`};const Lt={name:"FilePreview",components:{DetailEmptyState:Tt,FilePreviewItem:St},props:{dialogId:{type:String,required:true}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,files(){if(this.isMigrationFinished){return this.$store.getters["sidebar/files/getLatest"](this.chatId)}return this.$store.getters["sidebar/files/getLatestUnsorted"](this.chatId)},hasFiles(){return this.files.length>0},isMigrationFinished(){return this.$store.state.sidebar.isFilesMigrated},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},methods:{onOpenDetail(){if(!this.hasFiles){return}const t=this.isMigrationFinished?A.SidebarDetailBlock.file:A.SidebarDetailBlock.fileUnsorted;R.EventEmitter.emit(A.EventType.sidebar.open,{panel:t,dialogId:this.dialogId})}},template:`\n\t\t<div class="bx-im-sidebar-file-preview__scope">\n\t\t\t<div class="bx-im-sidebar-file-preview__container">\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-file-preview__header_container" \n\t\t\t\t\t:class="[hasFiles ? '--active': '']" \n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<span class="bx-im-sidebar-file-preview__title-text">\n\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_DETAIL_TITLE') }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<div v-if="hasFiles" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="hasFiles" class="bx-im-sidebar-file-preview__files-container">\n\t\t\t\t\t<FilePreviewItem v-for="file in files" :fileItem="file" />\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-else\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_AND_FILES_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.media"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};class kt extends a.BaseMenu{constructor(){super();this.id="im-sidebar-context-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName()}}getOpenContextMessageItem(){if(!this.context.messageId||this.context.messageId===0){return null}return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_GO_TO_CONTEXT_MESSAGE"),onclick:()=>{R.EventEmitter.emit(A.EventType.dialog.goToMessageContext,{messageId:this.context.messageId,dialogId:this.context.dialogId});this.menuInstance.close()}}}getCopyLinkItem(t){if(!BX.clipboard.isCopySupported()){return null}return{text:t,onclick:()=>{if(BX.clipboard.copy(this.context.source)){BX.UI.Notification.Center.notify({content:L.Loc.getMessage("IM_SIDEBAR_COPIED_SUCCESS")})}this.menuInstance.close()}}}}class yt{constructor(){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient()}delete({id:t,chatId:e}){this.store.dispatch("sidebar/tasks/delete",{chatId:e,id:t});const i={LINK_ID:t};this.restClient.callMethod(A.RestMethod.imChatTaskDelete,i).catch((t=>{console.error("Im.Sidebar: error deleting task",t)}))}}class Dt extends kt{constructor(){super();this.id="im-sidebar-context-menu";this.taskManager=new yt}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(L.Loc.getMessage("IM_SIDEBAR_MENU_COPY_TASK_LINK")),this.getDeleteItem()]}getDeleteItem(){return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_TASK_CONNECTION"),onclick:function(){this.taskManager.delete(this.context.task);this.menuInstance.close()}.bind(this)}}}const Bt={name:"TaskItem",components:{ChatAvatar:w.ChatAvatar,AvatarSize:w.AvatarSize},props:{task:{type:Object,required:true},contextDialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>w.AvatarSize,taskItem(){return this.task},taskTitle(){return this.taskItem.task.title},taskAuthorDialogId(){return this.taskItem.task.creatorId.toString()},taskResponsibleDialogId(){return this.taskItem.task.responsibleId.toString()},taskDeadlineText(){const t=L.Type.isStringFilled(this.taskItem.task.state)?this.taskItem.task.state:this.taskItem.task.statusTitle;return D.Utils.text.convertHtmlEntities(t)},taskBackgroundColorClass(){if(this.taskItem.task.status===5){return"--completed"}return""},statusColorClass(){if(!this.taskItem.task.color||!s.LabelColor[this.taskItem.task.color.toUpperCase()]){return""}return`ui-label-${this.taskItem.task.color.toLowerCase()}`}},methods:{onTaskClick(){BX.SidePanel.Instance.open(this.taskItem.task.source,{cacheable:false})},onContextMenuClick(t){this.$emit("contextMenuClick",{task:this.taskItem,source:this.taskItem.task.source,messageId:this.taskItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-task-item__container bx-im-sidebar-task-item__scope" \n\t\t\t:class="taskBackgroundColorClass"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-task-item__content" @click="onTaskClick">\n\t\t\t\t<div class="bx-im-sidebar-task-item__header-text" :title="taskTitle">\n\t\t\t\t\t{{ taskTitle }}\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-task-item__detail-container">\n\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t:avatarDialogId="taskAuthorDialogId"\n\t\t\t\t\t\t:contextDialogId="contextDialogId"\n\t\t\t\t\t/>\n\t\t\t\t\t<div class="bx-im-sidebar-task-item__forward-small-icon bx-im-sidebar__forward-small-icon"></div>\n\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\t:avatarDialogId="taskResponsibleDialogId" \n\t\t\t\t\t\t:contextDialogId="contextDialogId" \n\t\t\t\t\t\t:size="AvatarSize.XS" \n\t\t\t\t\t/>\n\t\t\t\t\t<div class="bx-im-sidebar-task-item__status-text" :class="statusColorClass">\n\t\t\t\t\t\t{{taskDeadlineText}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const Et={name:"TaskPreview",components:{DetailEmptyState:Tt,TaskItem:Bt,MessengerButton:w.Button},props:{dialogId:{type:String,required:true}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,ButtonSize:()=>w.ButtonSize,ButtonColor:()=>w.ButtonColor,firstTask(){return this.$store.getters["sidebar/tasks/get"](this.chatId)[0]},showAddButton(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.createTask,this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},isCopilotLayout(){const{name:t}=this.$store.getters["application/getLayout"];return t===A.Layout.copilot.name},addButtonColor(){if(this.isCopilotLayout){return this.ButtonColor.Copilot}return this.ButtonColor.PrimaryLight}},created(){this.contextMenu=new Dt},beforeUnmount(){this.contextMenu.destroy()},methods:{getEntityCreator(){return new _.EntityCreator(this.chatId)},onAddClick(){void this.getEntityCreator().createTaskForChat()},onOpenDetail(){if(!this.firstTask){return}R.EventEmitter.emit(A.EventType.sidebar.open,{panel:A.SidebarDetailBlock.task,dialogId:this.dialogId})},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-task-preview__scope">\n\t\t\t<div class="bx-im-sidebar-task-preview__container">\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-task-preview__header_container"\n\t\t\t\t\t:class="[firstTask ? '--active': '']"\n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-task-preview__title">\n\t\t\t\t\t\t<span class="bx-im-sidebar-task-preview__title-text">\n\t\t\t\t\t\t\t{{ loc('IM_SIDEBAR_TASK_DETAIL_TITLE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div v-if="firstTask" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<transition name="add-button">\n\t\t\t\t\t\t<MessengerButton\n\t\t\t\t\t\t\tv-if="showAddButton"\n\t\t\t\t\t\t\t:text="loc('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="addButtonColor"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="onAddClick"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-task-preview__title-button"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t\t<TaskItem \n\t\t\t\t\tv-if="firstTask"\n\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t:task="firstTask" @contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t\t<DetailEmptyState \n\t\t\t\t\tv-else \n\t\t\t\t\t:title="loc('IM_SIDEBAR_TASKS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.task"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};class Pt extends a.RecentMenu{constructor(){super();this.id="im-sidebar-context-menu";this.permissionManager=x.PermissionManager.getInstance()}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:false}}getMenuItems(){return[this.getUnreadMessageItem(),this.getPinMessageItem(),this.getCallItem(),this.getOpenProfileItem(),this.getOpenUserCalendarItem(),this.getChatsWithUserItem(),this.getAddMembersToChatItem(),this.getHideItem(),this.getLeaveItem()]}getOpenUserCalendarItem(){if(!this.isUser()){return null}if(this.isBot()){return null}const t=D.Utils.user.getCalendarLink(this.context.dialogId);return{text:L.Loc.getMessage("IM_LIB_MENU_OPEN_CALENDAR_V2"),onclick:()=>{BX.SidePanel.Instance.open(t);this.menuInstance.close()}}}getAddMembersToChatItem(){if(this.isBot()){return null}const t=this.permissionManager.canPerformAction(A.ChatActionType.extend,this.context.dialogId);if(!t){return null}return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_INVITE_MEMBERS_V2"),onclick:()=>{this.emit(Pt.events.onAddToChatShow);this.menuInstance.close()}}}}Pt.events={onAddToChatShow:"onAddToChatShow"};const At={[A.ChatType.channel]:L.Loc.getMessage("IM_SIDEBAR_CHANNEL_HEADER_TITLE"),[A.ChatType.openChannel]:L.Loc.getMessage("IM_SIDEBAR_CHANNEL_HEADER_TITLE"),[A.ChatType.generalChannel]:L.Loc.getMessage("IM_SIDEBAR_CHANNEL_HEADER_TITLE"),[A.ChatType.comment]:L.Loc.getMessage("IM_SIDEBAR_COMMENTS_HEADER_TITLE"),default:L.Loc.getMessage("IM_SIDEBAR_HEADER_TITLE")};const wt=new Set([A.ChatType.comment]);const Rt={name:"MainHeader",components:{AddToChat:f.AddToChat},props:{dialogId:{type:String,required:true}},data(){return{showAddToChatPopup:false}},computed:{recentItem(){return this.$store.getters["recent/get"](this.dialogId,true)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},headerTitle(){var t;return(t=At[this.dialog.type])!=null?t:At.default},showMenuIcon(){return this.canOpenMenu&&this.isMenuEnabledForType},canOpenMenu(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.openSidebarMenu,this.dialogId)},isMenuEnabledForType(){return!wt.has(this.dialog.type)}},created(){this.contextMenu=new Pt;this.contextMenu.subscribe(Pt.events.onAddToChatShow,this.onAddChatShow)},beforeUnmount(){this.contextMenu.destroy();this.contextMenu.unsubscribe(Pt.events.onAddToChatShow,this.onAddChatShow)},methods:{onAddChatShow(){this.showAddToChatPopup=true},onContextMenuClick(t){const e={dialogId:this.dialogId,...this.recentItem};this.contextMenu.openMenu(e,t.target)},onSidebarCloseClick(){R.EventEmitter.emit(A.EventType.sidebar.close)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-header__container bx-im-sidebar-header__scope">\n\t\t\t<div class="bx-im-sidebar-header__title-container">\n\t\t\t\t<button \n\t\t\t\t\tclass="bx-im-sidebar-header__cross-icon bx-im-messenger__cross-icon" \n\t\t\t\t\t@click="onSidebarCloseClick"\n\t\t\t\t></button>\n\t\t\t\t<div class="bx-im-sidebar-header__title">{{ headerTitle }}</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showMenuIcon"\n\t\t\t\tclass="bx-im-sidebar-header__context-menu-icon bx-im-messenger__context-menu-icon"\n\t\t\t\t@click="onContextMenuClick"\n\t\t\t\tref="context-menu"\n\t\t\t></button>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['context-menu'] || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 0, offsetLeft: -420}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const Ft={name:"MarketItem",props:{item:{type:Object,required:true}},computed:{marketItem(){return this.item},iconClass(){return`fa ${this.marketItem.options.iconName}`},iconColor(){return this.marketItem.options.color}},template:`\n\t\t<div class="bx-im-sidebar-market-preview-item__container bx-im-sidebar-market-preview-item__scope">\n\t\t\t<div class="bx-im-sidebar-market-preview-item__icon-container" :style="{backgroundColor: iconColor}">\n\t\t\t\t<i :class="iconClass" aria-hidden="true"></i>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-market-preview-item__title-container" :title="marketItem.title">\n\t\t\t\t{{ marketItem.title }}\n\t\t\t</div>\n\t\t</div>\n\t`};const Nt={name:"MarketPreview",components:{MarketItem:Ft},props:{dialogId:{type:String,required:true}},emits:["openDetail"],computed:{marketMenuItems(){return b.MarketManager.getInstance().getAvailablePlacementsByType(A.PlacementType.sidebar,this.dialogId)}},methods:{onMarketItemClick(t){R.EventEmitter.emit(A.EventType.sidebar.open,{panel:A.SidebarDetailBlock.market,dialogId:this.dialogId,entityId:t})},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-market-preview__scope bx-im-sidebar-market-preview__container">\n\t\t\t<div class="bx-im-sidebar-market-preview__header_container">\n\t\t\t\t<div class="bx-im-sidebar-market-preview__title">\n\t\t\t\t\t<span class="bx-im-sidebar-market-preview__title-text">\n\t\t\t\t\t\t{{ loc('IM_SIDEBAR_MARKET_DETAIL_TITLE') }}\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<MarketItem \n\t\t\t\tv-for="item in marketMenuItems" \n\t\t\t\t:key="item.id"\n\t\t\t\t:item="item"\n\t\t\t\t@click="onMarketItemClick(item.id)"\n\t\t\t/>\n\t\t</div>\n\t`};class $t{constructor(){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient()}delete({id:t,chatId:e}){this.store.dispatch("sidebar/meetings/delete",{chatId:e,id:t});const i={LINK_ID:t};this.restClient.callMethod(A.RestMethod.imChatCalendarDelete,i).catch((t=>{console.error("Im.Sidebar: error deleting meeting",t)}))}}class Ut extends kt{constructor(){super();this.id="im-sidebar-context-menu";this.meetingManager=new $t}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(L.Loc.getMessage("IM_SIDEBAR_MENU_COPY_MEETING_LINK")),this.getDeleteItem()]}getDeleteItem(){return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_MEETING_CONNECTION"),onclick:function(){this.meetingManager.delete(this.context.meeting);this.menuInstance.close()}.bind(this)}}}const Ot={name:"MeetingItem",props:{meeting:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{meetingItem(){return this.meeting},title(){return this.meetingItem.meeting.title},date(){const t=this.meetingItem.meeting.dateFrom;return F.DateFormatter.formatByTemplate(t,F.DateTemplate.meeting)},day(){return this.meetingItem.meeting.dateFrom.getDate().toString()},monthShort(){return n.DateTimeFormat.format("M",this.meetingItem.meeting.dateFrom)},isActive(){return this.meetingItem.meeting.dateFrom.getTime()>Date.now()}},methods:{onMeetingClick(){new(window.top.BX||window.BX).Calendar.SliderLoader(this.meetingItem.meeting.id).show()},onContextMenuClick(t){this.$emit("contextMenuClick",{meeting:this.meetingItem,source:this.meetingItem.meeting.source,messageId:this.meetingItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-meeting-item__container bx-im-sidebar-meeting-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div \n\t\t\t\tclass="bx-im-sidebar-meeting-item__icon-container"\n\t\t\t\t:class="[isActive ? '--active' : '--inactive']"\n\t\t\t>\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__day-text">{{ day }}</div>\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__month-text">{{ monthShort }}</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-meeting-item__content-container" @click="onMeetingClick">\n\t\t\t\t<div class="bx-im-sidebar-meeting-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-item__title" :title="title">{{ title }}</div>\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-item__date">{{ date }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button \n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const Ht={name:"MeetingPreview",components:{MeetingItem:Ot,DetailEmptyState:Tt,MessengerButton:w.Button},props:{dialogId:{type:String,required:true}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,ButtonSize:()=>w.ButtonSize,ButtonColor:()=>w.ButtonColor,firstMeeting(){return this.$store.getters["sidebar/meetings/get"](this.chatId)[0]},showAddButton(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.createMeeting,this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},isCopilotLayout(){const{name:t}=this.$store.getters["application/getLayout"];return t===A.Layout.copilot.name},addButtonColor(){if(this.isCopilotLayout){return this.ButtonColor.Copilot}return this.ButtonColor.PrimaryLight}},created(){this.contextMenu=new Ut},beforeUnmount(){this.contextMenu.destroy()},methods:{getEntityCreator(){return new _.EntityCreator(this.chatId)},onAddClick(){void this.getEntityCreator().createMeetingForChat()},onOpenDetail(){if(!this.firstMeeting){return}R.EventEmitter.emit(A.EventType.sidebar.open,{panel:A.SidebarDetailBlock.meeting,dialogId:this.dialogId})},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-meeting-preview__scope">\n\t\t\t<div class="bx-im-sidebar-meeting-preview__container">\n\t\t\t\t<div\n\t\t\t\t\tclass="bx-im-sidebar-meeting-preview__header_container"\n\t\t\t\t\t:class="[firstMeeting ? '--active': '']"\n\t\t\t\t\t@click="onOpenDetail"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-meeting-preview__title">\n\t\t\t\t\t\t<span class="bx-im-sidebar-meeting-preview__title-text">\n\t\t\t\t\t\t\t{{ loc('IM_SIDEBAR_MEETING_DETAIL_TITLE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<div v-if="firstMeeting" class="bx-im-sidebar__forward-icon"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<transition name="add-button">\n\t\t\t\t\t\t<MessengerButton\n\t\t\t\t\t\t\tv-if="showAddButton"\n\t\t\t\t\t\t\t:text="loc('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="addButtonColor"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="onAddClick"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-meeting-preview__title-button"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</transition>\n\t\t\t\t</div>\n\t\t\t\t<MeetingItem v-if="firstMeeting" :meeting="firstMeeting" @contextMenuClick="onContextMenuClick"/>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-else\n\t\t\t\t\t:title="loc('IM_SIDEBAR_MEETINGS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.meeting"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const Gt={name:"CopilotInfoPreview",components:{ChatDescription:xt,ChatLinks:vt,ChatFavourites:bt},props:{dialogId:{type:String,required:true}},template:`\n\t\t<div class="bx-im-sidebar-info-preview__container">\n\t\t\t<ChatDescription :dialogId="dialogId" />\n\t\t\t<ChatFavourites :dialogId="dialogId" />\n\t\t</div>\n\t`};const zt={name:"MuteChat",directives:{hint:o.hint},components:{Toggle:w.Toggle},props:{dialogId:{type:String,required:true}},computed:{ToggleSize:()=>w.ToggleSize,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},isGroupChat(){return this.dialogId.startsWith("chat")},canBeMuted(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.mute,this.dialogId)},isChatMuted(){const t=this.dialog.muteList.find((t=>t===E.Core.getUserId()));return Boolean(t)},hintMuteNotAvailable(){if(this.canBeMuted){return null}return{text:this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MUTE_NOT_AVAILABLE"),popupOptions:{angle:true,targetContainer:document.body,offsetLeft:141,offsetTop:-10,bindOptions:{position:"top"}}}},isCopilotLayout(){const{name:t}=this.$store.getters["application/getLayout"];return t===A.Layout.copilot.name}},methods:{getChatService(){if(!this.chatService){this.chatService=new S.ChatService}return this.chatService},muteActionHandler(){if(!this.canBeMuted){return}if(this.isChatMuted){this.getChatService().unmuteChat(this.dialogId)}else{this.getChatService().muteChat(this.dialogId)}},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div\n\t\t\tv-if="isGroupChat"\n\t\t\tclass="bx-im-sidebar-mute-chat__container"\n\t\t\t:class="{'--not-active': !canBeMuted, '--copilot': isCopilotLayout}"\n\t\t\tv-hint="hintMuteNotAvailable"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-mute-chat__title">\n\t\t\t\t<div class="bx-im-sidebar-mute-chat__title-text bx-im-sidebar-mute-chat__icon">\n\t\t\t\t\t{{ loc('IM_SIDEBAR_ENABLE_NOTIFICATION_TITLE_2') }}\n\t\t\t\t</div>\n\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="!isChatMuted" @click="muteActionHandler" />\n\t\t\t</div>\n\t\t</div>\n\t`};const qt={name:"AutoDelete",directives:{hint:o.hint},components:{Toggle:w.Toggle},computed:{ToggleSize:()=>w.ToggleSize,hintAutoDeleteNotAvailable(){return{text:this.loc("IM_MESSENGER_NOT_AVAILABLE"),popupOptions:{bindOptions:{position:"top"},angle:true,targetContainer:document.body,offsetLeft:125,offsetTop:-10}}}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-auto-delete__container --not-active" v-hint="hintAutoDeleteNotAvailable">\n\t\t\t<div class="bx-im-sidebar-auto-delete__title">\n\t\t\t\t<div class="bx-im-sidebar-auto-delete__title-text bx-im-sidebar-auto-delete__icon">\n\t\t\t\t\t{{ loc('IM_SIDEBAR_ENABLE_AUTODELETE_TITLE') }}\n\t\t\t\t</div>\n\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="false" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-auto-delete__status">\n\t\t\t\t{{ loc('IM_SIDEBAR_AUTODELETE_STATUS_OFF') }}\n\t\t\t</div>\n\t\t</div>\n\t`};const Xt={name:"ChatMembersAvatars",components:{ChatAvatar:w.ChatAvatar,MessengerButton:w.Button,AddToChat:f.AddToChat},props:{dialogId:{type:String,required:true},showMembers:{type:Boolean,default:true}},data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>w.AvatarSize,ButtonSize:()=>w.ButtonSize,ButtonColor:()=>w.ButtonColor,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},dialogIds(){const t=4;const e=this.$store.getters["sidebar/members/get"](this.chatId);return e.map((t=>t.toString())).slice(0,t)},canSeeMembers(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.userList,this.dialogId)},canInviteMembers(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.extend,this.dialogId)},usersInChatCount(){return this.dialog.userCounter},moreUsersCount(){return Math.max(this.usersInChatCount-this.dialogIds.length,0)},isCopilotLayout(){const{name:t}=this.$store.getters["application/getLayout"];return t===A.Layout.copilot.name},addUsersButtonColor(){if(this.isCopilotLayout){return this.ButtonColor.Copilot}return this.ButtonColor.PrimaryLight}},methods:{onOpenUsers(){R.EventEmitter.emit(A.EventType.sidebar.open,{panel:A.SidebarDetailBlock.members,dialogId:this.dialogId})},onOpenInvitePopup(){this.showAddToChatPopup=true},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-chat-members-avatars__container">\n\t\t\t<div v-if="canSeeMembers && showMembers" class="bx-im-sidebar-chat-members-avatars__members" @click="onOpenUsers">\n\t\t\t\t<div class="bx-im-sidebar-chat-members-avatars__avatars" >\n\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\tv-for="id in dialogIds"\n\t\t\t\t\t\t:size="AvatarSize.S"\n\t\t\t\t\t\t:avatarDialogId="id"\n\t\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t\tclass="bx-im-sidebar-chat-members-avatars__avatar"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="moreUsersCount > 0" class="bx-im-sidebar-chat-members-avatars__text">\n\t\t\t\t\t+{{ moreUsersCount }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div ref="add-members">\n\t\t\t\t<MessengerButton\n\t\t\t\t\tv-if="canInviteMembers"\n\t\t\t\t\t:text="loc('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t:color="addUsersButtonColor"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\ticon="plus"\n\t\t\t\t\t@click="onOpenInvitePopup"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: -220, offsetLeft: -420}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};const Vt={name:"ChatPreview",components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle,MuteChat:zt,ChatMembersAvatars:Xt,AutoDelete:qt},props:{dialogId:{type:String,required:true}},computed:{AvatarSize:()=>w.AvatarSize},template:`\n\t\t<div class="bx-im-sidebar-main-preview__scope">\n\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__avatar-container">\n\t\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__avatar">\n\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\t:avatarDialogId="dialogId" \n\t\t\t\t\t\t:contextDialogId="dialogId" \n\t\t\t\t\t\t:size="AvatarSize.XXXL" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<ChatTitle :dialogId="dialogId" :twoLine="true" class="bx-im-sidebar-main-preview-group-chat__title" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__chat-members">\n\t\t\t\t<ChatMembersAvatars :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__settings">\n\t\t\t\t<MuteChat :dialogId="dialogId" />\n\t\t\t\t<AutoDelete />\n\t\t\t</div>\n\t\t</div>\n\t`};const Qt={name:"PostPreview",components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle,MuteChat:zt,ChatMembersAvatars:Xt,AutoDelete:qt},props:{dialogId:{type:String,required:true}},computed:{AvatarSize:()=>w.AvatarSize,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},postDialog(){return this.$store.getters["chats/getByChatId"](this.dialog.parentChatId)}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-main-preview-post__scope">\n\t\t\t<div class="bx-im-sidebar-main-preview-post__avatar-container">\n\t\t\t\t<div class="bx-im-sidebar-main-preview-post__avatar">\n\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t:avatarDialogId="postDialog.dialogId"\n\t\t\t\t\t\t:contextDialogId="postDialog.dialogId"\n\t\t\t\t\t\t:size="AvatarSize.XXXL" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-main-preview-post__title">{{ loc('IM_SIDEBAR_COMMENTS_POST_PREVIEW_TITLE') }}</div>\n\t\t\t\t<div class="bx-im-sidebar-main-preview-post__subtitle">{{ postDialog.name }}</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-preview-post__settings">\n\t\t\t\t\x3c!-- TODO: follow toggle --\x3e\n\t\t\t</div>\n\t\t</div>\n\t`};const Kt={name:"UserPreview",directives:{hint:o.hint},components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle,MessengerButton:w.Button,AddToChat:f.AddToChat,AutoDelete:qt},props:{dialogId:{type:String,required:true}},data(){return{showAddToChatPopup:false}},computed:{AvatarSize:()=>w.AvatarSize,ButtonSize:()=>w.ButtonSize,ButtonColor:()=>w.ButtonColor,userPosition(){return this.$store.getters["users/getPosition"](this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},canInviteMembers(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.extend,this.dialogId)},showInviteButton(){if(this.isBot){return false}return this.canInviteMembers},userLink(){return D.Utils.user.getProfileLink(this.dialogId)},isBot(){return this.user.bot===true}},methods:{onAddClick(){this.showAddToChatPopup=true}},template:`\n\t\t<div class="bx-im-sidebar-main-preview__scope">\n\t\t\t<div class="bx-im-sidebar-main-preview-personal-chat__avatar-container">\n\t\t\t\t<ChatAvatar\n\t\t\t\t\t:avatarDialogId="dialogId"\n\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t:size="AvatarSize.XXXL"\n\t\t\t\t\tclass="bx-im-sidebar-main-preview-personal-chat__avatar"\n\t\t\t\t/>\n\t\t\t\t<a :href="userLink" target="_blank">\n\t\t\t\t\t<ChatTitle :dialogId="dialogId" class="bx-im-sidebar-main-preview-personal-chat__user-name" />\n\t\t\t\t</a>\n\t\t\t\t<div class="bx-im-sidebar-main-preview-personal-chat__user-position" :title="userPosition">\n\t\t\t\t\t{{ userPosition }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tv-if="showInviteButton" \n\t\t\t\tclass="bx-im-sidebar-main-preview-personal-chat__invite-button-container" \n\t\t\t\tref="add-members"\n\t\t\t>\n\t\t\t\t<MessengerButton\n\t\t\t\t\tv-if="canInviteMembers"\n\t\t\t\t\t:text="$Bitrix.Loc.getMessage('IM_SIDEBAR_CREATE_GROUP_CHAT')"\n\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\ticon="plus"\n\t\t\t\t\t@click="onAddClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-preview-personal-chat__auto-delete-container">\n\t\t\t\t<AutoDelete :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="$refs['add-members'] || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: -220, offsetLeft: -320}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};var jt=babelHelpers.classPrivateFieldLooseKey("store");var Yt=babelHelpers.classPrivateFieldLooseKey("sendRequest");class Wt{constructor(){Object.defineProperty(this,Yt,{value:Jt});Object.defineProperty(this,jt,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,jt)[jt]=E.Core.getStore()}updateRole({dialogId:t,role:e}){T.Logger.warn("CopilotService: update role",t);void babelHelpers.classPrivateFieldLooseBase(this,jt)[jt].dispatch("copilot/chats/add",{dialogId:t,role:e.code});void babelHelpers.classPrivateFieldLooseBase(this,jt)[jt].dispatch("copilot/roles/add",[e]);return babelHelpers.classPrivateFieldLooseBase(this,Yt)[Yt]({dialogId:t,role:e.code})}}function Jt({dialogId:t,role:e}){const i={data:{dialogId:t,role:e}};return l.runAction(A.RestMethod.imV2ChatCopilotUpdateRole,i)}const Zt={name:"ChangeRolePromo",components:{MessengerPopup:w.MessengerPopup},props:{bindElement:{type:Object,required:true}},emits:["hide","accept"],computed:{text(){return L.Loc.getMessage("IM_SIDEBAR_COPILOT_CHANGE_ROLE_PROMO_TEXT",{"[copilot_color]":'<em class="bx-im-copilot-change-role-promo__copilot">',"[/copilot_color]":"</em>"})},videoSource(){const t="/bitrix/js/im/v2/component/sidebar/src/components/elements/copilot-role/css/videos/";const e={ru:"copilot-roles-promo-ru.webm",en:"copilot-roles-promo-en.webm"};const i=L.Loc.getMessage("LANGUAGE_ID");return i==="ru"?`${t}${e.ru}`:`${t}${e.en}`}},created(){this.promoPopup=new d.PromoVideoPopup({videoSrc:this.videoSource,title:"Copilot",text:this.text,targetOptions:this.bindElement,angleOptions:{position:BX.UI.AnglePosition.RIGHT,offset:98},colors:{iconBackground:"#8e52ec",title:"#b095dc"},icon:BX.UI.IconSet.Main.COPILOT_AI,offset:{top:-125,left:-510}});this.promoPopup.subscribe(d.PromoVideoPopupEvents.ACCEPT,this.onAccept);this.promoPopup.subscribe(d.PromoVideoPopupEvents.HIDE,this.onHide)},mounted(){this.promoPopup.show()},beforeUnmount(){if(!this.promoPopup){return}this.promoPopup.hide();this.promoPopup.unsubscribe(d.PromoVideoPopupEvents.ACCEPT,this.onAccept);this.promoPopup.unsubscribe(d.PromoVideoPopupEvents.HIDE,this.onHide)},methods:{onHide(){this.$emit("hide");this.promoPopup.hide()},onAccept(){this.$emit("accept");this.promoPopup.hide()},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<template></template>\n\t`};const te={name:"CopilotRole",components:{ChangeRolePromo:Zt,CopilotRolesDialog:w.CopilotRolesDialog},props:{dialogId:{type:String,required:true}},data(){return{shouldShowChangeRolePromo:false,showRolesDialog:false}},computed:{chatRole(){const t=this.$store.getters["copilot/chats/getRole"](this.dialogId);if(!t){return this.$store.getters["copilot/roles/getDefault"]}return t},roleName(){return this.chatRole.name},canShowChangeRolePromo(){const t=r.PromoManager.getInstance().needToShow(A.PromoId.addUsersToCopilotChat);const e=r.PromoManager.getInstance().needToShow(A.PromoId.changeRoleCopilot);return!t&&e}},mounted(){setTimeout((()=>{this.shouldShowChangeRolePromo=this.canShowChangeRolePromo}),300)},beforeUnmount(){this.showRolesDialog=false;this.shouldShowChangeRolePromo=false},methods:{handleChangeRole(){this.showRolesDialog=true},loc(t){return this.$Bitrix.Loc.getMessage(t)},onChangeRolePromoAccept(){this.shouldShowChangeRolePromo=false;void r.PromoManager.getInstance().markAsWatched(A.PromoId.changeRoleCopilot)},onCopilotDialogSelectRole(t){void(new Wt).updateRole({dialogId:this.dialogId,role:t})}},template:`\n\t\t<div class="bx-im-sidebar-copilot-role__container" @click="handleChangeRole" ref="change-role">\n\t\t\t<div class="bx-im-sidebar-copilot-role__title">\n\t\t\t\t<div class="bx-im-sidebar-copilot-role__title-icon"></div>\n\t\t\t\t<div class="bx-im-sidebar-copilot-role__title-text">\n\t\t\t\t\t{{ roleName }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-copilot-role__arrow-icon"></div>\n\t\t\t<ChangeRolePromo \n\t\t\t\tv-if="shouldShowChangeRolePromo"\n\t\t\t\t:bindElement="$refs['change-role']"\n\t\t\t\t@accept="onChangeRolePromoAccept"\n\t\t\t\t@hide="shouldShowChangeRolePromo = false"\n\t\t\t/>\n\t\t\t<CopilotRolesDialog\n\t\t\t\tv-if="showRolesDialog"\n\t\t\t\t:title="loc('IM_SIDEBAR_COPILOT_CHANGE_ROLE_DIALOG_TITLE')"\n\t\t\t\t@selectRole="onCopilotDialogSelectRole"\n\t\t\t\t@close="showRolesDialog = false"\n\t\t\t/>\n\t\t</div>\n\t`};const ee={name:"CopilotPreview",components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle,MuteChat:zt,ChatMembersAvatars:Xt,CopilotRole:te},props:{dialogId:{type:String,required:true}},computed:{AvatarSize:()=>w.AvatarSize,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},showMembers(){return this.dialog.userCounter>2}},template:`\n\t\t<div class="bx-im-sidebar-copilot-preview__scope">\n\t\t\t<div class="bx-im-sidebar-copilot-preview-group-chat__avatar-container">\n\t\t\t\t<ChatAvatar\n\t\t\t\t\t:avatarDialogId="dialogId"\n\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t:size="AvatarSize.XXXL"\n\t\t\t\t\t:withSpecialTypes="false"\n\t\t\t\t/>\n\t\t\t\t<ChatTitle :dialogId="dialogId" :twoLine="true" class="bx-im-sidebar-copilot-preview-group-chat__title" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-copilot-preview-group-chat__chat-members">\n\t\t\t\t<ChatMembersAvatars :showMembers="showMembers" :dialogId="dialogId" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-copilot-preview-group-chat__settings">\n\t\t\t\t<CopilotRole :dialogId="dialogId" />\n\t\t\t\t<MuteChat :dialogId="dialogId" />\n\t\t\t</div>\n\t\t</div>\n\t`};const ie={name:"SupportPreview",components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle,AutoDelete:qt},props:{dialogId:{type:String,required:true}},computed:{AvatarSize:()=>w.AvatarSize},template:`\n\t\t<div class="bx-im-sidebar-main-preview__scope">\n\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__avatar-container">\n\t\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__avatar">\n\t\t\t\t\t<ChatAvatar :size="AvatarSize.XXXL" :avatarDialogId="dialogId" :contextDialogId="dialogId" />\n\t\t\t\t</div>\n\t\t\t\t<ChatTitle :dialogId="dialogId" :twoLine="true" class="bx-im-sidebar-main-preview-group-chat__title" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-preview-group-chat__settings">\n\t\t\t\t<AutoDelete />\n\t\t\t</div>\n\t\t</div>\n\t`};const se={name:"MultidialogPreview",props:{dialogId:{type:String,required:true}},computed:{chatId(){return this.$store.getters["chats/get"](this.dialogId,true).chatId},numberRequests(){const t=this.$store.getters["sidebar/multidialog/getChatsCount"];return t>999?"999+":t},totalChatCounter(){const t=this.$store.getters["sidebar/multidialog/getTotalChatCounter"];return t>99?"99+":t}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)},onOpenDetail(){R.EventEmitter.emit(A.EventType.sidebar.open,{panel:A.SidebarDetailBlock.multidialog,dialogId:this.dialogId,standalone:true})}},template:`\n\t\t<div class="bx-im-sidebar-multidialog-preview__scope">\n\t\t\t<div class="bx-im-sidebar-multidialog-preview__container" @click="onOpenDetail">\n\t\t\t\t<div class="bx-im-sidebar-multidialog-preview__questions-container">\n\t\t\t\t\t<div class="bx-im-sidebar-multidialog-preview__questions-text">\n\t\t\t\t\t\t{{ loc('IM_SIDEBAR_SUPPORT_TICKET_TITLE') }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar-multidialog-preview__questions-count">\n\t\t\t\t\t\t{{ numberRequests }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-multidialog-preview__new-message-container">\n\t\t\t\t\t<div v-if="totalChatCounter" class="bx-im-sidebar-multidialog-preview__new-message-counter">\n\t\t\t\t\t\t{{ totalChatCounter }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar__forward-icon" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ae={name:"SidebarSkeleton",template:`\n\t\t<div class="bx-im-sidebar-skeleton__container">\n\t\t\t<div class="bx-im-sidebar-skeleton__block">\n\t\t\t\t<div class="bx-im-sidebar-skeleton__avatar"></div>\n\t\t\t\t<div class="bx-im-sidebar-skeleton__invite-button"></div>\n\t\t\t\t<div class="bx-im-sidebar-skeleton__settings"></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-skeleton__block">\n\t\t\t\t<div class="bx-im-sidebar-skeleton__info"></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-skeleton__block">\n\t\t\t\t<div class="bx-im-sidebar-skeleton__files"></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-skeleton__block">\n\t\t\t\t<div class="bx-im-sidebar-skeleton__tasks"></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ne={name:"MainPanel",components:{MainHeader:Rt,ChatPreview:Vt,PostPreview:Qt,UserPreview:Kt,SupportPreview:ie,InfoPreview:Mt,FilePreview:Lt,TaskPreview:Et,MeetingPreview:Ht,FileUnsortedPreview:Lt,MarketPreview:Nt,MultidialogPreview:se,SidebarSkeleton:ae,CopilotPreview:ee,CopilotInfoPreview:Gt},props:{dialogId:{type:String,required:true}},data(){return{isLoading:true}},computed:{blocks(){return j(this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},dialogInited(){return this.dialog.inited},chatId(){return this.dialog.chatId},hasInitialData(){return this.$store.getters["sidebar/isInited"](this.chatId)}},watch:{dialogId(){this.initializeSidebar()},dialogInited(){this.initializeSidebar()}},created(){this.initializeSidebar()},methods:{getPreviewComponentName(t){return`${t}Preview`},initializeSidebar(){if(!this.dialogInited){return}if(this.hasInitialData){this.isLoading=false;return}this.sidebarService=new It({dialogId:this.dialogId});this.isLoading=true;this.sidebarService.requestInitialData().then((()=>{this.isLoading=false})).catch((t=>{T.Logger.warn("Sidebar: request initial data error:",t)}))}},template:`\n\t\t<div class="bx-im-sidebar-main-panel__container">\n\t\t\t<MainHeader :dialogId="dialogId" />\n\t\t\t<SidebarSkeleton v-if="isLoading || !dialogInited" />\n\t\t\t<div v-else class="bx-im-sidebar-main-panel__blocks">\n\t\t\t\t<component\n\t\t\t\t\tv-for="block in blocks"\n\t\t\t\t\t:key="block"\n\t\t\t\t\tclass="bx-im-sidebar-main-panel__block"\n\t\t\t\t\t:is="getPreviewComponentName(block)"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const oe={name:"DateGroup",props:{dateText:{type:String,required:true}},template:`\n\t\t<div class="bx-im-sidebar-date-group__container bx-im-sidebar-date-group__scope">\n\t\t\t<div class="bx-im-sidebar-date-group__text">\n\t\t\t\t{{ dateText }}\n\t\t\t</div>\n\t\t</div>\n\t`};const re={name:"DetailHeader",components:{ChatButton:w.Button},props:{title:{type:String,required:true},secondLevel:{type:Boolean,default:false},withAddButton:{type:Boolean,default:false}},emits:["back","addClick"],computed:{ButtonSize:()=>w.ButtonSize,ButtonColor:()=>w.ButtonColor,isCopilotLayout(){const{name:t}=this.$store.getters["application/getLayout"];return t===A.Layout.copilot.name},addButtonColor(){if(this.isCopilotLayout){return this.ButtonColor.Copilot}return this.ButtonColor.PrimaryLight}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-detail-header__container bx-im-sidebar-detail-header__scope">\n\t\t\t<div class="bx-im-sidebar-detail-header__title-container">\n\t\t\t\t<button\n\t\t\t\t\t:class="{'bx-im-messenger__cross-icon': !secondLevel, 'bx-im-sidebar__back-icon': secondLevel}"\n\t\t\t\t\t@click="$emit('back')"\n\t\t\t\t/>\n\t\t\t\t<div class="bx-im-sidebar-detail-header__title-text">{{ title }}</div>\n\t\t\t\t<slot name="action">\n\t\t\t\t\t<div v-if="withAddButton" class="bx-im-sidebar-detail-header__add-button" ref="add-button">\n\t\t\t\t\t\t<ChatButton\n\t\t\t\t\t\t\t:text="loc('IM_SIDEBAR_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="addButtonColor"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="$emit('addClick', {target: $refs['add-button']})"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</slot>\n\t\t\t</div>\n\t\t</div>\n\t`};class le{constructor(){this.cachedDateGroups={}}format(t){const e={};t.forEach((t=>{const i=this.getDateGroup(t.date);if(!e[i.title]){e[i.title]={dateGroupTitle:i.title,items:[]}}e[i.title].items.push(t)}));return Object.values(e)}getDateGroup(t){const e=10;const i=t.toJSON().slice(0,e);if(this.cachedDateGroups[i]){return this.cachedDateGroups[i]}this.cachedDateGroups[i]={id:i,title:F.DateFormatter.formatByTemplate(t,F.DateTemplate.dateGroup)};return this.cachedDateGroups[i]}destroy(){this.cachedDateGroups={}}}const de={name:"TaskPanel",components:{TaskItem:Bt,DateGroup:oe,DetailHeader:re,DetailEmptyState:Tt,Loader:w.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,tasks(){return this.$store.getters["sidebar/tasks/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.tasks)},isEmptyState(){return this.formattedCollection.length===0},showAddButton(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.createTask,this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new le;this.contextMenu=new Dt;this.service=new nt({dialogId:this.dialogId})},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.task})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/tasks/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onAddClick(){new _.EntityCreator(this.chatId).createTaskForChat()}},template:`\n\t\t<div class="bx-im-sidebar-task-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_TASK_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t:withAddButton="showAddButton"\n\t\t\t\t@addClick="onAddClick"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-task-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-task-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<TaskItem\n\t\t\t\t\t\tv-for="task in dateGroup.items"\n\t\t\t\t\t\t:task="task"\n\t\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_TASKS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.task"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const ce=50;const he={name:"DetailTabs",props:{tabs:{type:Array,default:()=>[]}},emits:["tabSelect"],data(){return{hasLeftControl:false,hasRightControl:false,currentElementIndex:0,highlightOffsetLeft:0,highlightWidth:0}},computed:{highlightStyle(){return{left:`${this.highlightOffsetLeft}px`,width:`${this.highlightWidth}px`}}},watch:{currentElementIndex(t){this.updateHighlightPosition(t);this.$emit("tabSelect",this.tabs[t]);this.scrollToElement(t)}},mounted(){if(this.$refs.tabs.scrollWidth>this.$refs.tabs.offsetWidth){this.hasRightControl=true}this.updateHighlightPosition(this.currentElementIndex)},methods:{getElementNodeByIndex(t){return[...this.$refs.tabs.children].filter((t=>!L.Dom.hasClass(t,"bx-sidebar-tabs-highlight")))[t]},updateHighlightPosition(t){const e=this.getElementNodeByIndex(t);this.highlightOffsetLeft=e.offsetLeft;this.highlightWidth=e.offsetWidth},scrollToElement(t){const e=this.getElementNodeByIndex(t);this.$refs.tabs.scroll({left:e.offsetLeft-ce,behavior:"smooth"})},onTabClick(t){this.currentElementIndex=t.index},getTabTitle(t){const e=`IM_SIDEBAR_FILES_${t.toUpperCase()}_TAB`;return this.$Bitrix.Loc.getMessage(e)},isSelectedTab(t){return t===this.currentElementIndex},onLeftClick(){if(this.currentElementIndex<=0){return}this.currentElementIndex--},onRightClick(){if(this.currentElementIndex>=this.tabs.length-1){return}this.currentElementIndex++},updateControlsVisibility(){this.hasRightControl=this.$refs.tabs.scrollWidth>this.$refs.tabs.scrollLeft+this.$refs.tabs.clientWidth;this.hasLeftControl=this.$refs.tabs.scrollLeft>0}},template:`\n\t\t<div class="bx-im-sidebar-detail-tabs__container bx-im-sidebar-detail-tabs__scope">\n\t\t\t<div v-if="hasLeftControl" @click.stop="onLeftClick" class="bx-im-sidebar-ears__control --left">\n\t\t\t\t<div class="bx-im-sidebar__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div v-if="hasRightControl" @click.stop="onRightClick" class="bx-im-sidebar-ears__control --right">\n\t\t\t\t<div class="bx-im-sidebar__forward-icon"></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-ears__elements" ref="tabs" @scroll.passive="updateControlsVisibility">\n\t\t\t\t<div class="bx-sidebar-tabs-highlight" :style="highlightStyle"></div>\n\t\t\t\t<div\n\t\t\t\t\tv-for="(tab, index) in tabs"\n\t\t\t\t\t:key="tab"\n\t\t\t\t\tclass="bx-im-sidebar-detail-tabs__item"\n\t\t\t\t\t:class="[isSelectedTab(index) ? '--selected' : '']"\n\t\t\t\t\t@click="onTabClick({index: index})"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-sidebar-detail-tabs__item-title">{{ getTabTitle(tab) }}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const ue={name:"MediaDetailItem",components:{SocialVideo:h.SocialVideo,MessageAvatar:w.MessageAvatar},props:{fileItem:{type:Object,required:true},contextDialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false,videoDuration:0}},computed:{AvatarSize:()=>w.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},previewPicture(){if(!this.hasPreview){return{}}return{backgroundImage:`url('${this.file.urlPreview}')`}},hasPreview(){return this.file.urlPreview!==""},isImage(){return this.file.type==="image"},isVideo(){return this.file.type==="video"},viewerAttributes(){return D.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},videoDurationText(){if(this.videoDuration===0){return"--:--"}return this.formatTime(this.videoDuration)}},methods:{formatTime(t){t=Math.floor(t);const e=Math.floor(t/60/60);if(e>0){t-=e*60*60}const i=Math.floor(t/60);if(i>0){t-=i*60}const s=e>0?`${e}:`:"";const a=s>0?`${i.toString().padStart(2,"0")}:`:`${i}:`;const n=t.toString().padStart(2,"0");return s+a+n},handleVideoEvent(){if(!this.$refs.video){return}this.videoDuration=this.$refs.video.duration},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-media-detail-item__container bx-im-sidebar-file-media-detail-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-file-media-detail-item__header-container">\n\t\t\t\t<div class="bx-im-sidebar-file-media-detail-item__avatar-container">\n\t\t\t\t\t<MessageAvatar \n\t\t\t\t\t\t:messageId="sidebarFileItem.messageId" \n\t\t\t\t\t\t:authorId="sidebarFileItem.authorId"\n\t\t\t\t\t\t:size="AvatarSize.S" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__context-menu bx-im-messenger__context-menu-icon"\n\t\t\t\t\t@click="onContextMenuClick"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tv-if="isImage"\n\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__content --image" \n\t\t\t\t:style="previewPicture"\n\t\t\t\tv-bind="viewerAttributes"\n\t\t\t\t:title="file.name"\n\t\t\t>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tv-if="isVideo"\n\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__content --video"\n\t\t\t\t:style="previewPicture"\n\t\t\t\tv-bind="viewerAttributes"\n\t\t\t\t:title="file.name"\n\t\t\t>\n\t\t\t\t<video \n\t\t\t\t\tv-show="!hasPreview"\n\t\t\t\t\tref="video"\n\t\t\t\t\tclass="bx-im-sidebar-file-media-detail-item__video" \n\t\t\t\t\tpreload="metadata" :src="file.urlDownload"\n\t\t\t\t\t@durationchange="handleVideoEvent"\n\t\t\t\t\t@loadeddata="handleVideoEvent"\n\t\t\t\t\t@loadedmetadata="handleVideoEvent"\n\t\t\t\t></video>\n\t\t\t</div>\n\t\t\t<div v-if="isVideo" class="bx-im-sidebar-file-media-detail-item__video-controls">\n\t\t\t\t<span class="bx-im-sidebar-file-media-detail-item__video-controls-icon"></span>\n\t\t\t\t<span class="bx-im-sidebar-file-media-detail-item__video-controls-time">{{ videoDurationText }}</span>\n\t\t\t</div>\n\t\t</div>\n\t`};class ge{constructor(){this.store=E.Core.getStore();this.diskService=new S.DiskService}delete(t){this.store.dispatch("sidebar/files/delete",{dialogId:t.chatId,id:t.id});this.diskService.delete({chatId:t.chatId,fileId:t.fileId})}saveOnDisk(t){return this.diskService.save(t)}}class me extends kt{constructor(){super();this.id="im-sidebar-context-menu";this.mediaManager=new ge}getMenuItems(){return[this.getOpenContextMessageItem(),this.getDownloadFileItem(),this.getSaveFileOnDiskItem(),this.getDeleteFileItem()]}getViewFileItem(){const t=D.Utils.file.getViewerDataAttributes(this.context.file.viewerAttrs);if(!t||this.context.file.type==="audio"){return null}return{html:this.getViewHtml(t),onclick:function(){this.menuInstance.close()}.bind(this)}}getDownloadFileItem(){if(!this.context.file.urlDownload){return null}return{html:this.getDownloadHtml(this.context.file.urlDownload,this.context.file.name),onclick:function(){this.menuInstance.close()}.bind(this)}}getSaveFileOnDiskItem(){if(!this.context.sidebarFile.fileId){return null}return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_SAVE_FILE_ON_DISK_MSGVER_1"),onclick:function(){this.mediaManager.saveOnDisk(this.context.sidebarFile.fileId).then((()=>{BX.UI.Notification.Center.notify({content:L.Loc.getMessage("IM_SIDEBAR_FILE_SAVE_ON_DISK_SUCCESS")})}));this.menuInstance.close()}.bind(this)}}getDeleteFileItem(){if(this.getCurrentUserId()!==this.context.sidebarFile.authorId){return null}return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_FILE"),onclick:function(){this.mediaManager.delete(this.context.sidebarFile);this.menuInstance.close()}.bind(this)}}getViewHtml(t){const e=L.Dom.create("div",{text:L.Loc.getMessage("IM_SIDEBAR_MENU_VIEW_FILE")});Object.entries(t).forEach((t=>{const[i,s]=t;e.setAttribute(i,s)}));return e}getDownloadHtml(t,e){const i=L.Dom.create("a",{text:L.Loc.getMessage("IM_SIDEBAR_MENU_DOWNLOAD_FILE")});L.Dom.style(i,"display","block");L.Dom.style(i,"color","inherit");L.Dom.style(i,"text-decoration","inherit");i.setAttribute("href",t);i.setAttribute("download",e);return i}}const pe={name:"MediaTab",components:{DateGroup:oe,MediaDetailItem:ue,DetailEmptyState:Tt,Loader:w.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},files(){return this.$store.getters["sidebar/files/get"](this.chatId,A.SidebarFileTypes.media)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0}},created(){this.service=new st({dialogId:this.dialogId});this.collectionFormatter=new le;this.contextMenu=new me},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,A.SidebarFileTypes.media);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(A.SidebarFileTypes.media);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-media-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-media-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<div class="bx-im-sidebar-file-media-detail__items-group">\n\t\t\t\t\t<MediaDetailItem\n\t\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.media"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const Ie={name:"AudioDetailItem",components:{AudioPlayer:w.AudioPlayer},props:{id:{type:Number,required:true},fileItem:{type:Object,required:true}},emits:["contextMenuClick"],data(){return{timelineType:0}},computed:{sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},audioUrl(){return this.file.urlDownload}},created(){this.timelineType=Math.floor(Math.random()*5)},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div class="bx-im-sidebar-file-audio-detail-item__container bx-im-sidebar-file-audio-detail-item__scope">\n\t\t\t<AudioPlayer \n\t\t\t\t:id="id"\n\t\t\t\t:src="audioUrl" \n\t\t\t\t:file="file" \n\t\t\t\t:messageId="sidebarFileItem.messageId"\n\t\t\t\t:timelineType="timelineType" \n\t\t\t\t:authorId="sidebarFileItem.authorId"\n\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t/>\n\t\t</div>\n\t`};const ve={name:"AudioTab",components:{DetailEmptyState:Tt,AudioDetailItem:Ie,DateGroup:oe,Loader:w.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,A.SidebarFileTypes.audio)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new st({dialogId:this.dialogId});this.collectionFormatter=new le;this.contextMenu=new me},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,A.SidebarFileTypes.audio);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(A.SidebarFileTypes.audio);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-audio-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-audio-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<AudioDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:id="file.id"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.audio"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const be={name:"BriefItem",components:{MessageAvatar:w.MessageAvatar,ChatTitle:w.ChatTitle},props:{brief:{type:Object,required:true},contextDialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>w.AvatarSize,sidebarFileItem(){return this.brief},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},fileShortName(){const t=15;return D.Utils.file.getShortFileName(this.file.name,t)},fileSize(){return D.Utils.file.formatFileSize(this.file.size)},viewerAttributes(){return D.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-brief-item__container bx-im-sidebar-brief-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-brief-item__icon-container"></div>\n\t\t\t<div class="bx-im-sidebar-brief-item__content-container">\n\t\t\t\t<div class="bx-im-sidebar-brief-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-brief-item__title" @click="download" v-bind="viewerAttributes">\n\t\t\t\t\t\t<span class="bx-im-sidebar-brief-item__title-text" :title="file.name">{{fileShortName}}</span>\n\t\t\t\t\t\t<span class="bx-im-sidebar-brief-item__size-text">{{fileSize}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar-brief-item__author-container">\n\t\t\t\t\t\t<MessageAvatar \n\t\t\t\t\t\t\t:messageId="sidebarFileItem.messageId"\n\t\t\t\t\t\t\t:authorId="sidebarFileItem.authorId"\n\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\tclass="bx-im-sidebar-brief-item__author-avatar" \n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatTitle :dialogId="sidebarFileItem.authorId" :showItsYou="false" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon bx-im-sidebar-brief-item__context-menu-button"\n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const _e={name:"BriefTab",components:{DateGroup:oe,BriefItem:be,DetailEmptyState:Tt,Loader:w.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,A.SidebarFileTypes.brief)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new st({dialogId:this.dialogId});this.collectionFormatter=new le;this.contextMenu=new me},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,A.SidebarFileTypes.brief);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(A.SidebarFileTypes.brief);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-brief-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-brief-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle"/>\n\t\t\t\t<BriefItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:brief="file"\n\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_BRIEFS_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.brief"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const fe={name:"DocumentDetailItem",components:{MessageAvatar:w.MessageAvatar,ChatTitle:w.ChatTitle},props:{fileItem:{type:Object,required:true},contextDialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>w.AvatarSize,sidebarFileItem(){return this.fileItem},file(){return this.$store.getters["files/get"](this.sidebarFileItem.fileId,true)},fileIconClass(){return`ui-icon ui-icon-file-${this.file.icon}`},fileShortName(){const t=15;return D.Utils.file.getShortFileName(this.file.name,t)},fileSize(){return D.Utils.file.formatFileSize(this.file.size)},viewerAttributes(){return D.Utils.file.getViewerDataAttributes(this.file.viewerAttrs)},isViewerAvailable(){return Object.keys(this.viewerAttributes).length>0},authorId(){return this.sidebarFileItem.authorId}},methods:{download(){if(this.isViewerAvailable){return}const t=this.file.urlShow?this.file.urlShow:this.file.urlDownload;window.open(t,"_blank")},onContextMenuClick(t){this.$emit("contextMenuClick",{sidebarFile:this.sidebarFileItem,file:this.file,messageId:this.sidebarFileItem.messageId},t.currentTarget)}},template:`\n\t\t<div \n\t\t\tclass="bx-im-sidebar-file-document-detail-item__container bx-im-sidebar-file-document-detail-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\t\t\n\t\t>\n\t\t\t<div class="bx-im-sidebar-file-document-detail-item__icon-container">\n\t\t\t\t<div :class="fileIconClass"><i></i></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-file-document-detail-item__content-container" v-bind="viewerAttributes">\n\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__content">\n\t\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__document-title" @click="download" :title="file.name">\n\t\t\t\t\t\t<span class="bx-im-sidebar-file-document-detail-item__document-title-text">{{fileShortName}}</span>\n\t\t\t\t\t\t<span class="bx-im-sidebar-file-document-detail-item__document-size">{{fileSize}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-sidebar-file-document-detail-item__author-container">\n\t\t\t\t\t\t<template v-if="authorId > 0">\n\t\t\t\t\t\t\t<MessageAvatar\n\t\t\t\t\t\t\t\t:messageId="sidebarFileItem.messageId"\n\t\t\t\t\t\t\t\t:authorId="sidebarFileItem.authorId"\n\t\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\t\tclass="bx-im-sidebar-file-document-detail-item__author-avatar"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ChatTitle :dialogId="authorId" :showItsYou="false" />\n\t\t\t\t\t\t</template>\n\t\t\t\t\t\t<span v-else class="bx-im-sidebar-file-document-detail-item__system-author-text">\n\t\t\t\t\t\t\t{{$Bitrix.Loc.getMessage('IM_SIDEBAR_SYSTEM_USER')}}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tv-if="showContextButton"\n\t\t\t\tclass="bx-im-messenger__context-menu-icon" \n\t\t\t\t@click="onContextMenuClick"\n\t\t\t></button>\n\t\t</div>\n\t`};const Ce={name:"OtherTab",components:{DateGroup:oe,DocumentDetailItem:fe,DetailEmptyState:Tt,Loader:w.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,A.SidebarFileTypes.other)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new st({dialogId:this.dialogId});this.collectionFormatter=new le;this.contextMenu=new me},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,A.SidebarFileTypes.other);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(A.SidebarFileTypes.other);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-other-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-other-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<DocumentDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.other"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const xe={name:"DocumentTab",components:{DateGroup:oe,DocumentDetailItem:fe,DetailEmptyState:Tt,Loader:w.Loader},props:{dialogId:{type:String,required:true}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,A.SidebarFileTypes.document)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new st({dialogId:this.dialogId});this.collectionFormatter=new le;this.contextMenu=new me},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,A.SidebarFileTypes.document);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage(A.SidebarFileTypes.document);this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-file-document-detail__scope bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-document-detail__date-group_container">\n\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t<DocumentDetailItem\n\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<DetailEmptyState\n\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t:iconType="SidebarDetailBlock.document"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t</div>\n\t`};const Me={name:"FilePanel",components:{DetailHeader:re,DetailTabs:he,MediaTab:pe,AudioTab:ve,DocumentTab:xe,BriefTab:_e,OtherTab:Ce},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{tab:A.SidebarFileTabTypes.media}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,tabComponentName(){return`${L.Text.capitalize(this.tab)}Tab`},tabs(){const t=Object.values(A.SidebarFileTabTypes);const e=c.FeatureManager.isFeatureAvailable(c.Feature.sidebarBriefs);if(!e){return t.filter((t=>t!==A.SidebarDetailBlock.brief))}return t}},methods:{onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.file})},onTabSelect(t){this.tab=t}},template:`\n\t\t<div>\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEDIA_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<DetailTabs :tabs="tabs" @tabSelect="onTabSelect" />\n\t\t\t<KeepAlive>\n\t\t\t\t<component :is="tabComponentName" :dialogId="dialogId" />\n\t\t\t</KeepAlive>\n\t\t</div>\n\t`};const Se={name:"FileUnsortedPanel",components:{DateGroup:oe,DocumentDetailItem:fe,DetailEmptyState:Tt,DetailHeader:re,Loader:w.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,files(){return this.$store.getters["sidebar/files/get"](this.chatId,A.SidebarFileTypes.fileUnsorted)},formattedCollection(){return this.collectionFormatter.format(this.files)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.service=new gt({dialogId:this.dialogId});this.collectionFormatter=new le;this.contextMenu=new me},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/files/hasNextPage"](this.chatId,A.SidebarFileTypes.fileUnsorted);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.fileUnsorted})}},template:`\n\t\t<div class="bx-im-sidebar-file-unsorted-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILEUNSORTED_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-file-unsorted-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-file-unsorted-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<DocumentDetailItem\n\t\t\t\t\t\tv-for="file in dateGroup.items"\n\t\t\t\t\t\t:fileItem="file"\n\t\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FILES_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.document"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const Te={name:"LinkItem",components:{MessageAvatar:w.MessageAvatar,ChatTitle:w.ChatTitle},props:{link:{type:Object,required:true},contextDialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>w.AvatarSize,linkItem(){return this.link},source(){return this.linkItem.source},shortDescription(){let t="";try{t=new URL(this.source).hostname}catch(e){t=this.source;console.error(e)}return t},description(){const{name:t,description:e}=this.linkItem.richData;const i=e||t||this.source;return D.Utils.text.convertHtmlEntities(i)},authorDialogId(){return this.linkItem.authorId.toString()},hasPreview(){var t;return Boolean((t=this.linkItem.richData)==null?void 0:t.previewUrl)},previewStyles(){var t;return{backgroundImage:`url('${(t=this.linkItem.richData)==null?void 0:t.previewUrl}')`,backgroundSize:"cover",backgroundRepeat:"no-repeat"}},iconTypeClass(){var t;switch((t=this.linkItem.richData)==null?void 0:t.type){case"TASKS":return"--task";case"LANDING":return"--landing";case"POST":return"--post";case"CALENDAR":return"--calendar";default:return"--common"}}},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{id:this.linkItem.id,messageId:this.linkItem.messageId,source:this.source,target:t.currentTarget})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-link-item__container bx-im-link-item__scope"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<template v-if="hasPreview">\n\t\t\t\t<div class="bx-im-link-item__icon-container" :style="previewStyles"></div>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<div class="bx-im-link-item__icon-container" :class="iconTypeClass">\n\t\t\t\t\t<div class="bx-im-link-item__icon" :class="iconTypeClass" ></div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<div class="bx-im-link-item__content">\n\t\t\t\t<div class="bx-im-link-item__short-description-text">{{ shortDescription }}</div>\n\t\t\t\t<a :href="source" :title="description" target="_blank" class="bx-im-link-item__description-text">\n\t\t\t\t\t{{ description }}\n\t\t\t\t</a>\n\t\t\t\t<div class="bx-im-link-item__author-container">\n\t\t\t\t\t<MessageAvatar \n\t\t\t\t\t\t:messageId="linkItem.messageId" \n\t\t\t\t\t\t:authorId="linkItem.authorId"\n\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\tclass="bx-im-link-item__author-avatar" \n\t\t\t\t\t/>\n\t\t\t\t\t<ChatTitle :dialogId="authorDialogId" :showItsYou="false" class="bx-im-link-item__author-text" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div v-if="showContextButton" class="bx-im-link-item__context-menu">\n\t\t\t\t<button class="bx-im-messenger__context-menu-icon" @click="onContextMenuClick"></button>\n\t\t\t</div>\n\t\t</div>\n\t`};class Le{constructor(){this.store=E.Core.getStore();this.restClient=E.Core.getRestClient()}delete(t){this.store.dispatch("sidebar/links/delete",{chatId:t.chatId,id:t.id});const e={LINK_ID:t.id};this.restClient.callMethod(A.RestMethod.imChatUrlDelete,e).catch((t=>{console.error("Im.Sidebar: error deleting link",t)}))}}class ke extends kt{constructor(){super();this.linkManager=new Le}getMenuItems(){return[this.getOpenContextMessageItem(),this.getCopyLinkItem(L.Loc.getMessage("IM_SIDEBAR_MENU_COPY_LINK")),this.getDeleteLinkItem()]}getDeleteLinkItem(){return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_DELETE_FROM_LINKS"),onclick:function(){this.linkManager.delete(this.context);this.menuInstance.close()}.bind(this)}}}const ye={name:"LinkPanel",components:{DetailHeader:re,LinkItem:Te,DateGroup:oe,DetailEmptyState:Tt,Loader:w.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,links(){return this.$store.getters["sidebar/links/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.links)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new le;this.contextMenu=new ke;this.service=new et({dialogId:this.dialogId})},beforeUnmount(){this.contextMenu.destroy();this.collectionFormatter.destroy()},methods:{onContextMenuClick(t){const e={id:t.id,messageId:t.messageId,dialogId:this.dialogId,chatId:this.chatId,source:t.source};this.contextMenu.openMenu(e,t.target)},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.link})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/links/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-link-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_LINK_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-link-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<template v-for="link in dateGroup.items">\n\t\t\t\t\t\t<LinkItem\n\t\t\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t\t\t:link="link" @contextMenuClick="onContextMenuClick"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_LINKS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.link"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const De={name:"MarketPanel",components:{Spinner:w.Spinner,DetailHeader:re},props:{dialogId:{type:String,required:true},entityId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:true}},computed:{SpinnerSize:()=>w.SpinnerSize,SidebarDetailBlock:()=>A.SidebarDetailBlock,placement(){const t=Number.parseInt(this.entityId,10);return this.$store.getters["market/getById"](t)},title(){if(this.placement&&L.Type.isStringFilled(this.placement.title)){return this.placement.title}return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MARKET_DETAIL_TITLE")}},created(){this.marketManager=b.MarketManager.getInstance()},async mounted(){const t={dialogId:this.dialogId};const e=await this.marketManager.loadPlacement(this.entityId,t);this.isLoading=false;L.Runtime.html(this.$refs["im-messenger-sidebar-placement"],e)},methods:{onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.market})}},template:`\n\t\t<div class="bx-im-sidebar-favorite-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="title"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-market-detail__container">\n\t\t\t\t<div v-if="isLoading" class="bx-im-sidebar-market-detail__loader-container">\n\t\t\t\t\t<Spinner :size="SpinnerSize.S" />\n\t\t\t\t</div>\n\t\t\t\t<div \n\t\t\t\t\tclass="bx-im-sidebar-market-detail__placement-container" \n\t\t\t\t\tref="im-messenger-sidebar-placement"\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Be={name:"MeetingPanel",components:{MeetingItem:Ot,DateGroup:oe,DetailEmptyState:Tt,DetailHeader:re,Loader:w.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,meetings(){return this.$store.getters["sidebar/meetings/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.meetings)},isEmptyState(){return this.formattedCollection.length===0},showAddButton(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.createMeeting,this.dialogId)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new le;this.contextMenu=new Ut},beforeUnmount(){this.collectionFormatter.destroy();this.contextMenu.destroy()},methods:{onContextMenuClick(t,e){const i={...t,dialogId:this.dialogId};this.contextMenu.openMenu(i,e)},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.meeting})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/meetings/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onAddClick(){new _.EntityCreator(this.chatId).createMeetingForChat()}},template:`\n\t\t<div class="bx-im-sidebar-meeting-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEETING_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t:withAddButton="showAddButton"\n\t\t\t\t@addClick="onAddClick"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-meeting-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-sidebar-meeting-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<MeetingItem\n\t\t\t\t\t\tv-for="meeting in dateGroup.items"\n\t\t\t\t\t\t:meeting="meeting"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_MEETINGS_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.meeting"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const Ee={name:"DetailUser",components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle},props:{dialogId:{type:String,required:true},contextDialogId:{type:String,required:true},isOwner:{type:Boolean,default:false},isManager:{type:Boolean,default:false}},data(){return{showContextButton:false}},computed:{AvatarSize:()=>w.AvatarSize,position(){if(this.isCopilot){return this.$store.getters["copilot/getProvider"]}return this.$store.getters["users/getPosition"](this.dialogId)},user(){return this.$store.getters["users/get"](this.dialogId,true)},userLink(){return D.Utils.user.getProfileLink(this.dialogId)},needContextMenu(){const t=this.$store.getters["users/bots/getByUserId"](this.dialogId);if(!t){return true}return t.code!=="copilot"},isCopilot(){const t=Number.parseInt(this.dialogId,10);return this.$store.getters["users/bots/isCopilot"](t)},hasLink(){return!this.isCopilot}},methods:{onClickContextMenu(t){this.$emit("contextMenuClick",{userDialogId:this.dialogId,target:t.currentTarget})}},template:`\n\t\t<div\n\t\t\tclass="bx-im-sidebar-main-detail__user"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-sidebar-main-detail__avatar-container">\n\t\t\t\t<ChatAvatar \n\t\t\t\t\t:size="AvatarSize.L"\n\t\t\t\t\t:avatarDialogId="dialogId"\n\t\t\t\t\t:contextDialogId="contextDialogId"\n\t\t\t\t/>\n\t\t\t\t<span v-if="isOwner" class="bx-im-sidebar-main-detail__avatar-owner-icon"></span>\n\t\t\t\t<span v-else-if="isManager" class="bx-im-sidebar-main-detail__avatar-manager-icon"></span>\n\t\t\t</div>\n\t\t\t<div class="bx-im-sidebar-main-detail__user-info-container">\n\t\t\t\t<div class="bx-im-sidebar-main-detail__user-title-container">\n\t\t\t\t\t<a v-if="hasLink" :href="userLink" target="_blank" class="bx-im-sidebar-main-detail__user-title-link">\n\t\t\t\t\t\t<ChatTitle :dialogId="dialogId" :withLeftIcon="!isCopilot" />\n\t\t\t\t\t</a>\n\t\t\t\t\t<div v-else class="bx-im-sidebar-main-detail__user-title-link">\n\t\t\t\t\t\t<ChatTitle :dialogId="dialogId" :withLeftIcon="!isCopilot" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="needContextMenu && showContextButton"\n\t\t\t\t\t\tclass="bx-im-sidebar-main-detail__context-menu-icon bx-im-messenger__context-menu-icon"\n\t\t\t\t\t\t@click="onClickContextMenu"\n\t\t\t\t\t></div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-sidebar-main-detail__position-text" :title="position">\n\t\t\t\t\t{{ position }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\t\n\t`};class Pe extends kt{constructor(){super();this.chatService=new S.ChatService;this.callManager=C.CallManager.getInstance();this.permissionManager=x.PermissionManager.getInstance()}getMenuItems(){const t=Number.parseInt(this.context.dialogId,10);if(t===E.Core.getUserId()){return[this.getOpenProfileItem(),this.getOpenUserCalendarItem(),this.getLeaveItem()]}return[this.getInsertNameItem(),this.getSendMessageItem(),this.getManagerItem(),this.getCallItem(),this.getOpenProfileItem(),this.getOpenUserCalendarItem(),this.getKickItem(),this.getLeaveItem()]}getInsertNameItem(){const t=this.store.getters["users/get"](this.context.dialogId,true);return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_INSERT_NAME_V2"),onclick:()=>{R.EventEmitter.emit(A.EventType.textarea.insertMention,{mentionText:t.name,mentionReplacement:D.Utils.text.getMentionBbCode(this.context.dialogId,t.name),dialogId:this.context.contextDialogId});this.menuInstance.close()}}}getSendMessageItem(){return{text:L.Loc.getMessage("IM_LIB_MENU_WRITE_V2"),onclick:()=>{P.Messenger.openChat(this.context.dialogId);this.menuInstance.close()}}}getManagerItem(){const t=Number.parseInt(this.context.dialogId,10);const e=this.store.getters["chats/get"](this.context.contextDialogId);const i=t===e.ownerId;const s=x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.changeManagers,this.context.contextDialogId);if(i||!s){return null}const a=e.managerList.includes(t);return{text:a?L.Loc.getMessage("IM_SIDEBAR_MENU_MANAGER_REMOVE"):L.Loc.getMessage("IM_SIDEBAR_MENU_MANAGER_ADD"),onclick:()=>{if(a){this.chatService.removeManager(this.context.contextDialogId,t)}else{this.chatService.addManager(this.context.contextDialogId,t)}this.menuInstance.close()}}}getCallItem(){const t=this.callManager.chatCanBeCalled(this.context.dialogId);const e=this.permissionManager.canPerformAction(A.ChatActionType.call,this.context.dialogId);if(!t||!e){return null}return{text:L.Loc.getMessage("IM_LIB_MENU_CALL_2"),onclick:()=>{this.callManager.startCall(this.context.dialogId);this.menuInstance.close()}}}getOpenProfileItem(){if(!this.isUser()||this.isBot()){return null}const t=Number.parseInt(this.context.dialogId,10);const e=D.Utils.user.getProfileLink(this.context.dialogId);const i=t===E.Core.getUserId();const s=i?"IM_LIB_MENU_OPEN_OWN_PROFILE":"IM_LIB_MENU_OPEN_PROFILE_V2";return{text:L.Loc.getMessage(s),href:e,onclick:()=>{this.menuInstance.close()}}}getOpenUserCalendarItem(){if(!this.isUser()||this.isBot()){return null}const t=Number.parseInt(this.context.dialogId,10);const e=D.Utils.user.getCalendarLink(this.context.dialogId);const i=t===E.Core.getUserId();const s=i?"IM_LIB_MENU_OPEN_OWN_CALENDAR":"IM_LIB_MENU_OPEN_CALENDAR_V2";return{text:L.Loc.getMessage(s),onclick:()=>{BX.SidePanel.Instance.open(e);this.menuInstance.close()}}}getKickItem(){const t=Number.parseInt(this.context.dialogId,10);const e=t===this.getCurrentUserId();const i=this.permissionManager.canPerformAction(A.ChatActionType.kick,this.context.contextDialogId);if(e||!i){return null}return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_KICK_FROM_CHAT"),onclick:async()=>{this.menuInstance.close();const t=await M.showKickUserConfirm();if(t===true){this.chatService.kickUserFromChat(this.context.contextDialogId,this.context.dialogId)}}}}getLeaveItem(){const t=Number.parseInt(this.context.dialogId,10);const e=t===this.getCurrentUserId();const i=this.permissionManager.canPerformAction(A.ChatActionType.leave,this.context.contextDialogId);if(!e||!i){return null}return{text:L.Loc.getMessage("IM_LIB_MENU_LEAVE_V2"),onclick:async()=>{this.menuInstance.close();const t=await M.showLeaveFromChatConfirm();if(t===true){this.chatService.leaveChat(this.context.contextDialogId)}}}}isUser(){return this.store.getters["chats/isUser"](this.context.dialogId)}isBot(){if(!this.isUser()){return false}const t=this.store.getters["users/get"](this.context.dialogId);return t.bot===true}}const Ae={[A.ChatType.channel]:"IM_SIDEBAR_MEMBERS_CHANNEL_DETAIL_TITLE",[A.ChatType.openChannel]:"IM_SIDEBAR_MEMBERS_CHANNEL_DETAIL_TITLE",[A.ChatType.generalChannel]:"IM_SIDEBAR_MEMBERS_CHANNEL_DETAIL_TITLE",default:"IM_SIDEBAR_MEMBERS_DETAIL_TITLE"};const we={name:"MembersPanel",components:{DetailUser:Ee,ChatButton:w.Button,DetailHeader:re,Loader:w.Loader,AddToChat:f.AddToChat},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false,showAddToChatPopup:false,showAddToChatTarget:null}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,ButtonSize:()=>w.ButtonSize,ButtonColor:()=>w.ButtonColor,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},userDialogIds(){const t=this.$store.getters["sidebar/members/get"](this.chatId);return t.map((t=>t.toString()))},chatLink(){const t=this.dialog.type===A.ChatType.copilot;const e=t?A.GetParameter.openCopilotChat:A.GetParameter.openChat;return`${E.Core.getHost()}/online/?${e}=${this.dialogId}`},hasNextPage(){return this.$store.getters["sidebar/members/hasNextPage"](this.chatId)},panelInited(){return this.$store.getters["sidebar/members/getInited"](this.chatId)},chatId(){return this.dialog.chatId},title(){var t;let e=this.dialog.userCounter;if(e>=1e3){e=`${Math.floor(e/1e3)}k`}const i=(t=Ae[this.dialog.type])!=null?t:Ae.default;return this.loc(i,{"#NUMBER#":e})},needAddButton(){return x.PermissionManager.getInstance().canPerformAction(A.ChatActionType.extend,this.dialogId)}},watch:{dialogId(t){this.service=new dt({dialogId:t});void this.loadFirstPage()}},created(){this.contextMenu=new Pe;this.service=new dt({dialogId:this.dialogId});void this.loadFirstPage()},beforeUnmount(){this.contextMenu.destroy()},methods:{async loadFirstPage(){if(this.panelInited||this.isLoading){return}this.isLoading=true;this.chats=await this.service.loadFirstPage();this.isLoading=false},isOwner(t){const e=Number.parseInt(t,10);return this.dialog.ownerId===e},isManager(t){const e=Number.parseInt(t,10);return this.dialog.managerList.includes(e)},onContextMenuClick(t){const e={dialogId:t.userDialogId,contextDialogId:this.dialogId};this.contextMenu.openMenu(e,t.target)},onCopyInviteClick(){if(BX.clipboard.copy(this.chatLink)){BX.UI.Notification.Center.notify({content:this.loc("IM_SIDEBAR_COPIED_SUCCESS")})}},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.members})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;return i&&this.hasNextPage},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},onAddClick(t){this.showAddToChatPopup=true;this.showAddToChatTarget=t.target},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-sidebar-main-detail__scope">\n\t\t\t<DetailHeader \n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="title"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t:withAddButton="needAddButton"\n\t\t\t\t@addClick="onAddClick"\n\t\t\t\t@back="onBackClick" \n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div class="bx-im-sidebar-main-detail__invitation-button-container">\n\t\t\t\t\t<ChatButton\n\t\t\t\t\t\t:text="loc('IM_SIDEBAR_COPY_INVITE_LINK')"\n\t\t\t\t\t\t:size="ButtonSize.M"\n\t\t\t\t\t\t:color="ButtonColor.PrimaryBorder"\n\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\ticon="link"\n\t\t\t\t\t\t@click="onCopyInviteClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailUser\n\t\t\t\t\tv-for="userDialogId in userDialogIds"\n\t\t\t\t\t:dialogId="userDialogId"\n\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t:isOwner="isOwner(userDialogId)"\n\t\t\t\t\t:isManager="isManager(userDialogId)"\n\t\t\t\t\t@contextMenuClick="onContextMenuClick"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t\t<AddToChat\n\t\t\t\t:bindElement="showAddToChatTarget || {}"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:showPopup="showAddToChatPopup"\n\t\t\t\t:popupConfig="{offsetTop: 0, offsetLeft: 0}"\n\t\t\t\t@close="showAddToChatPopup = false"\n\t\t\t/>\n\t\t</div>\n\t`};class Re extends kt{constructor(){super();this.id="im-sidebar-context-menu"}getMenuItems(){return[this.getOpenContextMessageItem(),this.getDeleteFromFavoriteItem()]}getDeleteFromFavoriteItem(){return{text:L.Loc.getMessage("IM_SIDEBAR_MENU_REMOVE_FROM_SAVED_V2"),onclick:function(){const t=new S.MessageService({chatId:this.context.chatId});t.removeMessageFromFavorite(this.context.messageId);this.menuInstance.close()}.bind(this)}}}const Fe={name:"FavoriteItem",components:{MessageAvatar:w.MessageAvatar,MessageAuthorTitle:w.MessageAuthorTitle},props:{favorite:{type:Object,required:true},chatId:{type:Number,required:true},dialogId:{type:String,required:true}},emits:["contextMenuClick"],data(){return{showContextButton:false}},computed:{AvatarSize:()=>w.AvatarSize,favoriteItem(){return this.favorite},favoriteMessage(){return this.$store.getters["messages/getById"](this.favoriteItem.messageId)},authorDialogId(){return this.favoriteMessage.authorId.toString()},messageText(){return k.Parser.purifyMessage(this.favoriteMessage)},isCopilot(){return this.$store.getters["users/bots/isCopilot"](this.favoriteMessage.authorId)}},methods:{onContextMenuClick(t){this.$emit("contextMenuClick",{id:this.favoriteItem.id,messageId:this.favorite.messageId,target:t.currentTarget})},onItemClick(){R.EventEmitter.emit(A.EventType.dialog.goToMessageContext,{messageId:this.favorite.messageId,dialogId:this.dialogId})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-favorite-item__container bx-im-favorite-item__scope" \n\t\t\t@click.stop="onItemClick"\n\t\t\t@mouseover="showContextButton = true"\n\t\t\t@mouseleave="showContextButton = false"\n\t\t>\n\t\t\t<div class="bx-im-favorite-item__header-container">\n\t\t\t\t<div class="bx-im-favorite-item__author-container">\n\t\t\t\t\t<MessageAvatar\n\t\t\t\t\t\t:messageId="favoriteItem.messageId"\n\t\t\t\t\t\t:authorId="authorDialogId"\n\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\tclass="bx-im-favorite-item__author-avatar"\n\t\t\t\t\t/>\n\t\t\t\t\t<MessageAuthorTitle \n\t\t\t\t\t\t:dialogId="authorDialogId"\n\t\t\t\t\t\t:messageId="favoriteItem.messageId"\n\t\t\t\t\t\t:withLeftIcon="!isCopilot"\n\t\t\t\t\t\t:showItsYou="false" \n\t\t\t\t\t\tclass="bx-im-favorite-item__author-text"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button \n\t\t\t\t\tv-if="showContextButton"\n\t\t\t\t\tclass="bx-im-messenger__context-menu-icon"\n\t\t\t\t\t@click.stop="onContextMenuClick"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t\t<div class="bx-im-favorite-item__message-text"> {{ messageText }}</div>\n\t\t</div>\n\t`};const Ne={name:"FavoritePanel",components:{FavoriteItem:Fe,DateGroup:oe,DetailEmptyState:Tt,DetailHeader:re,Loader:w.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,favorites(){return this.$store.getters["sidebar/favorites/get"](this.chatId)},formattedCollection(){return this.collectionFormatter.format(this.favorites)},isEmptyState(){return this.formattedCollection.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},created(){this.collectionFormatter=new le;this.contextMenu=new Re;this.service=new O({dialogId:this.dialogId})},beforeUnmount(){this.contextMenu.destroy();this.collectionFormatter.destroy()},methods:{onContextMenuClick(t){const e={id:t.id,messageId:t.messageId,dialogId:this.dialogId,chatId:this.chatId};this.contextMenu.openMenu(e,t.target)},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.favorite})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/favorites/hasNextPage"](this.chatId);return i&&s},async onScroll(t){this.contextMenu.destroy();if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false}},template:`\n\t\t<div class="bx-im-sidebar-favorite-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FAVORITE_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div class="bx-im-sidebar-favorite-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<div \n\t\t\t\t\tv-for="dateGroup in formattedCollection" \n\t\t\t\t\tclass="bx-im-sidebar-favorite-detail__date-group_container"\n\t\t\t\t>\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<FavoriteItem \n\t\t\t\t\t\tv-for="favorite in dateGroup.items" \n\t\t\t\t\t\t:favorite="favorite"\n\t\t\t\t\t\t:chatId="chatId"\n\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t@contextMenuClick="onContextMenuClick" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_FAVORITES_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.favorite"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const $e=50;var Ue=babelHelpers.classPrivateFieldLooseKey("lastMessageId");var Oe=babelHelpers.classPrivateFieldLooseKey("query");var He=babelHelpers.classPrivateFieldLooseKey("request");var Ge=babelHelpers.classPrivateFieldLooseKey("processSearchResponse");var ze=babelHelpers.classPrivateFieldLooseKey("updateModels");class qe{constructor({dialogId:t}){Object.defineProperty(this,ze,{value:Qe});Object.defineProperty(this,Ge,{value:Ve});Object.defineProperty(this,He,{value:Xe});this.hasMoreItemsToLoad=true;Object.defineProperty(this,Ue,{writable:true,value:0});Object.defineProperty(this,Oe,{writable:true,value:""});this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.chatId=N(t);this.userManager=new B.UserManager}searchOnServer(t){if(babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe]!==t){babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe]=t;this.hasMoreItemsToLoad=true;babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue]=0}return babelHelpers.classPrivateFieldLooseBase(this,He)[He]()}loadNextPage(){return babelHelpers.classPrivateFieldLooseBase(this,He)[He]()}loadFirstPage(){return Promise.resolve()}resetSearchState(){babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue]=0;babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe]="";this.hasMoreItemsToLoad=true}}function Xe(){const t={SEARCH_MESSAGE:babelHelpers.classPrivateFieldLooseBase(this,Oe)[Oe],CHAT_ID:this.chatId};if(babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue]>0){t.LAST_ID=babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue]}return new Promise(((e,i)=>{this.restClient.callMethod(A.RestMethod.imDialogMessagesSearch,t).then((t=>{const i=t.data();e(babelHelpers.classPrivateFieldLooseBase(this,Ge)[Ge](i))})).catch((t=>i(t)))}))}function Ve(t){babelHelpers.classPrivateFieldLooseBase(this,Ue)[Ue]=$(t.messages);if(t.messages.length<$e){this.hasMoreItemsToLoad=false}return babelHelpers.classPrivateFieldLooseBase(this,ze)[ze](t).then((()=>t.messages.map((t=>t.id))))}function Qe(t){const{files:e,users:i,usersShort:s,reactions:a,additionalMessages:n,messages:o}=t;const r=Promise.all([this.userManager.setUsersToModel(i),this.userManager.addUsersToModel(s)]);const l=this.store.dispatch("files/set",e);const d=this.store.dispatch("messages/reactions/set",a);const c=this.store.dispatch("messages/store",n);const h=this.store.dispatch("messages/store",o);return Promise.all([l,r,d,c,h])}const Ke={name:"EmptyState",computed:{title(){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MESSAGE_SEARCH_NOT_FOUND")},subTitle(){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_MESSAGE_SEARCH_NOT_FOUND_DESCRIPTION")}},template:`\n\t\t<div class="bx-im-message-search-empty-state__container bx-im-message-search-empty-state__scope">\n\t\t\t<div class="bx-im-message-search-empty-state__icon"></div>\n\t\t\t<div class="bx-im-message-search-empty-state__title">\n\t\t\t\t{{ title }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-search-empty-state__subtitle">\n\t\t\t\t{{ subTitle }}\n\t\t\t</div>\n\t\t</div>\n\t`};const je={name:"SearchItem",components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle},props:{messageId:{type:[String,Number],required:true},dialogId:{type:String,required:true},query:{type:String,default:""}},computed:{AvatarSize:()=>w.AvatarSize,message(){return this.$store.getters["messages/getById"](this.messageId)},authorDialogId(){return this.message.authorId.toString()},isSystem(){return this.message.authorId===0},messageText(){const t=k.Parser.purifyMessage(this.message);return y.highlightText(L.Text.encode(t),this.query)}},methods:{onItemClick(){R.EventEmitter.emit(A.EventType.dialog.goToMessageContext,{messageId:this.messageId,dialogId:this.dialogId})},onMessageBodyClick(t){if(t.target.tagName==="A"){t.stopPropagation()}}},template:`\n\t\t<div \n\t\t\tclass="bx-im-message-search-item__container bx-im-message-search-item__scope" \n\t\t\t@click.stop="onItemClick"\n\t\t>\n\t\t\t<div class="bx-im-message-search-item__header-container">\n\t\t\t\t<div class="bx-im-message-search-item__author-container">\n\t\t\t\t\t<template v-if="!isSystem">\n\t\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t\t:size="AvatarSize.XS"\n\t\t\t\t\t\t\t:avatarDialogId="authorDialogId"\n\t\t\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t\t\tclass="bx-im-message-search-item__author-avatar"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ChatTitle \n\t\t\t\t\t\t\t:dialogId="authorDialogId" \n\t\t\t\t\t\t\t:showItsYou="false" \n\t\t\t\t\t\t\tclass="bx-im-message-search-item__author-text" \n\t\t\t\t\t\t/>\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-else>\n\t\t\t\t\t\t<span class="bx-im-message-search-item__system-author">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_SIDEBAR_SYSTEM_MESSAGE') }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-search-item__message-text" v-html="messageText" @click="onMessageBodyClick"></div>\n\t\t</div>\n\t`};const Ye={name:"SearchHeader",components:{SearchInput:w.SearchInput},props:{secondLevel:{type:Boolean,default:false}},emits:["back","changeQuery"],template:`\n\t\t<div class="bx-im-sidebar-search-header__container bx-im-sidebar-search-header__scope">\n\t\t\t<div class="bx-im-sidebar-search-header__title-container">\n\t\t\t\t<button\n\t\t\t\t\t:class="{'bx-im-messenger__cross-icon': !secondLevel, 'bx-im-sidebar__back-icon': secondLevel}"\n\t\t\t\t\t@click="$emit('back')"\n\t\t\t\t></button>\n\t\t\t\t<SearchInput\n\t\t\t\t\t:placeholder="$Bitrix.Loc.getMessage('IM_SIDEBAR_SEARCH_MESSAGE_PLACEHOLDER')"\n\t\t\t\t\t:withIcon="false"\n\t\t\t\t\t:delayForFocusOnStart="300"\n\t\t\t\t\t@queryChange="$emit('changeQuery', $event)"\n\t\t\t\t\tclass="bx-im-sidebar-search-header__input"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const We={name:"MessageSearchPanel",components:{DateGroup:oe,EmptyState:Ke,SearchItem:je,Loader:w.Loader,StartState:Tt,SearchHeader:Ye},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{searchQuery:"",isLoading:false,searchResult:[],currentServerQueries:0}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,formattedCollection(){const t=this.searchResult.map((t=>this.$store.getters["messages/getById"](t))).filter((t=>Boolean(t)));return this.collectionFormatter.format(t)},isEmptyState(){return this.preparedQuery.length>0&&this.formattedCollection.length===0},preparedQuery(){return this.searchQuery.trim().toLowerCase()}},watch:{preparedQuery(t,e){if(t===e){return}this.service.resetSearchState();this.searchResult=[];this.startSearch(t)}},created(){this.service=new qe({dialogId:this.dialogId});this.collectionFormatter=new le;this.searchOnServerDelayed=L.Runtime.debounce(this.searchOnServer,500,this)},beforeUnmount(){this.collectionFormatter.destroy()},methods:{searchOnServer(t){this.currentServerQueries++;this.service.searchOnServer(t).then((e=>{if(t!==this.preparedQuery){this.isLoading=false;return}this.searchResult=this.mergeResult(e)})).catch((t=>{console.error(t)})).finally((()=>{this.currentServerQueries--;this.stopLoader()}))},startSearch(t){if(t.length<3){return}if(t.length>=3){this.isLoading=true;this.searchOnServerDelayed(t)}if(t.length===0){this.cleanSearchResult()}},stopLoader(){if(this.currentServerQueries>0){return}this.isLoading=false},cleanSearchResult(){this.searchResult=[]},needToLoadNextPage(t){const e=t.target;return e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight},onScroll(t){if(this.isLoading||this.preparedQuery.length===0){return}if(!this.needToLoadNextPage(t)||!this.service.hasMoreItemsToLoad){return}this.isLoading=true;this.service.loadNextPage().then((t=>{this.searchResult=this.mergeResult(t);this.isLoading=false})).catch((t=>{T.Logger.warn("Message Search: loadNextPage error",t)}))},mergeResult(t){return[...this.searchResult,...t].sort(((t,e)=>e-t))},onChangeQuery(t){this.searchQuery=t},onClickBack(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.messageSearch})}},template:`\n\t\t<div class="bx-im-message-search-detail__scope">\n\t\t\t<SearchHeader :secondLevel="secondLevel" @changeQuery="onChangeQuery" @back="onClickBack" />\n\t\t\t<div class="bx-im-message-search-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<StartState \n\t\t\t\t\tv-if="!isLoading && preparedQuery.length === 0"\n\t\t\t\t\t:title="$Bitrix.Loc.getMessage('IM_SIDEBAR_SEARCH_MESSAGE_START_TITLE')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.messageSearch"\n\t\t\t\t/>\n\t\t\t\t<EmptyState v-if="!isLoading && isEmptyState" />\n\t\t\t\t<Loader v-if="isLoading && isEmptyState" class="bx-im-message-search-detail__loader" />\n\t\t\t\t<div v-for="dateGroup in formattedCollection" class="bx-im-message-search-detail__date-group_container">\n\t\t\t\t\t<DateGroup :dateText="dateGroup.dateGroupTitle" />\n\t\t\t\t\t<SearchItem\n\t\t\t\t\t\tv-for="item in dateGroup.items"\n\t\t\t\t\t\t:messageId="item.id"\n\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t:query="preparedQuery"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Je={name:"ChatItem",components:{ChatAvatar:w.ChatAvatar,ChatTitle:w.ChatTitle},props:{dialogId:{type:String,required:true},dateMessage:{type:String,default:""}},emits:["clickItem"],computed:{AvatarSize:()=>w.AvatarSize,chatItemText(){return this.$Bitrix.Loc.getMessage("IM_SIDEBAR_CHAT_TYPE_GROUP_V2")},formattedDate(){if(!this.dateMessage){return""}const t=D.Utils.date.cast(this.dateMessage);return this.formatDate(t)}},methods:{onClick(t){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:t})},formatDate(t){return F.DateFormatter.formatByTemplate(t,F.DateTemplate.recent)}},template:`\n\t\t<div \n\t\t\t@click="onClick"\n\t\t\tclass="bx-im-chat-with-user-item__container bx-im-chat-with-user-item__scope"\n\t\t>\n\t\t\t<div class="bx-im-chat-with-user-item__avatar-container">\n\t\t\t\t<ChatAvatar \n\t\t\t\t\t:avatarDialogId="dialogId" \n\t\t\t\t\t:contextDialogId="dialogId" \n\t\t\t\t\t:size="AvatarSize.XL" \n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-with-user-item__content-container">\n\t\t\t\t<div class="bx-im-chat-with-user-item__content_header">\n\t\t\t\t\t<ChatTitle :dialogId="dialogId" />\n\t\t\t\t\t<div v-if="formattedDate.length > 0" class="bx-im-chat-with-user-item__date">\n\t\t\t\t\t\t<span>{{ formattedDate }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-chat-with-user-item__item-text" :title="chatItemText">\n\t\t\t\t\t{{ chatItemText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Ze=50;var ti=babelHelpers.classPrivateFieldLooseKey("chatsCount");var ei=babelHelpers.classPrivateFieldLooseKey("getRequestParams");var ii=babelHelpers.classPrivateFieldLooseKey("requestPage");var si=babelHelpers.classPrivateFieldLooseKey("handleResponse");var ai=babelHelpers.classPrivateFieldLooseKey("updateModels");var ni=babelHelpers.classPrivateFieldLooseKey("setDialoguesPromise");class oi{constructor({dialogId:t}){Object.defineProperty(this,ni,{value:hi});Object.defineProperty(this,ai,{value:ci});Object.defineProperty(this,si,{value:di});Object.defineProperty(this,ii,{value:li});Object.defineProperty(this,ei,{value:ri});this.hasMoreItemsToLoad=true;Object.defineProperty(this,ti,{writable:true,value:0});this.store=E.Core.getStore();this.restClient=E.Core.getRestClient();this.dialogId=t;this.userManager=new B.UserManager}loadFirstPage(){return babelHelpers.classPrivateFieldLooseBase(this,ii)[ii]()}loadNextPage(){return babelHelpers.classPrivateFieldLooseBase(this,ii)[ii]()}}function ri(){const t=Number.parseInt(this.dialogId,10);const e={filter:{userId:t},limit:Ze};if(babelHelpers.classPrivateFieldLooseBase(this,ti)[ti]>0){e.offset=babelHelpers.classPrivateFieldLooseBase(this,ti)[ti]}return e}async function li(){const t=babelHelpers.classPrivateFieldLooseBase(this,ei)[ei]();const e=await this.restClient.callMethod(A.RestMethod.imV2ChatListShared,t);return babelHelpers.classPrivateFieldLooseBase(this,si)[si](e.data())}async function di(t){const{chats:e}=t;babelHelpers.classPrivateFieldLooseBase(this,ti)[ti]+=e.length;if(e.length<Ze){this.hasMoreItemsToLoad=false}await babelHelpers.classPrivateFieldLooseBase(this,ai)[ai](e);return e.map((t=>({dialogId:t.dialogId,dateMessage:t.dateMessage})))}function ci(t){return babelHelpers.classPrivateFieldLooseBase(this,ni)[ni](t)}function hi(t){return this.store.dispatch("chats/set",t)}const ui={name:"ChatsWithUserPanel",components:{DetailHeader:re,ChatItem:Je,DetailEmptyState:Tt,Loader:w.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false,chats:[]}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,isEmptyState(){return!this.isLoading&&this.chats.length===0},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId}},watch:{dialogId(){this.chats=[];this.service=new oi({dialogId:this.dialogId});void this.loadFirstPage()}},created(){this.service=new oi({dialogId:this.dialogId});void this.loadFirstPage()},methods:{onClick(t){const{dialogId:e}=t;void P.Messenger.openChat(e)},async loadFirstPage(){this.isLoading=true;this.chats=await this.service.loadFirstPage();this.isLoading=false},needToLoadNextPage(t){const e=t.target;return e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight},async onScroll(t){if(this.isLoading){return}if(!this.needToLoadNextPage(t)||!this.service.hasMoreItemsToLoad){return}this.isLoading=true;const e=await this.service.loadNextPage();this.chats=[...this.chats,...e];this.isLoading=false},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.chatsWithUser})},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-sidebar-chats-with-user-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:title="loc('IM_SIDEBAR_CHATSWITHUSER_DETAIL_TITLE')"\n\t\t\t\t:dialogId="dialogId"\n\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t@back="onBackClick"\n\t\t\t/>\n\t\t\t<div \n\t\t\t\tclass="bx-im-sidebar-chats-with-user-detail__container" \n\t\t\t\t@scroll="onScroll"\n\t\t\t>\n\t\t\t\t<ChatItem\n\t\t\t\t\tv-for="chat in chats"\n\t\t\t\t\t:dialogId="chat.dialogId"\n\t\t\t\t\t:dateMessage="chat.dateMessage"\n\t\t\t\t\t@clickItem="onClick"\n\t\t\t\t/>\n\t\t\t\t<DetailEmptyState\n\t\t\t\t\tv-if="!isLoading && isEmptyState"\n\t\t\t\t\t:title="loc('IM_SIDEBAR_CHATS_WITH_USER_EMPTY')"\n\t\t\t\t\t:iconType="SidebarDetailBlock.messageSearch"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-chats-with-user-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const gi={name:"MultidialogItem",props:{item:{type:Object,required:true}},computed:{multidialogItem(){return this.item},dialogId(){return this.multidialogItem.dialogId},chatId(){return this.multidialogItem.chatId},title(){const t=this.$store.getters["chats/get"](this.dialogId);return t.name},status(){return this.multidialogItem.status},transferredStatus(){const t=`IM_SIDEBAR_SUPPORT_TICKET_STATUS_${this.status.toUpperCase()}`;return this.loc(t)},containerClasses(){const t=`--${this.status}`;const e=this.$store.getters["application/isChatOpen"](this.dialogId);return[t,{"--selected":e}]},counter(){var t;const e=(t=this.$store.getters["counters/getChatCounterByChatId"](this.chatId))!=null?t:0;return e>99?"99+":e},formatDate(){const t=this.multidialogItem.date;return F.DateFormatter.formatByTemplate(t,F.DateTemplate.recent)}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div\n\t\t\tclass="bx-im-multidialog-item__container bx-im-sidebar-multidialog-preview__scope"\n\t\t \t:class="containerClasses"\n\t\t\t:title="title"\n\t\t>\n\t\t\t<span class="bx-im-multidialog-item__title">{{ title }}</span>\n\t\t\t<span class="bx-im-multidialog-item__date">\n\t\t\t\t{{ formatDate }}\n\t\t\t</span>\n\t\t\t<div class="bx-im-multidialog-item__status">\n\t\t\t\t{{ transferredStatus }}\n\t\t\t</div>\n\t\t\t<div v-show="counter" class="bx-im-multidialog-item__count bx-im-sidebar-multidialog-preview__new-message-counter">\n\t\t\t\t{{ counter }}\n\t\t\t</div>\n\t\t</div>\n\t`};const mi={name:"MultidialogPanel",components:{DetailHeader:re,MultidialogItem:gi,ChatButton:w.Button,Loader:w.Loader},props:{dialogId:{type:String,required:true},secondLevel:{type:Boolean,default:false}},data(){return{isLoading:false,isCreating:false}},computed:{ButtonSize:()=>w.ButtonSize,ButtonColor:()=>w.ButtonColor,SidebarDetailBlock:()=>A.SidebarDetailBlock,activeMultidialogs(){const t=this.$store.getters["sidebar/multidialog/getMultidialogsByStatus"]([A.MultidialogStatus.new,A.MultidialogStatus.open]);return t.sort(((t,e)=>e.date-t.date))},closedMultidialogs(){const t=this.$store.getters["sidebar/multidialog/getMultidialogsByStatus"]([A.MultidialogStatus.close]);return t.sort(((t,e)=>e.date-t.date))},limitReached(){const t=this.$store.getters["sidebar/multidialog/getMultidialogsByStatus"]([A.MultidialogStatus.open]);const e=this.$store.getters["sidebar/multidialog/getOpenSessionsLimit"];return e<=t.length},isInitedDetail(){return this.$store.getters["sidebar/multidialog/isInitedDetail"]},isDisabledButtonCreate(){return this.limitReached||!this.isInitedDetail},buttonCreateTitle(){if(!this.limitReached||!this.isInitedDetail){return""}return this.loc("IM_SIDEBAR_SUPPORT_TICKET_LIMIT")}},created(){this.service=new ht},mounted(){void this.loadFirstPage()},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)},onBackClick(){R.EventEmitter.emit(A.EventType.sidebar.close,{panel:A.SidebarDetailBlock.multidialog})},needToLoadNextPage(t){const e=t.target;const i=e.scrollTop+e.clientHeight>=e.scrollHeight-e.clientHeight;const s=this.$store.getters["sidebar/multidialog/hasNextPage"];return i&&s},async loadFirstPage(){if(this.isLoading){return}this.isLoading=true;await this.service.loadFirstPage();this.isLoading=false},async onScroll(t){if(this.isLoading||!this.needToLoadNextPage(t)){return}this.isLoading=true;await this.service.loadNextPage();this.isLoading=false},async onAddSupport(){if(this.isCreating){return}this.isCreating=true;const t=await this.service.createSupportChat();if(t){this.openChat(t)}this.isCreating=false},openChat(t){void P.Messenger.openChat(t)}},template:`\n\t\t<div class="bx-im-sidebar-multidialog-detail__scope">\n\t\t\t<DetailHeader\n\t\t\t\t:title="loc('IM_SIDEBAR_SUPPORT_TICKET_DETAIL_TITLE')"\n\t\t\t\t:secondLevel="true"\n\t\t\t\t@back="onBackClick"\n\t\t\t>\n\t\t\t\t<template #action>\n\t\t\t\t\t<div :title="buttonCreateTitle" class="bx-im-sidebar-detail-header__add-button">\n\t\t\t\t\t\t<ChatButton\n\t\t\t\t\t\t\t:text="loc('IM_SIDEBAR_SUPPORT_TICKET_ADD_BUTTON_TEXT')"\n\t\t\t\t\t\t\t:size="ButtonSize.S"\n\t\t\t\t\t\t\t:color="ButtonColor.PrimaryLight"\n\t\t\t\t\t\t\t:isLoading="isCreating"\n\t\t\t\t\t\t\t:isDisabled="isDisabledButtonCreate"\n\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t:isUppercase="false"\n\t\t\t\t\t\t\ticon="plus"\n\t\t\t\t\t\t\t@click="onAddSupport"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</DetailHeader>\n\t\t\t<div class="bx-im-sidebar-multidialog-detail__container bx-im-sidebar-detail__container" @scroll="onScroll">\n\t\t\t\t<MultidialogItem\n\t\t\t\t\tv-for="multidialog in activeMultidialogs"\n\t\t\t\t\t:key="multidialog.chatId"\n\t\t\t\t\t:item="multidialog"\n\t\t\t\t\t@click="openChat(multidialog.dialogId)"\n\t\t\t\t/>\n\t\t\t\t<MultidialogItem\n\t\t\t\t\tv-for="multidialog in closedMultidialogs"\n\t\t\t\t\t:key="multidialog.chatId"\n\t\t\t\t\t:item="multidialog"\n\t\t\t\t\t@click="openChat(multidialog.dialogId)"\n\t\t\t\t/>\n\t\t\t\t<Loader v-if="isLoading" class="bx-im-sidebar-detail__loader-container" />\n\t\t\t</div>\n\t\t</div>\n\t`};const pi={name:"SidebarPanel",components:{MainPanel:ne,ChatsWithUserPanel:ui,MembersPanel:we,FavoritePanel:Ne,LinkPanel:ye,FilePanel:Me,TaskPanel:de,MeetingPanel:Be,MarketPanel:De,MessageSearchPanel:We,FileUnsortedPanel:Se,MultidialogPanel:mi},props:{dialogId:{type:String,required:true},panel:{type:String,required:true},secondLevel:{type:Boolean,default:false},entityId:{type:String,default:""}},computed:{panelComponentName(){return`${L.Text.capitalize(this.panel)}Panel`}},template:`\n\t\t<div class="bx-im-sidebar-panel__container" :class="{'--second-level': secondLevel}">\n\t\t\t<KeepAlive>\n\t\t\t\t<component\n\t\t\t\t\t:is="panelComponentName"\n\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t:entityId="entityId"\n\t\t\t\t\t:secondLevel="secondLevel"\n\t\t\t\t\tclass="bx-im-sidebar-panel__component"\n\t\t\t\t/>\n\t\t\t</KeepAlive>\n\t\t</div>\n\t`};const Ii={name:"ChatSidebar",components:{SidebarPanel:pi},props:{originDialogId:{type:String,required:true},isActive:{type:Boolean,default:true}},emits:["changePanel"],data(){return{needTopLevelTransition:true,needSecondLevelTransition:true,topLevelPanelType:"",topLevelPanelDialogId:"",topLevelPanelStandalone:false,secondLevelPanelType:"",secondLevelPanelDialogId:"",secondLevelPanelEntityId:"",secondLevelPanelStandalone:false}},computed:{SidebarDetailBlock:()=>A.SidebarDetailBlock,topLevelTransitionName(){return this.needTopLevelTransition?"top-level-panel":""},secondLevelTransitionName(){return this.needSecondLevelTransition?"second-level-panel":""},canShowTopPanel(){const t=this.topLevelPanelType===A.SidebarDetailBlock.members;const e=!this.originDialogId.startsWith("chat");if(t&&e){return false}const i=this.topLevelPanelType===A.SidebarDetailBlock.messageSearch;return!i}},watch:{originDialogId(t,e){const i=Boolean(t&&e);if(i){this.needTopLevelTransition=false}if(!this.topLevelPanelStandalone){this.updateTopPanelOriginDialogId(t)}const s=this.secondLevelPanelType.length>0;if(s&&!this.secondLevelPanelStandalone){this.closeSecondLevelPanel()}if(!this.canShowTopPanel){this.closeTopPanel()}},topLevelPanelType(t,e){this.needTopLevelTransition=e.length===0||t.length===0;const i=t===A.SidebarDetailBlock.main;this.saveSidebarOpenedState(i)},secondLevelPanelType(t,e){this.needSecondLevelTransition=!(t&&e)}},created(){T.Logger.warn("ChatSidebar: created");this.restoreOpenState()},mounted(){R.EventEmitter.subscribe(A.EventType.sidebar.open,this.onSidebarOpen);R.EventEmitter.subscribe(A.EventType.sidebar.close,this.onSidebarClose)},beforeUnmount(){R.EventEmitter.unsubscribe(A.EventType.sidebar.open,this.onSidebarOpen);R.EventEmitter.unsubscribe(A.EventType.sidebar.close,this.onSidebarClose)},methods:{onSidebarOpen(t){if(!this.isActive){return}const{panel:e="",standalone:i=false,dialogId:s,entityId:a=""}=t.getData();const n=e&&this.secondLevelPanelType===e;if(n){this.closeSecondLevelPanel();return}const o=this.topLevelPanelType&&this.topLevelPanelType!==e;if(o){this.openSecondLevelPanel(e,s,i,a)}else{this.openTopPanel(e,s,i)}},onSidebarClose(t){if(!this.isActive){return}this.needTopLevelTransition=true;const{panel:e=""}=t.getData();const i=e&&this.secondLevelPanelType===e;if(i){this.closeSecondLevelPanel()}else{this.closeSecondLevelPanel();this.closeTopPanel()}},restoreOpenState(){const t=e.LocalStorageManager.getInstance().get(A.LocalStorageKey.sidebarOpened);if(!t){return}this.openTopPanel(A.SidebarDetailBlock.main,this.originDialogId,false)},saveSidebarOpenedState(t){const i=200;clearTimeout(this.saveSidebarStateTimeout);this.saveSidebarStateTimeout=setTimeout((()=>{e.LocalStorageManager.getInstance().set(A.LocalStorageKey.sidebarOpened,t)}),i)},openTopPanel(t,e,i=false){this.topLevelPanelType=t;this.topLevelPanelDialogId=e;this.topLevelPanelStandalone=i;this.$emit("changePanel",{panel:this.topLevelPanelType})},updateTopPanelOriginDialogId(t){this.topLevelPanelDialogId=t},openSecondLevelPanel(t,e,i=false,s=""){this.secondLevelPanelType=t;this.secondLevelPanelDialogId=e;this.secondLevelPanelStandalone=i;this.secondLevelPanelEntityId=s;this.$emit("changePanel",{panel:this.secondLevelPanelType})},closeTopPanel(){this.topLevelPanelType="";this.topLevelPanelDialogId="";this.topLevelPanelStandalone=false;this.$emit("changePanel",{panel:""})},closeSecondLevelPanel(){this.secondLevelPanelType="";this.secondLevelPanelDialogId="";this.secondLevelPanelStandalone=false;this.$emit("changePanel",{panel:this.topLevelPanelType})}},template:`\n\t\t<div class="bx-im-sidebar__container">\n\t\t\t<Transition :name="topLevelTransitionName">\n\t\t\t\t<SidebarPanel\n\t\t\t\t\tv-if="topLevelPanelType"\n\t\t\t\t\t:dialogId="topLevelPanelDialogId"\n\t\t\t\t\t:panel="topLevelPanelType"\n\t\t\t\t/>\n\t\t\t</Transition>\n\t\t\t<Transition :name="secondLevelTransitionName">\n\t\t\t\t<SidebarPanel\n\t\t\t\t\tv-if="secondLevelPanelType"\n\t\t\t\t\t:dialogId="secondLevelPanelDialogId" \n\t\t\t\t\t:panel="secondLevelPanelType"\n\t\t\t\t\t:entityId="secondLevelPanelEntityId"\n\t\t\t\t\t:secondLevel="true"\n\t\t\t\t/>\n\t\t\t</Transition>\n\t\t</div>\n\t`};t.ChatSidebar=Ii})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX.Messenger.v2.Lib,BX.Vue3.Directives,BX.UI,BX.Messenger.v2.Lib,BX.Main,BX.Vue3.Directives,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.UI,BX.Messenger.v2.Lib,BX.Vue3.Components,BX.UI.Viewer,BX,BX.Messenger.v2.Model,BX,BX,BX.Vue3.Vuex,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.EntitySelector,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Component.Elements,BX.Event,BX.Messenger.v2.Lib);
//# sourceMappingURL=sidebar.bundle.map.js