{"version":3,"file":"layout.bundle.js","sources":["../src/layout.js"],"sourcesContent":["import { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { LocalStorageManager } from 'im.v2.lib.local-storage';\nimport { ChatType, EventType, Layout, LocalStorageKey } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChannelManager } from 'im.v2.lib.channel';\n\nimport type { ImModelLayout, ImModelChat } from 'im.v2.model';\n\ntype EntityId = string;\n\nconst TypesWithoutContext: Set<string> = new Set([ChatType.comment]);\nconst LayoutsWithoutLastOpenedElement: Set<string> = new Set([Layout.channel.name]);\n\nexport class LayoutManager\n{\n\tstatic #instance: LayoutManager;\n\n\t#lastOpenedElement: { [layoutName: string]: EntityId } = {};\n\n\tstatic getInstance(): LayoutManager\n\t{\n\t\tif (!this.#instance)\n\t\t{\n\t\t\tthis.#instance = new this();\n\t\t}\n\n\t\treturn this.#instance;\n\t}\n\n\tstatic init(): void\n\t{\n\t\tLayoutManager.getInstance();\n\t}\n\n\tconstructor()\n\t{\n\t\tEventEmitter.subscribe(EventType.dialog.goToMessageContext, this.#onGoToMessageContext.bind(this));\n\t\tEventEmitter.subscribe(EventType.desktop.onReload, this.#onDesktopReload.bind(this));\n\t}\n\n\tasync setLayout(config: ImModelLayout): Promise\n\t{\n\t\tif (config.entityId)\n\t\t{\n\t\t\tthis.setLastOpenedElement(config.name, config.entityId);\n\t\t}\n\n\t\tif (this.#isSameChat(config))\n\t\t{\n\t\t\tthis.#onSameChatReopen(config);\n\t\t}\n\n\t\tthis.#sendAnalytics(config);\n\n\t\treturn Core.getStore().dispatch('application/setLayout', config);\n\t}\n\n\tgetLayout(): ImModelLayout\n\t{\n\t\treturn Core.getStore().getters['application/getLayout'];\n\t}\n\n\tsaveCurrentLayout(): void\n\t{\n\t\tconst currentLayout = this.getLayout();\n\n\t\tLocalStorageManager.getInstance().set(LocalStorageKey.layoutConfig, {\n\t\t\tname: currentLayout.name,\n\t\t\tentityId: currentLayout.entityId,\n\t\t});\n\t}\n\n\trestoreLastLayout(): Promise\n\t{\n\t\tconst layoutConfig = LocalStorageManager.getInstance().get(LocalStorageKey.layoutConfig);\n\t\tif (!layoutConfig)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('LayoutManager: last layout was restored', layoutConfig);\n\n\t\tLocalStorageManager.getInstance().remove(LocalStorageKey.layoutConfig);\n\n\t\treturn this.setLayout(layoutConfig);\n\t}\n\n\tgetLastOpenedElement(layoutName: string): null | string\n\t{\n\t\treturn this.#lastOpenedElement[layoutName] ?? null;\n\t}\n\n\tsetLastOpenedElement(layoutName: string, entityId: string): void\n\t{\n\t\tif (LayoutsWithoutLastOpenedElement.has(layoutName))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#lastOpenedElement[layoutName] = entityId;\n\t}\n\n\tisChatContextAvailable(dialogId: string): boolean\n\t{\n\t\tif (!this.getLayout().contextId)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { type }: ImModelChat = this.#getChat(dialogId);\n\n\t\treturn !TypesWithoutContext.has(type);\n\t}\n\n\tdestroy(): void\n\t{\n\t\tEventEmitter.unsubscribe(EventType.dialog.goToMessageContext, this.#onGoToMessageContext);\n\t\tEventEmitter.unsubscribe(EventType.desktop.onReload, this.#onDesktopReload.bind(this));\n\t}\n\n\t#onGoToMessageContext(event: BaseEvent<{dialogId: string, messageId: number}>): void\n\t{\n\t\tconst { dialogId, messageId } = event.getData();\n\t\tif (this.getLayout().entityId === dialogId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { type }: ImModelChat = this.#getChat(dialogId);\n\t\tif (TypesWithoutContext.has(type))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst isCopilotLayout = type === ChatType.copilot;\n\n\t\tvoid this.setLayout({\n\t\t\tname: isCopilotLayout ? Layout.copilot.name : Layout.chat.name,\n\t\t\tentityId: dialogId,\n\t\t\tcontextId: messageId,\n\t\t});\n\t}\n\n\t#onDesktopReload()\n\t{\n\t\tthis.saveCurrentLayout();\n\t}\n\n\t#sendAnalytics(config: ImModelLayout)\n\t{\n\t\tconst currentLayout = this.getLayout();\n\t\tif (currentLayout.name === config.name)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (config.name === Layout.copilot.name)\n\t\t{\n\t\t\tAnalytics.getInstance().onOpenCopilotTab();\n\t\t}\n\n\t\tAnalytics.getInstance().onOpenTab(config.name);\n\t}\n\n\t#isSameChat(config: ImModelLayout): boolean\n\t{\n\t\tconst { name, entityId } = this.getLayout();\n\t\tconst sameLayout = name === config.name;\n\t\tconst sameEntityId = entityId && entityId === config.entityId;\n\n\t\treturn sameLayout && sameEntityId;\n\t}\n\n\t#onSameChatReopen(config: ImModelLayout): void\n\t{\n\t\tconst { entityId: dialogId, contextId } = config;\n\n\t\tconst isChannel = ChannelManager.isChannel(dialogId);\n\t\tif (isChannel)\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.closeComments);\n\t\t}\n\n\t\tif (contextId)\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.goToMessageContext, {\n\t\t\t\tmessageId: contextId,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t}\n\t}\n\n\t#getChat(dialogId: string): ImModelChat\n\t{\n\t\treturn Core.getStore().getters['chats/get'](dialogId, true);\n\t}\n}\n"],"names":["TypesWithoutContext","Set","ChatType","comment","LayoutsWithoutLastOpenedElement","Layout","channel","name","LayoutManager","getInstance","init","constructor","EventEmitter","subscribe","EventType","dialog","goToMessageContext","bind","desktop","onReload","setLayout","config","entityId","setLastOpenedElement","Core","getStore","dispatch","getLayout","getters","saveCurrentLayout","currentLayout","LocalStorageManager","set","LocalStorageKey","layoutConfig","restoreLastLayout","get","Promise","resolve","Logger","warn","remove","getLastOpenedElement","layoutName","has","isChatContextAvailable","dialogId","contextId","type","destroy","unsubscribe","event","messageId","getData","isCopilotLayout","copilot","chat","Analytics","onOpenCopilotTab","onOpenTab","sameLayout","sameEntityId","isChannel","ChannelManager","emit","closeComments"],"mappings":"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"}