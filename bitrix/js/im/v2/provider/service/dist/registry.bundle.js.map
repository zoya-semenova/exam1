{"version":3,"file":"registry.bundle.js","sources":["../src/recent/classes/recent-data-extractor.js","../src/recent/recent.js","../src/chat/classes/chat-data-extractor.js","../src/chat/classes/load.js","../src/chat/classes/create.js","../src/chat/classes/update.js","../src/chat/classes/rename.js","../src/chat/classes/mute.js","../src/chat/classes/pin.js","../src/chat/classes/read.js","../src/chat/classes/user.js","../src/chat/chat.js","../src/message/classes/load.js","../src/message/classes/pin.js","../src/message/classes/edit.js","../src/message/classes/delete.js","../src/message/classes/mark.js","../src/message/classes/favorite.js","../src/message/message.js","../src/sending/sending.js","../src/notification/notification.js","../src/disk/disk.js","../src/uploading/classes/uploader-wrapper.js","../src/uploading/uploading.js","../src/settings/settings.js","../src/lines/lines.js","../src/copilot/copilot.js","../src/comments/comments.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, UserRole, MessageStatus, FakeMessagePrefix } from 'im.v2.const';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type {\n\tRecentRestResult,\n\tRawUser,\n\tRawChat,\n\tRawRecentItem,\n\tRawMessage,\n\tRawCopilot,\n} from '../../types/rest';\n\ntype RecentFile = {\n\tid: number,\n\tname: string,\n\ttype: string,\n};\n\ntype ExtractionResult = {\n\tusers: RawUser[],\n\tchats: RawChat[],\n\tmessages: RawMessage[],\n\tfiles: RecentFile[],\n\trecentItems: RawRecentItem[],\n\tcopilot?: RawCopilot,\n};\n\nexport class RecentDataExtractor\n{\n\t#restResult: RecentRestResult;\n\t#withBirthdays: boolean;\n\n\t#users: { [id: string]: RawUser } = {};\n\t#chats: { [id: string]: RawChat } = {};\n\t#messages: { [id: string]: RawMessage } = {};\n\t#files: { [id: string]: RecentFile } = {};\n\t#recentItems: { [id: string]: RawRecentItem } = {};\n\n\tconstructor(params: { rawData: RecentRestResult, withBirthdays?: boolean })\n\t{\n\t\tconst { rawData, withBirthdays = true } = params;\n\t\tthis.#withBirthdays = withBirthdays;\n\t\tthis.#restResult = rawData;\n\t}\n\n\tgetItems(): ExtractionResult\n\t{\n\t\tconst { items = [], copilot } = this.#restResult;\n\t\titems.forEach((item: RawRecentItem) => {\n\t\t\tthis.#extractUser(item);\n\t\t\tthis.#extractChat(item);\n\t\t\tthis.#extractMessage(item);\n\t\t\tthis.#extractRecentItem(item);\n\t\t});\n\n\t\tthis.#extractBirthdayItems();\n\n\t\treturn {\n\t\t\tusers: Object.values(this.#users),\n\t\t\tchats: Object.values(this.#chats),\n\t\t\tmessages: Object.values(this.#messages),\n\t\t\tfiles: Object.values(this.#files),\n\t\t\trecentItems: Object.values(this.#recentItems),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#extractUser(item: RawRecentItem)\n\t{\n\t\tif (item.user?.id && !this.#users[item.user.id])\n\t\t{\n\t\t\tthis.#users[item.user.id] = item.user;\n\t\t}\n\t}\n\n\t#extractChat(item: RawRecentItem)\n\t{\n\t\tif (item.chat)\n\t\t{\n\t\t\tthis.#chats[item.id] = this.#prepareGroupChat(item);\n\n\t\t\tif (item.user.id && !this.#chats[item.user.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForAdditionalUser(item.user);\n\t\t\t}\n\t\t}\n\t\telse if (item.user.id)\n\t\t{\n\t\t\tconst existingRecentItem = Core.getStore().getters['recent/get'](item.user.id);\n\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForUser(item);\n\t\t\t}\n\t\t}\n\t}\n\n\t#extractMessage(item: RawRecentItem): void\n\t{\n\t\tconst message = item.message;\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (message.id === 0)\n\t\t{\n\t\t\tmessage.id = `${FakeMessagePrefix}-${item.id}`;\n\t\t}\n\n\t\tlet viewedByOthers = false;\n\t\tif (message.status === MessageStatus.delivered)\n\t\t{\n\t\t\tviewedByOthers = true;\n\t\t}\n\n\t\tconst existingMessage: ImModelMessage = Core.getStore().getters['messages/getById'](message.id);\n\t\t// recent has shortened attach format, we should not rewrite attach if model has it\n\t\tif (Type.isArrayFilled(existingMessage?.attach))\n\t\t{\n\t\t\tdelete message.attach;\n\t\t}\n\n\t\tif (Type.isPlainObject(message.file))\n\t\t{\n\t\t\tconst file: RecentFile = message.file;\n\t\t\tif (existingMessage)\n\t\t\t{\n\t\t\t\t// recent doesn't know about several files in one message,\n\t\t\t\t// we should not rewrite message files, so we merge it.\n\t\t\t\tmessage.files = this.#mergeFileIds(existingMessage, file.id);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmessage.files = [file.id];\n\t\t\t}\n\n\t\t\tconst existingFile = Core.getStore().getters['files/get'](file.id);\n\t\t\t// recent has shortened file format, we should not rewrite file if model has it\n\t\t\tif (!existingFile)\n\t\t\t{\n\t\t\t\tthis.#files[file.id] = file;\n\t\t\t}\n\t\t}\n\n\t\tthis.#messages[message.id] = { ...message, viewedByOthers };\n\t}\n\n\t#extractRecentItem(item: RawRecentItem): void\n\t{\n\t\tconst messageId = item.message?.id ?? 0;\n\t\tthis.#recentItems[item.id] = { ...item, messageId };\n\t}\n\n\t#extractBirthdayItems()\n\t{\n\t\tif (!this.#withBirthdays)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { birthdayList = [] } = this.#restResult;\n\t\tbirthdayList.forEach((item) => {\n\t\t\tif (!this.#users[item.id])\n\t\t\t{\n\t\t\t\tthis.#users[item.id] = item;\n\t\t\t}\n\n\t\t\tif (!this.#chats[item.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.id] = this.#prepareChatForAdditionalUser(item);\n\t\t\t}\n\n\t\t\tif (!this.#recentItems[item.id])\n\t\t\t{\n\t\t\t\tconst messageId = `${FakeMessagePrefix}-${item.id}`;\n\t\t\t\tthis.#recentItems[item.id] = { ...this.#getBirthdayPlaceholder(item), messageId };\n\t\t\t\tthis.#messages[messageId] = { id: messageId };\n\t\t\t}\n\t\t});\n\t}\n\n\t#prepareGroupChat(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id,\n\t\t\tcopilot: item.copilot,\n\t\t};\n\t}\n\n\t#prepareChatForUser(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: ChatType.user,\n\t\t\tcounter: item.counter,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#prepareChatForAdditionalUser(user: RawUser): RawChat\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: ChatType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#getBirthdayPlaceholder(item: RawRecentItem): { id: string, isBirthdayPlaceholder: true }\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\tisBirthdayPlaceholder: true,\n\t\t};\n\t}\n\n\t#mergeFileIds(existingMessage: ImModelMessage, fileId: number): number[]\n\t{\n\t\tconst existingMessageFilesIds = existingMessage.files.map((id) => {\n\t\t\treturn Number.parseInt(id, 10);\n\t\t});\n\t\tconst setOfFileIds = new Set([...existingMessageFilesIds, fileId]);\n\n\t\treturn [...setOfFileIds];\n\t}\n}\n","import { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { CopilotManager } from 'im.v2.lib.copilot';\n\nimport { RecentDataExtractor } from './classes/recent-data-extractor';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tdataIsPreloaded: boolean = false;\n\tfirstPageIsLoaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn Core.getStore().getters['recent/getRecentCollection'];\n\t}\n\n\tasync loadFirstPage({ ignorePreloadedItems = false } = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn('Im.RecentList: first page was preloaded');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\tconst result = await this.requestItems({ firstPage: true });\n\t\tthis.firstPageIsLoaded = true;\n\n\t\treturn result;\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn('Im.RecentList: setting preloaded data', params);\n\t\tconst { items, hasMore } = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId): void\n\t{\n\t\tLogger.warn('Im.RecentList: hide chat', dialogId);\n\t\tconst recentItem = Core.getStore().getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = Core.getStore().getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tCore.getRestClient().callMethod(RestMethod.imRecentHide, { DIALOG_ID: dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t\t});\n\t}\n\t// endregion public\n\n\tasync requestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\tconst result = await Core.getRestClient().callMethod(this.getQueryMethod(), queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t\t});\n\n\t\tthis.pagesLoaded++;\n\t\tLogger.warn(`Im.RecentList: ${firstPage ? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\tconst { items, hasMore } = result.data();\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.isLoading = false;\n\n\t\treturn this.updateModels(result.data());\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): JsonObject\n\t{\n\t\treturn {\n\t\t\tSKIP_OPENLINES: 'Y',\n\t\t\tLIMIT: this.itemsPerPage,\n\t\t\tLAST_MESSAGE_DATE: firstPage ? null : this.lastMessageDate,\n\t\t\tGET_ORIGINAL_TEXT: 'Y',\n\t\t\tPARSE_TEXT: 'Y',\n\t\t};\n\t}\n\n\tgetModelSaveMethod(): string\n\t{\n\t\treturn 'recent/setRecent';\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst extractor = new RecentDataExtractor({ rawData, ...this.getExtractorOptions() });\n\t\tconst extractedItems = extractor.getItems();\n\t\tconst {\n\t\t\tusers,\n\t\t\tchats,\n\t\t\tmessages,\n\t\t\tfiles,\n\t\t\trecentItems,\n\t\t\tcopilot,\n\t\t} = extractedItems;\n\t\tLogger.warn('RecentService: prepared data for models', extractedItems);\n\n\t\tconst usersPromise = Core.getStore().dispatch('users/set', users);\n\t\tconst dialoguesPromise = Core.getStore().dispatch('chats/set', chats);\n\t\tconst messagesPromise = Core.getStore().dispatch('messages/store', messages);\n\t\tconst filesPromise = Core.getStore().dispatch('files/set', files);\n\t\tconst recentPromise = Core.getStore().dispatch(this.getModelSaveMethod(), recentItems);\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleRecentListResponse(copilot);\n\n\t\treturn Promise.all([\n\t\t\tusersPromise,\n\t\t\tdialoguesPromise,\n\t\t\tmessagesPromise,\n\t\t\tfilesPromise,\n\t\t\trecentPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n\n\tgetExtractorOptions(): { withBirthdays?: boolean }\n\t{\n\t\treturn {};\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawCommentInfo,\n\tRawPin,\n\tRawReaction,\n\tRawCopilot,\n} from '../../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#restResult.chat.dialogId;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.lines;\n\t}\n\n\tisCopilotChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.copilot;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetCommentInfo(): RawCommentInfo[]\n\t{\n\t\treturn this.#restResult.commentInfo ?? [];\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n\n\tgetCopilot(): RawCopilot\n\t{\n\t\treturn this.#restResult.copilot;\n\t}\n}\n","import { Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, Layout } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Utils } from 'im.v2.lib.utils';\nimport { CopilotManager } from 'im.v2.lib.copilot';\n\nimport { ChatDataExtractor } from './chat-data-extractor';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { ChatLoadRestResult, CommentInfoRestResult } from '../../types/rest';\n\ntype UpdateModelsResult = {\n\tdialogId: string,\n\tchatId: number,\n};\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\tasync loadComments(postId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tpostId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t\tautoJoin: true,\n\t\t\tcreateIfNotExists: true,\n\t\t};\n\n\t\tconst { chatId } = await this.#requestChat(RestMethod.imV2ChatLoad, params);\n\n\t\treturn this.#store.dispatch('messages/comments/set', {\n\t\t\tmessageId: postId,\n\t\t\tchatId,\n\t\t});\n\t}\n\n\tasync loadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](channelDialogId, true);\n\t\tconst messages = this.#store.getters['messages/getByChatId'](dialog.chatId);\n\t\tconst messageIds = messages.map((message: ImModelMessage) => message.id);\n\t\tconst { commentInfo, usersShort }: CommentInfoRestResult = await runAction(\n\t\t\tRestMethod.imV2ChatMessageCommentInfoList,\n\t\t\t{ data: { messageIds } },\n\t\t)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading comment info', error);\n\t\t\t});\n\n\t\tconst userManager = new UserManager();\n\n\t\tvoid this.#store.dispatch('messages/comments/set', commentInfo);\n\t\tvoid userManager.addUsersToModel(usersShort);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId, true);\n\t\tthis.#store.dispatch('messages/clearChatCollection', { chatId: dialog.chatId });\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\t}\n\n\tasync #requestChat(actionName: string, params: Object<string, any>): Promise<{ dialogId: string, chatId: number }>\n\t{\n\t\tconst { dialogId, messageId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\tconst actionResult = await runAction(actionName, { data: params })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', error);\n\t\t\t\tthis.#markDialogAsNotLoaded(dialogId);\n\t\t\t\tthrow error;\n\t\t\t});\n\n\t\tif (this.#needLayoutRedirect(actionResult))\n\t\t{\n\t\t\treturn this.#redirectToLayout(actionResult, messageId);\n\t\t}\n\n\t\tconst {\n\t\t\tdialogId: loadedDialogId,\n\t\t\tchatId,\n\t\t} = await this.#updateModels(actionResult);\n\n\t\tif (this.#isDialogLoadedMarkNeeded(actionName))\n\t\t{\n\t\t\tawait this.#markDialogAsLoaded(loadedDialogId);\n\t\t}\n\n\t\treturn { dialogId: loadedDialogId, chatId };\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsNotLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#isDialogLoadedMarkNeeded(actionName: string): boolean\n\t{\n\t\treturn actionName !== RestMethod.imV2ChatShallowLoad;\n\t}\n\n\tasync #updateModels(restResult: ChatLoadRestResult): Promise<UpdateModelsResult>\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\n\t\tconst chatsPromise = this.#store.dispatch('chats/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t\tthis.#store.dispatch('messages/comments/set', extractor.getCommentInfo()),\n\t\t]);\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleChatLoadResponse(extractor.getCopilot());\n\n\t\tawait Promise.all([\n\t\t\tchatsPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\n\t\treturn { dialogId: extractor.getDialogId(), chatId: extractor.getChatId() };\n\t}\n\n\t#needLayoutRedirect(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\treturn this.#needRedirectToCopilotLayout(actionResult) || this.#needRedirectToOpenLinesLayout(actionResult);\n\t}\n\n\t#redirectToLayout(actionResult: ChatLoadRestResult, contextId: number = 0): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tLayoutManager.getInstance().setLastOpenedElement(Layout.chat.name, '');\n\n\t\tif (this.#needRedirectToCopilotLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openCopilot(extractor.getDialogId(), contextId);\n\t\t}\n\n\t\tif (this.#needRedirectToOpenLinesLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openLines(extractor.getDialogId());\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#needRedirectToCopilotLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tconst currentLayoutName = LayoutManager.getInstance().getLayout().name;\n\n\t\treturn extractor.isCopilotChat() && currentLayoutName !== Layout.copilot.name;\n\t}\n\n\t#needRedirectToOpenLinesLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\n\t\treturn extractor.isOpenlinesChat() && Type.isStringFilled(extractor.getDialogId());\n\t}\n}\n","import { Type } from 'main.core';\nimport { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport type { ChatConfig, RestChatConfig } from '../types/chat';\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync createChat(chatConfig: ChatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst createResult: RestResult = await this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: preparedFields,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult.data();\n\n\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addChatToModel(newDialogId, preparedFields);\n\t\tthis.#sendAnalytics(newDialogId);\n\n\t\treturn { newDialogId, newChatId };\n\t}\n\n\tasync #prepareFields(chatConfig: ChatConfig): RestChatConfig\n\t{\n\t\tconst preparedConfig = { ...chatConfig };\n\t\tif (preparedConfig.avatar)\n\t\t{\n\t\t\tpreparedConfig.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tpreparedConfig.managers = preparedConfig.managers ?? [];\n\t\tpreparedConfig.members = preparedConfig.members ?? [];\n\t\tconst allMembers = [...preparedConfig.members, ...preparedConfig.managers];\n\t\tif (preparedConfig.ownerId)\n\t\t{\n\t\t\tallMembers.push(preparedConfig.ownerId);\n\t\t}\n\t\tpreparedConfig.members = [...new Set(allMembers)];\n\n\t\tconst result = {\n\t\t\ttype: preparedConfig.type?.toUpperCase(),\n\t\t\tentityType: preparedConfig.entityType?.toUpperCase(),\n\t\t\ttitle: preparedConfig.title,\n\t\t\tavatar: preparedConfig.avatar,\n\t\t\tdescription: preparedConfig.description,\n\t\t\tusers: preparedConfig.members,\n\t\t\tmemberEntities: preparedConfig.memberEntities,\n\t\t\tmanagers: preparedConfig.managers,\n\t\t\townerId: preparedConfig.ownerId,\n\t\t\tsearchable: preparedConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUsersAdd: preparedConfig.manageUsersAdd,\n\t\t\tmanageUsersDelete: preparedConfig.manageUsersDelete,\n\t\t\tmanageUi: preparedConfig.manageUi,\n\t\t\tmanageSettings: preparedConfig.manageSettings,\n\t\t\tmanageMessages: preparedConfig.manageMessages,\n\t\t\tconferencePassword: preparedConfig.conferencePassword,\n\t\t\tcopilotMainRole: preparedConfig.copilotMainRole,\n\t\t};\n\n\t\tObject.entries(result).forEach(([key, value]) => {\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tdelete result[key];\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: RestChatConfig)\n\t{\n\t\tlet chatType = chatConfig.searchable === 'Y' ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tif (Type.isStringFilled(chatConfig.entityType))\n\t\t{\n\t\t\tchatType = chatConfig.entityType.toLowerCase();\n\t\t}\n\n\t\tif (Type.isStringFilled(chatConfig.type))\n\t\t{\n\t\t\tchatType = chatConfig.type.toLowerCase();\n\t\t}\n\n\t\tthis.#store.dispatch('chats/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.users.length,\n\t\t\trole: UserRole.owner,\n\t\t\tpermissions: {\n\t\t\t\tmanageUi: chatConfig.manageUi,\n\t\t\t\tmanageSettings: chatConfig.manageSettings,\n\t\t\t\tmanageUsersAdd: chatConfig.manageUsersAdd,\n\t\t\t\tmanageUsersDelete: chatConfig.manageUsersDelete,\n\t\t\t\tmanageMessages: chatConfig.manageMessages,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendAnalytics(dialogId)\n\t{\n\t\tAnalytics.getInstance().onCreateChat(dialogId);\n\t}\n}\n","import { isResizableImage, resizeImage } from 'ui.uploader.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Utils } from 'im.v2.lib.utils';\n\nexport class UpdateService\n{\n\tasync prepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\tif (!isResizableImage(avatarFile))\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\treturn Promise.reject(new Error('UpdateService: prepareAvatar: incorrect image'));\n\t\t}\n\n\t\tconst MAX_AVATAR_SIZE = 180;\n\t\tconst { preview: resizedAvatar } = await resizeImage(avatarFile, {\n\t\t\twidth: MAX_AVATAR_SIZE,\n\t\t\theight: MAX_AVATAR_SIZE,\n\t\t});\n\n\t\treturn resizedAvatar;\n\t}\n\n\tasync changeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\tLogger.warn('ChatService: changeAvatar', chatId, avatarFile);\n\t\tconst avatarInBase64 = await Utils.file.getBase64(avatarFile);\n\n\t\treturn runAction(RestMethod.imV2ChatUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tfields: { avatar: avatarInBase64 },\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: changeAvatar error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName,\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { name: title },\n\t\t});\n\t}\n}\n","import { Runtime } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tconst DEBOUNCE_TIME = 500;\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('chats/mute', { dialogId });\n\t\tconst queryParams = { dialog_id: dialogId, action: 'Y' };\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('chats/unmute', { dialogId });\n\t\tconst queryParams = { dialog_id: dialogId, action: 'N' };\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst { dialog_id: dialogId, action } = queryParams;\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch((error) => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\n\t\t\tconst actionType = action === 'Y' ? 'chats/unmute' : 'chats/mute';\n\t\t\tthis.#store.dispatch(actionType, { dialogId });\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tconst queryParams = { DIALOG_ID: dialogId, ACTION: 'Y' };\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', { id: dialogId, action: false });\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tconst queryParams = { DIALOG_ID: dialogId, ACTION: 'N' };\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', { id: dialogId, action: true });\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<number>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('chats/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { counter: 0 },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\t\tthis.#store.dispatch('recent/unread', { id: dialogId, action: false });\n\t\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([rawChatId, messageIds]) => {\n\t\t\t\tthis.#readMessagesForChat(rawChatId, messageIds);\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tasync #readMessagesForChat(rawChatId: string, messageIds: Set<number>)\n\t{\n\t\tconst queueChatId = Number.parseInt(rawChatId, 10);\n\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\tif (messageIds.size === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copiedMessageIds = [...messageIds];\n\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\tconst readMessagesCount = await this.#readMessageOnClient(queueChatId, copiedMessageIds);\n\n\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\tawait this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\n\t\tconst readResult = await this.#readMessageOnServer(queueChatId, copiedMessageIds)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t});\n\n\t\tthis.#checkChatCounter(readResult);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && !recentItem?.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: 'Y',\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds,\n\t\t});\n\t}\n\n\t#decreaseCommentCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\tconst counters = {\n\t\t\t[chat.parentChatId]: {\n\t\t\t\t[chatId]: newCounter,\n\t\t\t},\n\t\t};\n\n\t\treturn Core.getStore().dispatch('counters/setCommentCounters', counters);\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tif (chat.type === ChatType.comment)\n\t\t{\n\t\t\treturn this.#decreaseCommentCounter(chatId, readMessagesCount);\n\t\t}\n\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tfields: { counter: newCounter },\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst { chatId, counter } = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: { counter },\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId);\n\t}\n}\n","import 'ui.notification';\nimport { Loc } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, RestMethod, UserRole } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat } from 'im.v2.model';\n\ntype RestError = {\n\tanswer: {\n\t\terror: string,\n\t\terror_description: string,\n\t},\n\tstatus: number,\n};\n\nconst DeleteUserErrorCode = {\n\tuserInvitedFromStructure: 'USER_INVITED_FROM_STRUCTURE',\n\tuserNotFound: 'USER_NOT_FOUND',\n};\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory,\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tasync kickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tconst queryParams = { dialogId, userId };\n\t\ttry\n\t\t{\n\t\t\tawait this.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.#onChatKickError(error);\n\t\t}\n\t}\n\n\tasync leaveChat(dialogId: string)\n\t{\n\t\tconst queryParams = { dialogId, userId: Core.getUserId() };\n\t\ttry\n\t\t{\n\t\t\tawait this.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams);\n\t\t\tthis.#onChatLeave(dialogId);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.#onChatLeaveError(error);\n\t\t}\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tLogger.warn(`UserService: join chat ${dialogId}`);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\trole: UserRole.member,\n\t\t\t},\n\t\t});\n\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatJoin, {\n\t\t\tdialogId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error joining chat', error);\n\t\t});\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: add manager ${userId} to ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = [...managerList, userId];\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatAddManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: add manager error', error);\n\t\t\t});\n\t}\n\n\tremoveManager(dialogId: string, userId: number): void\n\t{\n\t\tLogger.warn(`UserService: remove manager ${userId} from ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (!managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = managerList.filter((managerId) => managerId !== userId);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatDeleteManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: remove manager error', error);\n\t\t\t});\n\t}\n\n\t#onChatLeave(dialogId: string): void\n\t{\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\t\tvoid this.#store.dispatch('recent/delete', { id: dialogId });\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tvoid Messenger.openChat();\n\t\t}\n\t}\n\n\t#onChatKickError(error: RestError)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('UserService: error kicking from chat', error);\n\n\t\tconst NotificationTextByErrorCode = {\n\t\t\t[DeleteUserErrorCode.userInvitedFromStructure]: Loc.getMessage('IM_MESSAGE_SERVICE_KICK_CHAT_STRUCTURE_ERROR'),\n\t\t\tdefault: Loc.getMessage('IM_MESSAGE_SERVICE_KICK_CHAT_DEFAULT_ERROR'),\n\t\t};\n\n\t\tconst errorCode = this.#getErrorCode(error);\n\t\tconst notificationText = NotificationTextByErrorCode[errorCode] ?? NotificationTextByErrorCode.default;\n\t\tthis.#showNotification(notificationText);\n\t}\n\n\t#onChatLeaveError(error: RestError)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('UserService: error leaving chat', error);\n\n\t\tconst NotificationTextByErrorCode = {\n\t\t\t[DeleteUserErrorCode.userInvitedFromStructure]: Loc.getMessage('IM_MESSAGE_SERVICE_LEAVE_CHAT_STRUCTURE_ERROR'),\n\t\t\tdefault: Loc.getMessage('IM_MESSAGE_SERVICE_LEAVE_CHAT_DEFAULT_ERROR'),\n\t\t};\n\n\t\tconst errorCode = this.#getErrorCode(error);\n\t\tconst notificationText = NotificationTextByErrorCode[errorCode] ?? NotificationTextByErrorCode.default;\n\t\tthis.#showNotification(notificationText);\n\t}\n\n\t#showNotification(text: string): void\n\t{\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: text,\n\t\t\tautoHideDelay: 5000,\n\t\t});\n\t}\n\n\t#getErrorCode(error: RestError): string\n\t{\n\t\tconst { answer: { error: errorCode } } = error;\n\n\t\treturn errorCode;\n\t}\n}\n","import { LoadService } from './classes/load';\nimport { CreateService } from './classes/create';\nimport { UpdateService } from './classes/update';\nimport { RenameService } from './classes/rename';\nimport { MuteService } from './classes/mute';\nimport { PinService } from './classes/pin';\nimport { ReadService } from './classes/read';\nimport { UserService } from './classes/user';\n\nexport class ChatService\n{\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#updateService: UpdateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tloadComments(postId: number): Promise\n\t{\n\t\treturn this.#loadService.loadComments(postId);\n\t}\n\n\tloadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadCommentInfo(channelDialogId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.resetChat(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'update'\n\tprepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\treturn this.#updateService.prepareAvatar(avatarFile);\n\t}\n\n\tchangeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\treturn this.#updateService.changeAvatar(chatId, avatarFile);\n\t}\n\t// endregion 'update'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tthis.#userService.joinChat(dialogId);\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.addManager(dialogId, userId);\n\t}\n\n\tremoveManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.removeManager(dialogId, userId);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#updateService = new UpdateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { callBatch, runAction } from 'im.v2.lib.rest';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { CopilotManager } from 'im.v2.lib.copilot';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { PaginationRestResult } from '../types/message';\nimport type { RawMessage, RawCommentInfo } from '../../types/rest';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: RawMessage[] = [];\n\t#preparedUnreadMessages: RawMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = { ...result, hasPrevPage, hasNextPage: null };\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tasync loadFirstPage(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadFirstPage for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t\torder: { id: 'ASC' },\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageTail, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadFirstPage error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadFirstPage result', restResult);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tawait this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage: false,\n\t\t\t\thasNextPage: restResult.hasNextPage,\n\t\t\t},\n\t\t});\n\t\tthis.#isLoading = false;\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId],\n\t\t\t},\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\n\t\treturn callBatch(query)\n\t\t\t.then((data) => {\n\t\t\t\tLogger.warn('MessageService: loadContext result', data);\n\n\t\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadContext error:', error);\n\t\t\t\tthrow new Error(error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\t}\n\n\tasync loadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\tconst queryParams = {\n\t\t\tdata: { commentChatId: chatId },\n\t\t};\n\t\tconst result = await runAction(RestMethod.imV2ChatMessageGetContext, queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\t});\n\n\t\tconst commentInfo: RawCommentInfo[] = result.commentInfo;\n\t\tconst targetCommentInfo: ?RawCommentInfo = commentInfo.find((item) => {\n\t\t\treturn item.chatId === chatId;\n\t\t});\n\t\tconst targetMessageId = targetCommentInfo?.messageId;\n\n\t\tLogger.warn('MessageService: loadContextByChatId result', result);\n\t\tvoid this.#handleLoadedMessages(result);\n\n\t\treturn targetMessageId;\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().chatId <= 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId)\n\t\t\t\t.catch(() => {})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages()\n\t\t\t.catch(() => {})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t}\n\n\tasync loadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageList, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages result', restResult);\n\t\trestResult.messages = this.#prepareInitialMessages(restResult.messages);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tthis.#isLoading = false;\n\t}\n\n\t#prepareInitialMessages(rawMessages: RawMessage[]): RawMessage[]\n\t{\n\t\tif (rawMessages.length === 0)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst lastMessageId = this.#getDialog().lastMessageId;\n\t\tconst newMaxId = Math.max(...rawMessages.map((message) => message.id));\n\t\tif (newMaxId >= lastMessageId)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst messagesCollection: ImModelMessage[] = this.#store.getters['messages/getByChatId'](this.#chatId);\n\t\tconst additionalMessages = messagesCollection.filter((message) => {\n\t\t\treturn message.id > newMaxId;\n\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages: local id is higher than server one', additionalMessages);\n\n\t\treturn [...rawMessages, ...additionalMessages];\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst { messages } = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true,\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: PaginationRestResult): Promise\n\t{\n\t\tconst {\n\t\t\tfiles,\n\t\t\tusers,\n\t\t\tusersShort,\n\t\t\treactions,\n\t\t\thasPrevPage,\n\t\t\thasNextPage,\n\t\t\tadditionalMessages,\n\t\t\tcommentInfo,\n\t\t\tcopilot,\n\t\t} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage,\n\t\t\t},\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort),\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\t\tconst additionalMessagesPromise = this.#store.dispatch('messages/store', additionalMessages);\n\t\tconst commentInfoPromise = this.#store.dispatch('messages/comments/set', commentInfo);\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleChatLoadResponse(copilot);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\treactionsPromise,\n\t\t\tadditionalMessagesPromise,\n\t\t\tcommentInfoPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag,\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields,\n\t\t});\n\t}\n\n\t#getDialog(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, { id: messageId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\t\tchatId,\n\t\t\t\t\tmessageId,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, { id: messageId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\t\tchatId,\n\t\t\t\t\tmessageId,\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\nexport class EditService\n{\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tconst message = this.#getMessage(messageId);\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateMessageModel(messageId, text);\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tid: messageId,\n\t\t\t\tfields: { message: text },\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatMessageUpdate, payload)\n\t\t\t.catch((error) => {\n\t\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t\t});\n\t}\n\n\t#updateMessageModel(messageId: number, text: string): void\n\t{\n\t\tconst message = this.#getMessage(messageId);\n\t\tconst isEdited = message.viewedByOthers;\n\n\t\tCore.getStore().dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited,\n\t\t\t},\n\t\t});\n\t}\n\n\t#getMessage(messageId: number): ImModelMessage | null\n\t{\n\t\treturn Core.getStore().getters['messages/getById'](messageId);\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { RestMethod, EventType, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\n\nimport type { ImModelChat, ImModelMessage, ImModelRecentItem } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync deleteMessage(messageId: number | string)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\n\t\tif (Utils.text.isUuidV4(messageId))\n\t\t{\n\t\t\tthis.#deleteTemporaryMessage(messageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#sendDeleteEvent(messageId);\n\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (this.#canDeleteCompletely(message))\n\t\t{\n\t\t\tvoid this.#completeMessageDelete(message);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#shallowMessageDelete(message);\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#canDeleteCompletely(message: ImModelMessage): boolean\n\t{\n\t\tconst alwaysCompleteDeleteChats = [ChatType.channel, ChatType.openChannel, ChatType.generalChannel];\n\t\tconst neverCompleteDeleteChats = [ChatType.comment];\n\n\t\tconst chat = this.#getChat();\n\t\tif (alwaysCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (neverCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !message.viewedByOthers;\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (message.id === chat.lastMessageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(message.id);\n\t\t\tthis.#updateRecentForCompleteDelete(newLastId);\n\t\t\tthis.#updateChatForCompleteDelete(newLastId);\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#updateRecentForCompleteDelete(newLastId: number)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (!newLastId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/delete', { id: chat.dialogId });\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: chat.dialogId,\n\t\t\tfields: { messageId: newLastId },\n\t\t});\n\t}\n\n\t#updateChatForCompleteDelete(newLastId)\n\t{\n\t\tconst chat = this.#getChat();\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: chat.dialogId,\n\t\t\tfields: {\n\t\t\t\tlastMessageId: newLastId,\n\t\t\t\tlastId: newLastId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\tdialogId: chat.dialogId,\n\t\t});\n\t}\n\n\t#deleteMessageOnServer(messageId: number): Promise\n\t{\n\t\treturn runAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n\n\t#deleteTemporaryMessage(messageId: string)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](chat.dialogId);\n\t\tif (recentItem.messageId === messageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(messageId);\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: chat.dialogId,\n\t\t\t\tfields: { messageId: newLastId },\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: messageId,\n\t\t});\n\t}\n\n\t#getPreviousMessageId(messageId: number): number\n\t{\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId,\n\t\t\tchatId: this.#chatId,\n\t\t});\n\n\t\treturn previousMessage?.id ?? 0;\n\t}\n\n\t#sendDeleteEvent(messageId: number)\n\t{\n\t\tEventEmitter.emit(EventType.dialog.onMessageDeleted, { messageId });\n\t}\n\n\t#getChat(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst { dialogId } = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { markedId: messageId },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}\n","import { Loc } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS'),\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}\n","import { LoadService } from './classes/load';\nimport { PinService } from './classes/pin';\nimport { EditService } from './classes/edit';\nimport { DeleteService } from './classes/delete';\nimport { MarkService } from './classes/mark';\nimport { FavoriteService } from './classes/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst { chatId } = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService();\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\n\tloadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\treturn this.#loadService.loadContextByChatId(chatId);\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\treturn this.#loadService.loadFirstPage();\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number | string): Promise\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction, type RunActionError } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\nimport { EventType, RestMethod, DialogScrollThreshold, ChatType } from 'im.v2.const';\n\nimport { MessageService } from '../registry';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\ntype BaseMessageParams = {\n\tdialogId: string,\n\ttext: string,\n\ttempMessageId?: string,\n};\n\ntype PlainMessageParams = BaseMessageParams & {\n\treplyId?: number,\n\tforwardIds?: number[],\n};\n\ntype CopilotMessageParams = BaseMessageParams & {\n\tcopilot: {\n\t\tpromptCode: string,\n\t},\n};\n\ntype FileMessageParams = BaseMessageParams & {\n\tfileIds: string[],\n};\n\ntype PreparedMessage = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\treplyId: number,\n\tforward: {userId: number, id: string},\n\tforwardIds: {[string]: number},\n\ttext: string,\n\tparams: JsonObject,\n\tcopilot: JsonObject,\n\tunread: boolean,\n\tsending: boolean,\n\tviewedByOthers: boolean,\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\n\tstatic instance: SendingService = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync sendMessage(params: PlainMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage', params);\n\t\tconst message = this.#prepareMessage(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync sendMessageWithFiles(params: FileMessageParams): Promise\n\t{\n\t\tconst { text = '', fileIds = [] } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isArrayFilled(fileIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage with files', params);\n\t\tconst message = this.#prepareMessageWithFiles(params);\n\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync forwardMessages(params: PlainMessageParams): Promise\n\t{\n\t\tconst { forwardIds, dialogId, text } = params;\n\t\tif (!Type.isArrayFilled(forwardIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tLogger.warn('SendingService: forwardMessages', params);\n\n\t\tawait this.#handlePagination(dialogId);\n\n\t\tlet commentMessage = null;\n\t\tif (Type.isStringFilled(text))\n\t\t{\n\t\t\tcommentMessage = this.#prepareMessage(params);\n\t\t\tawait this.#addMessageToModels(commentMessage);\n\t\t}\n\n\t\tconst forwardUuidMap = this.#getForwardUuidMap(forwardIds);\n\t\tconst forwardedMessages = this.#prepareForwardMessages(params, forwardUuidMap);\n\n\t\tawait this.#addForwardsToModels(forwardedMessages);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\ttry\n\t\t{\n\t\t\tconst requestParams = this.#prepareSendForwardRequest({ forwardUuidMap, commentMessage, dialogId });\n\t\t\tconst response = await this.#sendMessageToServer(requestParams);\n\t\t\tLogger.warn('SendingService: forwardMessage result -', response);\n\t\t\tthis.#handleForwardMessageResponse({ response, dialogId, commentMessage });\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tthis.#handleForwardMessageError({ commentMessage, forwardUuidMap });\n\t\t\tthis.#logSendErrors(errors, 'forwardMessage');\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync retrySendMessage(params: { tempMessageId: string, dialogId: string }): Promise\n\t{\n\t\tconst { tempMessageId, dialogId } = params;\n\t\tconst unsentMessage: ImModelMessage = this.#store.getters['messages/getById'](tempMessageId);\n\t\tif (!unsentMessage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#removeMessageError(tempMessageId);\n\t\tconst message = this.#prepareMessage({\n\t\t\ttext: unsentMessage.text,\n\t\t\tdialogId,\n\t\t\ttempMessageId: unsentMessage.id,\n\t\t\treplyId: unsentMessage.replyId,\n\t\t});\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync sendCopilotPrompt(params: CopilotMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendCopilotPrompt', params);\n\t\tconst message = this.#preparePrompt(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync #processMessageSending(message: PreparedMessage): Promise\n\t{\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync #handleAddingMessageToModels(message)\n\t{\n\t\tawait this.#handlePagination(message.dialogId);\n\t\tawait this.#addMessageToModels(message);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId: message.dialogId });\n\t}\n\n\tasync #sendAndProcessMessage(message: PreparedMessage): Promise\n\t{\n\t\tconst sendResult = await this.#sendMessageToServer(message)\n\t\t\t.catch((errors) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\tthis.#logSendErrors(errors, 'sendAndProcessMessage');\n\t\t\t});\n\n\t\tLogger.warn('SendingService: sendAndProcessMessage result -', sendResult);\n\t\tconst { id } = sendResult;\n\t\tif (!id)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#updateModels({\n\t\t\toldId: message.temporaryId,\n\t\t\tnewId: id,\n\t\t\tdialogId: message.dialogId,\n\t\t});\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#prepareMessage(params: PlainMessageParams): PreparedMessage\n\t{\n\t\tconst { text, tempMessageId, dialogId, replyId, forwardIds } = params;\n\n\t\tconst defaultFields = {\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t};\n\n\t\treturn {\n\t\t\ttext,\n\t\t\tdialogId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\ttemporaryId: tempMessageId ?? Utils.text.getUuidV4(),\n\t\t\treplyId,\n\t\t\tforwardIds,\n\t\t\tviewedByOthers: this.#needToSetAsViewed(dialogId),\n\t\t\t...defaultFields,\n\t\t};\n\t}\n\n\t#prepareMessageWithFiles(params: FileMessageParams): PreparedMessage\n\t{\n\t\tconst { fileIds } = params;\n\t\tif (!Type.isArrayFilled(fileIds))\n\t\t{\n\t\t\tthrow new Error('SendingService: sendMessageWithFile: no fileId provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tparams: { FILE_ID: fileIds },\n\t\t};\n\t}\n\n\t#preparePrompt(params: CopilotMessageParams): PreparedMessage\n\t{\n\t\tconst { copilot } = params;\n\t\tif (!copilot || !copilot.promptCode)\n\t\t{\n\t\t\tthrow new Error('SendingService: preparePrompt: no code provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: PreparedMessage): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tvoid this.#store.dispatch('chats/clearLastMessageViews', { dialogId: message.dialogId });\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: PreparedMessage)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: { messageId: message.temporaryId },\n\t\t});\n\t}\n\n\t#sendMessageToServer(message: PreparedMessage): Promise\n\t{\n\t\tconst fields = {};\n\n\t\tif (message.replyId)\n\t\t{\n\t\t\tfields.replyId = message.replyId;\n\t\t}\n\n\t\tif (message.forwardIds)\n\t\t{\n\t\t\tfields.forwardIds = message.forwardIds;\n\t\t}\n\n\t\tif (message.text)\n\t\t{\n\t\t\tfields.message = message.text;\n\t\t\tfields.templateId = message.temporaryId;\n\t\t}\n\n\t\tif (message.copilot)\n\t\t{\n\t\t\tfields.copilot = message.copilot;\n\t\t}\n\n\t\tconst queryData = {\n\t\t\tdialogId: message.dialogId.toString(),\n\t\t\tfields,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageSend, { data: queryData });\n\t}\n\n\t#updateModels(params: { oldId: string, newId: number, dialogId: string })\n\t{\n\t\tconst { oldId, newId, dialogId } = params;\n\t\tvoid this.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: { id: newId },\n\t\t});\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: { messageId: newId },\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: { error: true },\n\t\t});\n\t}\n\n\t#removeMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\tsending: true,\n\t\t\t\terror: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId, true);\n\t}\n\n\t#getDialogByChatId(chatId: number): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId, true);\n\t}\n\n\t#needToSetAsViewed(dialogId: string): boolean\n\t{\n\t\treturn this.#store.getters['users/bots/isNetwork'](dialogId);\n\t}\n\n\t#handleForwardMessageResponse(params: { response: Object, dialogId: string, commentMessage: PreparedMessage })\n\t{\n\t\tconst { response, dialogId, commentMessage } = params;\n\t\tconst { id, uuidMap } = response;\n\n\t\tif (id)\n\t\t{\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: commentMessage.temporaryId,\n\t\t\t\tnewId: id,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t}\n\t\tObject.entries(uuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: uuid,\n\t\t\t\tnewId: messageId,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t});\n\t}\n\n\t#handleForwardMessageError({ commentMessage, forwardUuidMap })\n\t{\n\t\tif (commentMessage)\n\t\t{\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: commentMessage.temporaryId,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t}\n\n\t\tObject.keys(forwardUuidMap).forEach((uuid: string) => {\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: uuid,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareForwardMessages(params: PlainMessageParams, forwardUuidMap: {[string]: number}): PreparedMessage[]\n\t{\n\t\tconst { forwardIds, dialogId } = params;\n\t\tif (forwardIds.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst preparedMessages = [];\n\t\tObject.entries(forwardUuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\t\tif (!message)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreparedMessages.push({\n\t\t\t\t...this.#prepareMessage({ dialogId, text: message.text, tempMessageId: uuid, replyId: message.replyId }),\n\t\t\t\tforward: this.#prepareForwardParams(messageId),\n\t\t\t\tattach: message.attach,\n\t\t\t\tisDeleted: message.isDeleted,\n\t\t\t\tfiles: message.files,\n\t\t\t});\n\t\t});\n\n\t\treturn preparedMessages;\n\t}\n\n\t#prepareForwardParams(messageId: number): { id: string, userId: number, chatType: string, chatTitle: string }\n\t{\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tconst chat = this.#getDialogByChatId(message.chatId);\n\n\t\tconst isForward = this.#store.getters['messages/isForward'](messageId);\n\n\t\tconst userId = isForward ? message.forward.userId : message.authorId;\n\t\tconst chatType = isForward ? message.forward.chatType : chat.type;\n\t\tlet chatTitle = isForward ? message.forward.chatTitle : chat.name;\n\t\tif (chatType === ChatType.channel)\n\t\t{\n\t\t\tchatTitle = null;\n\t\t}\n\n\t\treturn {\n\t\t\tid: this.#buildForwardContextId(message.chatId, messageId),\n\t\t\tuserId,\n\t\t\tchatType,\n\t\t\tchatTitle,\n\t\t};\n\t}\n\n\t#prepareSendForwardRequest(params: {\n\t\tforwardUuidMap: { [string]: number },\n\t\tcommentMessage: ?PreparedMessage,\n\t\tdialogId: string\n\t}): { dialogId: string, forwardIds: { [string]: number }, text?: string, temporaryId?: string }\n\t{\n\t\tconst { dialogId, forwardUuidMap, commentMessage } = params;\n\n\t\tconst requestPrams = {\n\t\t\tdialogId,\n\t\t\tforwardIds: forwardUuidMap,\n\t\t};\n\n\t\tif (commentMessage)\n\t\t{\n\t\t\trequestPrams.text = commentMessage.text;\n\t\t\trequestPrams.temporaryId = commentMessage.temporaryId;\n\t\t}\n\n\t\treturn requestPrams;\n\t}\n\n\t#addForwardsToModels(forwardedMessages: PreparedMessage[]): Promise\n\t{\n\t\tconst addPromises = [];\n\t\tforwardedMessages.forEach((message) => {\n\t\t\taddPromises.push(this.#addMessageToModels(message));\n\t\t});\n\n\t\treturn Promise.all(addPromises);\n\t}\n\n\t#getForwardUuidMap(forwardIds: number[]): { [string]: number }\n\t{\n\t\tconst uuidMap = {};\n\t\tforwardIds.forEach((id) => {\n\t\t\tuuidMap[Utils.text.getUuidV4()] = id;\n\t\t});\n\n\t\treturn uuidMap;\n\t}\n\n\t#buildForwardContextId(chatId: number, messageId: number): string\n\t{\n\t\tconst dialogId = this.#getDialogByChatId(chatId).dialogId;\n\t\tif (dialogId.startsWith('chat'))\n\t\t{\n\t\t\treturn `${dialogId}/${messageId}`;\n\t\t}\n\n\t\tconst currentUser = Core.getUserId();\n\n\t\treturn `${dialogId}:${currentUser}/${messageId}`;\n\t}\n\n\t#logSendErrors(errors: RunActionError[], methodName: string)\n\t{\n\t\terrors.forEach((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`SendingService: ${methodName} error: code: ${error.code} message: ${error.message}`);\n\t\t});\n\t}\n}\n","import { Runtime, Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { NotificationTypesCodes, RestMethod } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { NotificationGetRestResult, NotificationItemRest } from './types/notification';\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({ firstPage: true });\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\t\tthis.store.dispatch('notifications/deleteFromSearch', { id: notificationId });\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\tNOTIFY_ID: notificationId,\n\t\t\tNOTIFY_VALUE: value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t}\n\n\tasync sendQuickAnswer(params)\n\t{\n\t\tconst { id, text, callbackSuccess = () => {}, callbackError = () => {} } = params;\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await this.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\t\tnotify_id: id,\n\t\t\t\tanswer_text: text,\n\t\t\t});\n\t\t\tcallbackSuccess(response);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t}\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', { id: idsToDelete })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\tLIMIT: this.limitPerPage,\n\t\t\tCONVERT_TEXT: 'Y',\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams],\n\t\t};\n\n\t\tif (firstPage)\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\t\telse\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn notifications.length < this.limitPerPage;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}\n","import { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({ chatId, fileId }): Promise\n\t{\n\t\tconst queryParams = { chat_id: chatId, file_id: fileId };\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = { file_id: fileId };\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}\n","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../types/uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n}\n\nconst MAX_FILES_IN_ONE_MESSAGE = 10;\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t\tonUploadComplete: 'onUploadComplete',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => {\n\t\t\t\treturn !file.getCustomData('sendAsFile') && file.getExtension() !== 'gif';\n\t\t\t},\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 720,\n\t\t\timagePreviewWidth: 720,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tignoreUnknownImageTypes: true,\n\t\t\tmaxFileSize: null,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onUploadComplete, { uploaderId });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\tdestroyUploader(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst firstTenTasks = tasks.slice(0, MAX_FILES_IN_ONE_MESSAGE);\n\n\t\tconst addedFiles = [];\n\t\tfirstTenTasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t\tsendAsFile: task.sendAsFile,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { getFilesFromDataTransfer, isFilePasted } from 'ui.uploader.core';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploader-wrapper';\nimport { SendingService } from '../registry';\n\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\nimport type { UploaderFile, UploaderError } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { RestClient } from 'rest.client';\nimport type {\n\tMessageWithFile,\n\tFileFromDisk,\n\tFileCommitParams,\n\tUploadFilesParams,\n\tUploadFromClipboardParams,\n\tUploadFromInputParams,\n\tUploadFromDragAndDrop,\n} from './types/uploading';\n\nexport class UploadingService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\t#sendingService: SendingService;\n\t#uploaderFilesRegistry: {\n\t\t[uploaderId: string]: {\n\t\t\tautoUpload: boolean,\n\t\t\twasSent: boolean,\n\t\t\ttext: string,\n\t\t\tdialogId: string,\n\t\t\ttempMessageId: string,\n\t\t\tpreviewCreatedStatus: { [string]: boolean },\n\t\t\tpreviewSentStatus: { [string]: boolean }\n\t\t}\n\t} = {};\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#sendingService = SendingService.getInstance();\n\t\tthis.#initUploader();\n\t}\n\n\tasync uploadFromClipboard(params: UploadFromClipboardParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { clipboardEvent, dialogId, autoUpload, imagesOnly } = params;\n\n\t\tconst { clipboardData } = clipboardEvent;\n\t\tif (!clipboardData || !isFilePasted(clipboardData))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tclipboardEvent.preventDefault();\n\n\t\tlet files: File[] = await getFilesFromDataTransfer(clipboardData);\n\t\tif (imagesOnly)\n\t\t{\n\t\t\tfiles = files.filter((file) => Utils.file.isImage(file.name));\n\t\t\tif (imagesOnly.length === 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\tconst { uploaderFiles, uploaderId } = await this.#addFiles({\n\t\t\tfiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t});\n\n\t\tif (uploaderFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn uploaderId;\n\t}\n\n\tasync uploadFromInput(params: UploadFromInputParams): Promise<string>\n\t{\n\t\tconst { event, sendAsFile, autoUpload, dialogId } = params;\n\t\tconst rawFiles = Object.values(event.target.files);\n\t\tif (rawFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tconst { uploaderId } = await this.#addFiles({\n\t\t\tfiles: rawFiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t\tsendAsFile,\n\t\t});\n\n\t\treturn uploaderId;\n\t}\n\n\tasync uploadFromDragAndDrop(params: UploadFromDragAndDrop): Promise<string>\n\t{\n\t\tconst { event, dialogId, autoUpload, sendAsFile } = params;\n\t\tevent.preventDefault();\n\n\t\tconst rawFiles = await getFilesFromDataTransfer(event.dataTransfer);\n\t\tif (rawFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tconst { uploaderId } = await this.#addFiles({\n\t\t\tfiles: rawFiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t\tsendAsFile,\n\t\t});\n\n\t\treturn uploaderId;\n\t}\n\n\t#createUploader(params: { dialogId: string, autoUpload: boolean }): Promise<string>\n\t{\n\t\tconst { dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t});\n\n\t\t\treturn uploaderId;\n\t\t});\n\t}\n\n\t#addFiles(params: UploadFilesParams): Promise<{uploaderFiles: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload, sendAsFile = false } = params;\n\n\t\treturn this.#createUploader({ dialogId, autoUpload }).then((uploaderId: string) => {\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst preparedFile = this.#prepareFileForUploader(file, dialogId, uploaderId, sendAsFile);\n\t\t\t\tfilesForUploader.push(preparedFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\t\t\tthis.#registerFiles(uploaderId, addedFiles, dialogId, autoUpload);\n\n\t\t\treturn {\n\t\t\t\tuploaderFiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = true;\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(files, dialogId)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#addFileFromDiskToModel(messageWithFile).then(() => {\n\t\t\t\tconst message = {\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileIds: [messageWithFile.tempFileId],\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t};\n\n\t\t\t\treturn this.#sendingService.sendMessageWithFiles(message);\n\t\t\t}).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t\tthis.#setPreviewCreatedStatus(uploaderId, file.getId());\n\t\t\tthis.#tryToSendMessage(uploaderId);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, async (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId }: {file: UploaderFile, uploaderId: string} = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.wait);\n\n\t\t\tawait this.#uploadPreview(file);\n\t\t\tthis.#setPreviewSentStatus(uploaderId, file.getId());\n\n\t\t\tvoid this.#tryCommit(uploaderId);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tthis.#setMessageError(file.getCustomData('tempMessageId'));\n\t\t\tthis.#showError(error);\n\t\t\tLogger.error('UploadingService: upload error', error);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('chats/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tthis.#setMessageError(tempMessageId);\n\t\t\tthis.#updateFileProgress(temporaryFileId, 0, FileStatus.error);\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\tcommitMessage(uploaderId: string): Promise\n\t{\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\tconst fileIds = this.#uploaderWrapper.getFiles(uploaderId).map((file) => {\n\t\t\treturn file.getServerFileId().toString().slice(1);\n\t\t});\n\n\t\tconst sendAsFile = this.#uploaderWrapper.getFiles(uploaderId).every((file) => {\n\t\t\treturn file.getCustomData('sendAsFile');\n\t\t});\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: this.#uploaderFilesRegistry[uploaderId].text,\n\t\t\ttemplate_id: this.#uploaderFilesRegistry[uploaderId].tempMessageId,\n\t\t\t// file_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\tupload_id: fileIds,\n\t\t});\n\t}\n\n\tasync #tryCommit(uploaderId: string)\n\t{\n\t\tif (!this.#readyToCommit(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.commitMessage(uploaderId);\n\t\tthis.#uploaderWrapper.destroyUploader(uploaderId);\n\t}\n\n\tasync #uploadPreview(file: UploaderFile): Promise\n\t{\n\t\tif (\n\t\t\tthis.#getFileType(file.getBinary()) === FileType.file\n\t\t\t|| file.getExtension() === 'gif'\n\t\t)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\tfile.setCustomData('sendAsFile', true);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\treturn runAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareFileForUploader(file: File, dialogId: string, uploaderId, sendAsFile: boolean): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t\tsendAsFile,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tvoid this.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\tvoid this.#store.dispatch('files/delete', { id: tempFileId });\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\t\tconst asFile = file.getCustomData('sendAsFile');\n\n\t\tvoid this.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\tsize: file.getSize(),\n\t\t\ttype: asFile ? FileType.file : this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tif (file.getCustomData('sendAsFile'))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\tif (file.getClientPreview())\n\t\t{\n\t\t\tpreviewData.urlShow = URL.createObjectURL(file.getBinary());\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\t#registerFiles(uploaderId: string, files: UploaderFile[], dialogId: string, autoUpload: boolean)\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\tthis.#uploaderFilesRegistry[uploaderId] = {\n\t\t\t\tpreviewCreatedStatus: {},\n\t\t\t\tpreviewSentStatus: {},\n\t\t\t\tdialogId,\n\t\t\t\ttext: '',\n\t\t\t\tautoUpload,\n\t\t\t};\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tconst fileId = file.getId();\n\t\t\tif (!this.#uploaderFilesRegistry[uploaderId].previewCreatedStatus)\n\t\t\t{\n\t\t\t\tthis.#uploaderFilesRegistry[uploaderId].previewCreatedStatus = {};\n\t\t\t}\n\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].previewCreatedStatus[fileId] = false;\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].previewSentStatus[fileId] = false;\n\t\t});\n\t}\n\n\t#setPreviewCreatedStatus(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].previewCreatedStatus[fileId] = true;\n\t}\n\n\t#setPreviewSentStatus(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].previewSentStatus[fileId] = true;\n\t}\n\n\t#setMessagesText(uploaderId: string, text: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].text = text;\n\t}\n\n\t#setAutoUpload(uploaderId: string, autoUploadFlag: boolean)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = autoUploadFlag;\n\t}\n\n\t// we don't use it now, because we always send several files in ONE message\n\t// noinspection JSUnusedGlobalSymbols\n\tsendSeparateMessagesWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessages(uploaderId);\n\t}\n\n\tsendMessageWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessage(uploaderId);\n\t}\n\n\t#createMessagesFromFiles(uploaderId): {comment: {text: string, dialogId: string}, files: []}\n\t{\n\t\tconst messagesToSend = {\n\t\t\tcomment: {},\n\t\t\tfiles: [],\n\t\t};\n\n\t\tconst files = this.getFiles(uploaderId);\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.comment = { dialogId, text };\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tmessagesToSend.files.push({\n\t\t\t\tfileIds: [file.getId()],\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId,\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\treturn messagesToSend;\n\t}\n\n\t#createMessageFromFiles(uploaderId): {text: string, dialogId: string, tempMessageId: string, fileIds: []}\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tthis.#uploaderFilesRegistry[uploaderId].tempMessageId = tempMessageId;\n\n\t\tconst fileIds = [];\n\t\tconst files = this.getFiles(uploaderId);\n\t\tfiles.forEach((file) => {\n\t\t\tif (!file.getError())\n\t\t\t{\n\t\t\t\tfileIds.push(file.getId());\n\t\t\t}\n\t\t});\n\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\n\t\treturn {\n\t\t\tfileIds,\n\t\t\ttempMessageId,\n\t\t\tdialogId,\n\t\t\ttext,\n\t\t};\n\t}\n\n\t#readyToAddMessages(uploaderId): boolean\n\t{\n\t\tif (\n\t\t\t!this.#uploaderFilesRegistry[uploaderId]\n\t\t\t|| !this.#uploaderFilesRegistry[uploaderId].autoUpload\n\t\t\t|| this.#uploaderFilesRegistry[uploaderId].wasSent\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { previewCreatedStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(previewCreatedStatus).every((flag) => flag === true);\n\t}\n\n\t#readyToCommit(uploaderId: string): boolean\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { previewSentStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(previewSentStatus).every((flag) => flag === true);\n\t}\n\n\t#tryToSendMessage(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\n\t\tconst message = this.#createMessageFromFiles(uploaderId);\n\t\tvoid this.#sendingService.sendMessageWithFiles(message);\n\t\tthis.start(uploaderId);\n\t}\n\n\t// we don't use it now, because we always send several files in ONE message\n\t// noinspection JSUnusedGlobalSymbols\n\t#tryToSendMessages(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\t\tconst { comment, files } = this.#createMessagesFromFiles(uploaderId);\n\t\tif (comment.text)\n\t\t{\n\t\t\tvoid this.#sendingService.sendMessage(comment);\n\t\t}\n\n\t\tfiles.forEach((message) => {\n\t\t\tvoid this.#sendingService.sendMessageWithFiles(message);\n\t\t});\n\t\tthis.start(uploaderId);\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\t#showError(error: UploaderError)\n\t{\n\t\tif (error.getCode() === 'MAX_FILE_SIZE_EXCEEDED')\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: `${error.getMessage()}<br>${error.getDescription()}`,\n\t\t\t});\n\t\t}\n\t}\n\n\t#setMessageError(tempMessageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: tempMessageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport class SettingsService\n{\n\tchangeSetting(settingName: string, value: any): Promise\n\t{\n\t\tLogger.warn('SettingsService: changeSetting', settingName, value);\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[settingName]: value,\n\t\t});\n\n\t\treturn runAction(RestMethod.imV2SettingsGeneralUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tname: settingName,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SettingsService: changeSetting error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class LinesService\n{\n\tasync getDialogIdByUserCode(userCode: string): Promise<string>\n\t{\n\t\tconst result = await Core.getRestClient().callMethod(RestMethod.linesDialogGet, {\n\t\t\tUSER_CODE: userCode,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('LinesService: error getting dialog id', error);\n\t\t});\n\n\t\tconst { dialog_id: dialogId } = result.data();\n\n\t\treturn dialogId;\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { ChatService } from '../registry';\n\nexport class CopilotService\n{\n\tasync createChat({ roleCode }: {roleCode: string}): Promise<string>\n\t{\n\t\tconst chatService = new ChatService();\n\t\tconst { newDialogId, newChatId } = await chatService.createChat({\n\t\t\ttype: ChatType.copilot,\n\t\t\tcopilotMainRole: roleCode,\n\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\tthis.#sendAnalytics({ chatId: newChatId, dialogId: newDialogId });\n\n\t\tawait chatService.loadChatWithMessages(newDialogId)\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\treturn newDialogId;\n\t}\n\n\t#onCreateError(error: Error)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Copilot chat create error', error);\n\t\tthrow new Error('Copilot chat create error');\n\t}\n\n\t#sendAnalytics({ chatId, dialogId })\n\t{\n\t\tAnalytics.getInstance().onCreateCopilotChat({ chatId, dialogId });\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { runAction } from 'im.v2.lib.rest';\nimport { RestMethod } from 'im.v2.const';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nexport const CommentsService = {\n\tsubscribe(messageId: number): Promise\n\t{\n\t\tCore.getStore().dispatch('messages/comments/subscribe', messageId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentSubscribe, {\n\t\t\tdata: {\n\t\t\t\tpostId: messageId,\n\t\t\t\tcreateIfNotExists: true,\n\t\t\t\tautoJoin: true,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: subscribe error', error);\n\t\t});\n\t},\n\n\tunsubscribe(messageId: number): Promise\n\t{\n\t\tCore.getStore().dispatch('messages/comments/unsubscribe', messageId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentUnsubscribe, {\n\t\t\tdata: {\n\t\t\t\tpostId: messageId,\n\t\t\t\tcreateIfNotExists: true,\n\t\t\t\tautoJoin: true,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: unsubscribe error', error);\n\t\t});\n\t},\n\n\treadAllChannelComments(channelDialogId: string): Promise\n\t{\n\t\tconst chat: ImModelChat = Core.getStore().getters['chats/get'](channelDialogId, true);\n\t\tconst currentChannelCounter: number = Core.getStore().getters['counters/getChannelCommentsCounter'](chat.chatId);\n\t\tif (currentChannelCounter === 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tCore.getStore().dispatch('counters/readAllChannelComments', chat.chatId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentReadAll, {\n\t\t\tdata: { dialogId: channelDialogId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: readAllChannelComments error', error);\n\t\t});\n\t},\n};\n"],"names":["RecentDataExtractor","constructor","params","rawData","withBirthdays","getItems","items","copilot","forEach","item","users","Object","values","chats","messages","files","recentItems","user","id","chat","existingRecentItem","Core","getStore","getters","options","default_user_record","message","FakeMessagePrefix","viewedByOthers","status","MessageStatus","delivered","existingMessage","Type","isArrayFilled","attach","isPlainObject","file","existingFile","messageId","birthdayList","counter","dialogId","chatId","chat_id","avatar","color","name","type","ChatType","role","UserRole","member","isBirthdayPlaceholder","fileId","existingMessageFilesIds","map","Number","parseInt","setOfFileIds","Set","RecentService","dataIsPreloaded","firstPageIsLoaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","getInstance","instance","getCollection","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","result","requestItems","firstPage","loadNextPage","setPreloadedData","hasMore","getLastMessageDate","updateModels","hideChat","recentItem","dispatch","chatIsOpened","Messenger","openChat","getRestClient","callMethod","RestMethod","imRecentHide","DIALOG_ID","catch","error","console","queryParams","getQueryParams","getQueryMethod","data","imRecentList","SKIP_OPENLINES","LIMIT","LAST_MESSAGE_DATE","GET_ORIGINAL_TEXT","PARSE_TEXT","getModelSaveMethod","extractor","getExtractorOptions","extractedItems","usersPromise","dialoguesPromise","messagesPromise","filesPromise","recentPromise","copilotManager","CopilotManager","copilotPromise","handleRecentListResponse","all","length","slice","date","ChatDataExtractor","restResult","getChatId","getDialogId","isOpenlinesChat","lines","isCopilotChat","getChats","mainChat","hasPrevPage","hasNextPage","UserManager","getDialogForUser","getFiles","getUsers","getAdditionalUsers","usersShort","getMessages","getCommentInfo","commentInfo","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","push","getReactions","reactions","getCopilot","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","runAction","imV2ChatGetDialogId","externalId","then","loadComments","postId","autoJoin","createIfNotExists","loadCommentInfo","channelDialogId","messageIds","imV2ChatMessageCommentInfoList","userManager","addUsersToModel","resetChat","fields","inited","actionName","actionResult","loadedDialogId","loading","chatsPromise","clearCollection","pinnedMessages","handleChatLoadResponse","contextId","LayoutManager","setLastOpenedElement","Layout","openCopilot","openLines","currentLayoutName","getLayout","isStringFilled","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","preparedFields","createResult","imV2ChatAdd","Error","newChatId","newDialogId","preparedConfig","getBase64","managers","members","allMembers","ownerId","toUpperCase","entityType","title","description","memberEntities","searchable","isAvailableInSearch","manageUsersAdd","manageUsersDelete","manageUi","manageSettings","manageMessages","conferencePassword","copilotMainRole","entries","key","value","isUndefined","chatType","toLowerCase","userCounter","owner","permissions","Analytics","onCreateChat","UpdateService","prepareAvatar","avatarFile","isResizableImage","reject","MAX_AVATAR_SIZE","preview","resizedAvatar","resizeImage","width","height","changeAvatar","avatarInBase64","imV2ChatUpdate","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","DEBOUNCE_TIME","Runtime","debounce","muteChat","action","unmuteChat","imChatMute","actionText","actionType","PinService","pinChat","ACTION","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","add","clearTimeout","readTimeout","setTimeout","rawChatId","clearDialogMark","markedId","unread","onlyRecent","queueChatId","size","copiedMessageIds","readMessagesCount","readResult","maxMessageId","Math","max","lastReadId","lastId","newCounter","counters","parentChatId","comment","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","DeleteUserErrorCode","userInvitedFromStructure","userNotFound","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","imV2ChatDeleteUser","leaveChat","getUserId","joinChat","imV2ChatJoin","addManager","managerList","includes","newManagerList","payload","userIds","imV2ChatAddManagers","removeManager","filter","managerId","imV2ChatDeleteManagers","NotificationTextByErrorCode","Loc","getMessage","default","errorCode","notificationText","text","BX","UI","Notification","Center","notify","content","autoHideDelay","answer","ChatService","loadUnread","lastUnreadMessageId","query","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","loadContextByChatId","commentChatId","targetCommentInfo","find","targetMessageId","reloadMessageList","savedPositionMessageId","wasInitedBefore","loadInitialMessages","imV2ChatMessageList","rawMessages","lastMessageId","newMaxId","messagesCollection","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","additionalMessagesPromise","commentInfoPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","imV2ChatMessageUpdate","isEdited","DeleteService","deleteMessage","isUuidV4","isDeleted","replyId","alwaysCompleteDeleteChats","channel","openChannel","generalChannel","neverCompleteDeleteChats","newLastId","imV2ChatMessageDelete","previousMessage","EventEmitter","emit","EventType","onMessageDeleted","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","sendMessage","sendMessageWithFiles","fileIds","forwardMessages","forwardIds","commentMessage","forwardUuidMap","forwardedMessages","force","requestParams","response","errors","retrySendMessage","tempMessageId","unsentMessage","sendCopilotPrompt","sendResult","temporaryId","oldId","newId","defaultFields","authorId","sending","getUuidV4","FILE_ID","promptCode","messageService","templateId","queryData","toString","imV2ChatMessageSend","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","uuidMap","uuid","keys","preparedMessages","forward","isForward","chatTitle","requestPrams","addPromises","startsWith","currentUser","methodName","code","NotificationService","store","restClient","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","NOTIFY_ID","NOTIFY_VALUE","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","CONVERT_TEXT","batchQueryParams","imNotifyGet","imNotifySchemaGet","LAST_ID","LAST_TYPE","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","destroy","DiskService","file_id","imDiskFileDelete","save","imDiskFileSave","MAX_FILES_IN_ONE_MESSAGE","UploaderWrapper","setEventNamespace","eventNamespace","bind","subscribe","uploader","cancel","createUploader","diskFolderId","uploaderId","autoUpload","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","getCustomData","getExtension","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","treatOversizeImageAsFile","ignoreUnknownImageTypes","maxFileSize","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","getData","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","onUploadComplete","start","setAutoUpload","destroyUploader","removeFilesFromServer","addFiles","tasks","firstTenTasks","addedFiles","task","unsubscribe","addFile","tempFileId","customData","sendAsFile","onFileUploadCancel","uploaderList","getFile","remove","UploadingService","uploadFromClipboard","clipboardEvent","imagesOnly","clipboardData","isFilePasted","preventDefault","getFilesFromDataTransfer","isImage","uploaderFiles","uploadFromInput","rawFiles","target","uploadFromDragAndDrop","dataTransfer","uploadFileFromDisk","messageWithFile","commitFile","temporaryFileId","realFileId","fromDisk","checkDiskFolderId","messageText","fileIdParams","disk_id","upload_id","imDiskFileCommit","template_id","file_template_id","as_file","FileStatus","commitMessage","getServerFileId","every","sendSeparateMessagesWithFiles","filesForUploader","preparedFile","getFileTypeByExtension","ext","extension","sizeInt","wait","progress","authorName","getId","getProgress","upload","imDiskFolderGet","ID","commit","getBinary","FileType","previewFile","getClientPreview","setCustomData","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","previewData","asFile","getSize","isFailed","blob","getPreviewUrl","getPreviewWidth","getPreviewHeight","image","urlPreview","urlShow","URL","createObjectURL","fileType","video","split","splice","previewCreatedStatus","previewSentStatus","autoUploadFlag","messagesToSend","hasText","getError","wasSent","getCode","getDescription","SettingsService","changeSetting","settingName","imV2SettingsGeneralUpdate","LinesService","getDialogIdByUserCode","userCode","linesDialogGet","USER_CODE","CopilotService","roleCode","chatService","onCreateCopilotChat","CommentsService","imV2ChatCommentSubscribe","imV2ChatCommentUnsubscribe","readAllChannelComments","currentChannelCounter","imV2ChatCommentReadAll"],"mappings":"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"}