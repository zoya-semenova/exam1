{"version":3,"file":"html-formatter.bundle.js","sources":["../src/node-formatters/root/root-formatter.js","../src/node-formatters/text/text-formatter.js","../src/node-formatters/text/tab-formatter.js","../src/node-formatters/text/linebreak-formatter.js","../src/node-formatters/paragraph/paragraph-formatter.js","../src/node-formatters/format/bold-formatter.js","../src/node-formatters/format/underline-formatter.js","../src/node-formatters/format/italic-formatter.js","../src/node-formatters/format/strikethrough-formatter.js","../src/node-formatters/span/span-sormatter.js","../src/node-formatters/table/table-formatter.js","../src/node-formatters/table/table-head-cell-formatter.js","../src/node-formatters/table/table-data-cell-formatter.js","../src/node-formatters/table/table-row-formatter.js","../src/node-formatters/list/list-formatter.js","../src/node-formatters/list/list-item-formatter.js","../src/node-formatters/quote/quote-formatter.js","../src/node-formatters/code/code-formatter.js","../src/node-formatters/link/link-formatter.js","../src/node-formatters/spoiler/spoiler-formatter.js","../src/node-formatters/disk/disk-formatter.js","../src/node-formatters/mention/user-formatter.js","../src/node-formatters/mention/department-formatter.js","../src/node-formatters/mention/project-formatter.js","../src/html-formatter.js"],"sourcesContent":["import { NodeFormatter, type NodeFormatterOptions } from 'ui.bbcode.formatter';\n\nexport class RootNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: '#root',\n\t\t\tconvert(): DocumentFragment {\n\t\t\t\treturn document.createDocumentFragment();\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class TextNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {}) {\n\t\tsuper({\n\t\t\tname: '#text',\n\t\t\tconvert({ node }: ConvertCallbackOptions): Text {\n\t\t\t\treturn document.createTextNode(node.toString());\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class TabNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {}) {\n\t\tsuper({\n\t\t\tname: '#tab',\n\t\t\tconvert({ node }: ConvertCallbackOptions): Text {\n\t\t\t\treturn document.createTextNode(node.toString());\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\nimport { BBCodeElementNode } from 'ui.bbcode.model';\n\nexport class LinebreakNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {}) {\n\t\tsuper({\n\t\t\tname: '#linebreak',\n\t\t\tconvert({ node }: ConvertCallbackOptions): Text | HTMLBRElement {\n\t\t\t\tconst nextSibling: ?BBCodeElementNode = node.getNextSibling();\n\t\t\t\tif (nextSibling && nextSibling.getName() === '#linebreak')\n\t\t\t\t{\n\t\t\t\t\treturn document.createElement('br');\n\t\t\t\t}\n\n\t\t\t\treturn document.createTextNode(node.getContent());\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class ParagraphNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'p',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLParagraphElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: node.getName(),\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class BoldNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'b',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'b',\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class UnderlineNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'u',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'u',\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class ItalicNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'i',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'i',\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class StrikethroughNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 's',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 's',\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class SpanNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'span',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions } from 'ui.bbcode.formatter';\n\nimport './style.css';\n\nexport class TableNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'table',\n\t\t\tconvert(): HTMLTableElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'table',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassname: 'ui-formatter-table',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions } from 'ui.bbcode.formatter';\n\nexport class TableHeadCellNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'th',\n\t\t\tconvert(): HTMLTableElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'th',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassname: 'ui-formatter-table-head-cell',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions } from 'ui.bbcode.formatter';\n\nexport class TableDataCellNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'td',\n\t\t\tconvert(): HTMLTableElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'td',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassname: 'ui-formatter-table-data-cell',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions } from 'ui.bbcode.formatter';\n\nexport class TableRowNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'tr',\n\t\t\tconvert(): HTMLTableElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'tr',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassname: 'ui-formatter-table-row',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class ListNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions)\n\t{\n\t\tsuper({\n\t\t\tname: 'list',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLUListElement | HTMLOListElement {\n\t\t\t\tconst tagName = node.getValue() === '1' ? 'ol' : 'ul';\n\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: tagName,\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions, type ConvertCallbackOptions } from 'ui.bbcode.formatter';\n\nexport class ListItemNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions)\n\t{\n\t\tsuper({\n\t\t\tname: '*',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLLIElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'li',\n\t\t\t\t\tattributes: node.getAttributes(),\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport { NodeFormatter, type NodeFormatterOptions } from 'ui.bbcode.formatter';\n\nimport './style.css';\n\nexport class QuoteNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'quote',\n\t\t\tconvert(): HTMLQuoteElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'blockquote',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'ui-formatter-blockquote',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom } from 'main.core';\nimport {\n\tNodeFormatter,\n\ttype NodeFormatterOptions,\n\ttype BeforeConvertCallbackOptions,\n\ttype ForChildCallbackOptions,\n} from 'ui.bbcode.formatter';\nimport {\n\tBBCodeElementNode,\n\tBBCodeNewLineNode,\n\tBBCodeScheme,\n\tBBCodeTextNode,\n} from 'ui.bbcode.model';\n\nimport './style.css';\n\nexport class CodeNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'code',\n\t\t\tbefore({ node }: BeforeConvertCallbackOptions): BBCodeElementNode {\n\t\t\t\tconst scheme: BBCodeScheme = node.getScheme();\n\t\t\t\tconst preparedNode: BBCodeElementNode = CodeNodeFormatter.trimLinebreaks(node);\n\t\t\t\tconst children: Array<BBCodeTextNode> = preparedNode.getChildren();\n\t\t\t\tconst newChildren: Array<BBCodeTextNode> = [];\n\n\t\t\t\tlet newNode: BBCodeTextNode = scheme.createText();\n\t\t\t\tchildren.forEach((child: BBCodeTextNode | BBCodeNewLineNode) => {\n\t\t\t\t\tif (scheme.isNewLine(child))\n\t\t\t\t\t{\n\t\t\t\t\t\tnewChildren.push(newNode, child);\n\t\t\t\t\t\tnewNode = scheme.createText();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnewNode.setContent(newNode.getContent() + child.getContent());\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpreparedNode.setChildren([...newChildren, newNode]);\n\n\t\t\t\treturn preparedNode;\n\t\t\t},\n\t\t\tconvert(): HTMLPreElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'pre',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'ui-formatter-code-block',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\tforChild({ node, element }: ForChildCallbackOptions): Text {\n\t\t\t\tif (node.getPlainTextLength() === 0)\n\t\t\t\t{\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst scheme: BBCodeScheme = node.getScheme();\n\t\t\t\tif (scheme.isText(node))\n\t\t\t\t{\n\t\t\t\t\tconst preparedLine: string = node.toString().replaceAll(/\\t/g, ' '.repeat(4));\n\n\t\t\t\t\treturn Dom.create({\n\t\t\t\t\t\ttag: 'span',\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclassName: 'ui-formatter-code-line',\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttext: preparedLine,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn element;\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n\n\tstatic trimLinebreaks(node: BBCodeElementNode): BBCodeElementNode\n\t{\n\t\tconst scheme: BBCodeScheme = node.getScheme();\n\n\t\tlet firstChild = node.getFirstChild();\n\t\twhile (scheme.isNewLine(firstChild))\n\t\t{\n\t\t\tfirstChild.remove();\n\t\t\tfirstChild = node.getFirstChild();\n\t\t}\n\n\t\tlet lastChild = node.getLastChild();\n\t\twhile (scheme.isNewLine(lastChild))\n\t\t{\n\t\t\tlastChild.remove();\n\t\t\tlastChild = node.getFirstChild();\n\t\t}\n\n\t\treturn node;\n\t}\n}\n","import { Dom, Type } from 'main.core';\nimport {\n\tNodeFormatter,\n\ttype NodeFormatterOptions,\n\ttype AfterCallbackOptions,\n\ttype ConvertCallbackOptions,\n\ttype ValidateCallbackOptions,\n} from 'ui.bbcode.formatter';\nimport {\n\tBBCodeElementNode,\n\tBBCodeRootNode,\n\tBBCodeScheme,\n} from 'ui.bbcode.model';\n\nexport class LinkNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'url',\n\t\t\tvalidate({ node }: ValidateCallbackOptions): boolean {\n\t\t\t\tconst nodeValue: string = LinkNodeFormatter.fetchNodeValue(node);\n\n\t\t\t\treturn !LinkNodeFormatter.startsWithJavascriptScheme(nodeValue);\n\t\t\t},\n\t\t\tbefore({ node, formatter }: AfterCallbackOptions): BBCodeElementNode {\n\t\t\t\tif (\n\t\t\t\t\tformatter.isShortLinkEnabled()\n\t\t\t\t\t&& formatter.isHrefStartsWithAllowedScheme(node.toPlainText())\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tconst scheme: BBCodeScheme = node.getScheme();\n\t\t\t\t\tconst nodeContentLength: number = node.getPlainTextLength();\n\t\t\t\t\tconst { shortLink } = formatter.getLinkSettings();\n\t\t\t\t\tif (nodeContentLength > shortLink.maxLength)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst sourceHref: string = LinkNodeFormatter.fetchNodeValue(node);\n\n\t\t\t\t\t\tconst nodeRoot: BBCodeRootNode = scheme.createRoot({\n\t\t\t\t\t\t\tchildren: node.getChildren(),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst [left, right] = nodeRoot.split({\n\t\t\t\t\t\t\toffset: shortLink.maxLength - shortLink.lastFragmentLength,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst sourceRightFragmentLength: number = right.getPlainTextLength();\n\t\t\t\t\t\tconst newLink: BBCodeElementNode = node.clone();\n\t\t\t\t\t\tnewLink.setValue(sourceHref);\n\n\t\t\t\t\t\tif (sourceRightFragmentLength > shortLink.lastFragmentLength)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnewLink.appendChild(\n\t\t\t\t\t\t\t\t...left.getChildren(),\n\t\t\t\t\t\t\t\tscheme.createText('...'),\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst [, lastFragment] = right.split({\n\t\t\t\t\t\t\t\toffset: sourceRightFragmentLength - shortLink.lastFragmentLength,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tnewLink.appendChild(...lastFragment.getChildren());\n\n\t\t\t\t\t\t\treturn newLink;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnewLink.setChildren([\n\t\t\t\t\t\t\t...left.getChildren(),\n\t\t\t\t\t\t\tscheme.createText('...'),\n\t\t\t\t\t\t\t...right.getChildren(),\n\t\t\t\t\t\t]);\n\n\t\t\t\t\t\treturn newLink;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn node;\n\t\t\t},\n\t\t\tconvert({ node, formatter }: ConvertCallbackOptions): HTMLLinkElement | HTMLUnknownElement {\n\t\t\t\tconst sourceHref: string = (() => {\n\t\t\t\t\tconst value: ?string = node.getValue();\n\t\t\t\t\tif (Type.isStringFilled(value))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node.getContent();\n\t\t\t\t})();\n\t\t\t\tconst nodeAttributes: {[key: string]: string} = node.getAttributes();\n\t\t\t\tconst safeHref: string = formatter.makeSafeHref(sourceHref);\n\t\t\t\tconst { defaultTarget, attributes } = formatter.getLinkSettings();\n\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'a',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\t...nodeAttributes,\n\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\ttarget: defaultTarget,\n\t\t\t\t\t\thref: safeHref,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n\n\tstatic fetchNodeValue(node: BBCodeElementNode): string\n\t{\n\t\tconst value: ?string = node.getValue();\n\t\tif (Type.isStringFilled(value))\n\t\t{\n\t\t\treturn value;\n\t\t}\n\n\t\treturn node.toPlainText();\n\t}\n\n\tstatic startsWithJavascriptScheme(sourceHref: string): boolean\n\t{\n\t\tif (Type.isStringFilled(sourceHref))\n\t\t{\n\t\t\t// eslint-disable-next-line no-control-regex\n\t\t\tconst regexp = /^[\\u0000-\\u001F ]*j[\\t\\n\\r]*a[\\t\\n\\r]*v[\\t\\n\\r]*a[\\t\\n\\r]*s[\\t\\n\\r]*c[\\t\\n\\r]*r[\\t\\n\\r]*i[\\t\\n\\r]*p[\\t\\n\\r]*t[\\t\\n\\r]*:/i;\n\n\t\t\treturn regexp.test(sourceHref);\n\t\t}\n\n\t\treturn false;\n\t}\n}\n","import { Dom } from 'main.core';\nimport {\n\tNodeFormatter,\n\ttype AfterCallbackOptions,\n\ttype NodeFormatterOptions,\n\ttype ConvertCallbackOptions,\n} from 'ui.bbcode.formatter';\n\nimport './style.css';\n\nexport class SpoilerNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'spoiler',\n\t\t\tconvert({ node }: ConvertCallbackOptions): HTMLDetailsElement {\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'details',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'ui-formatter__spoiler ui-icon-set__scope',\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tDom.create({\n\t\t\t\t\t\t\ttag: 'summary',\n\t\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\t\tclassName: 'ui-formatter__spoiler-title',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttext: node.getValue(),\n\t\t\t\t\t\t}),\n\t\t\t\t\t],\n\t\t\t\t});\n\t\t\t},\n\t\t\tafter({ element }: AfterCallbackOptions): HTMLElement {\n\t\t\t\tconst [summary, ...content] = element.children;\n\n\t\t\t\telement.appendChild(summary);\n\t\t\t\telement.appendChild(\n\t\t\t\t\tDom.create({\n\t\t\t\t\t\ttag: 'div',\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclassName: 'ui-formatter__spoiler-content',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t...content,\n\t\t\t\t\t\t],\n\t\t\t\t\t}),\n\t\t\t\t);\n\n\t\t\t\treturn element;\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom, Type } from 'main.core';\nimport {\n\tNodeFormatter,\n\ttype ConvertCallbackOptions,\n\ttype NodeFormatterOptions,\n} from 'ui.bbcode.formatter';\n\nimport './style.css';\n\nexport class DiskNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'disk',\n\t\t\tconvert({ node, formatter, data }: ConvertCallbackOptions): HTMLElement {\n\t\t\t\tconst fileId: string = node.getAttribute('id');\n\t\t\t\tconst fileEntry: ?{ [key: string]: any } = data.files.find((fileOptions) => {\n\t\t\t\t\treturn String(fileOptions.id) === String(fileId);\n\t\t\t\t});\n\n\t\t\t\tif (Type.isPlainObject(fileEntry))\n\t\t\t\t{\n\t\t\t\t\tconst fileOptions: ?{ [key: string]: any } = fileEntry?.data?.file;\n\t\t\t\t\tif (Type.isPlainObject(fileOptions))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (fileOptions.type.startsWith('image'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn Dom.create({\n\t\t\t\t\t\t\t\ttag: 'div',\n\t\t\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\t\t\tclassName: 'ui-formatter-image',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\tDom.create({\n\t\t\t\t\t\t\t\t\t\ttag: 'img',\n\t\t\t\t\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\t\t\t\t\tsrc: formatter.makeSafeHref(fileOptions.downloadUrl),\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (fileOptions.type.startsWith('video'))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn Dom.create({\n\t\t\t\t\t\t\t\ttag: 'div',\n\t\t\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\t\t\tclassName: 'ui-formatter-video',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\t\tDom.create({\n\t\t\t\t\t\t\t\t\t\ttag: 'video',\n\t\t\t\t\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\t\t\t\t\tsrc: formatter.makeSafeHref(fileOptions.downloadUrl),\n\t\t\t\t\t\t\t\t\t\t\tcontrols: true,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Dom.create({\n\t\t\t\t\t\t\ttag: 'a',\n\t\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\t\thref: formatter.makeSafeHref(fileOptions.downloadUrl),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttext: fileOptions.name,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom, Type } from 'main.core';\nimport {\n\tNodeFormatter,\n\ttype ConvertCallbackOptions,\n\ttype NodeFormatterOptions,\n} from 'ui.bbcode.formatter';\nimport type { HtmlFormatterOptions } from '../../html-formatter';\n\nexport class UserNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions)\n\t{\n\t\tsuper({\n\t\t\tname: 'user',\n\t\t\tconvert({ node, formatter }: ConvertCallbackOptions): HTMLAnchorElement {\n\t\t\t\tconst mentionSettings: HtmlFormatterOptions['mention'] = formatter.getMentionSettings();\n\t\t\t\tif (Type.isStringFilled(mentionSettings?.urlTemplate?.user))\n\t\t\t\t{\n\t\t\t\t\tconst urlTemplate: string = mentionSettings.urlTemplate.user;\n\t\t\t\t\tconst userUrl: string = urlTemplate.replaceAll('#ID#', node.getValue());\n\n\t\t\t\t\treturn Dom.create({\n\t\t\t\t\t\ttag: 'a',\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclassName: 'ui-formatter-link ui-formatter-mention',\n\t\t\t\t\t\t\thref: formatter.makeSafeHref(userUrl),\n\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'ui-formatter-mention-stub',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom, Type } from 'main.core';\nimport {\n\tNodeFormatter,\n\ttype ConvertCallbackOptions,\n\ttype NodeFormatterOptions,\n} from 'ui.bbcode.formatter';\nimport type { HtmlFormatterOptions } from '../../html-formatter';\n\nexport class DepartmentNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'department',\n\t\t\tconvert({ node, formatter }: ConvertCallbackOptions): HTMLAnchorElement | HTMLSpanElement {\n\t\t\t\tconst mentionSettings: HtmlFormatterOptions['mention'] = formatter.getMentionSettings();\n\t\t\t\tif (Type.isStringFilled(mentionSettings?.urlTemplate?.department))\n\t\t\t\t{\n\t\t\t\t\tconst urlTemplate: string = mentionSettings.urlTemplate.department;\n\t\t\t\t\tconst departmentUrl: string = urlTemplate.replaceAll('#ID#', node.getValue());\n\n\t\t\t\t\treturn Dom.create({\n\t\t\t\t\t\ttag: 'a',\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\tclassName: 'ui-formatter-link ui-formatter-mention',\n\t\t\t\t\t\t\thref: formatter.makeSafeHref(departmentUrl),\n\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'ui-formatter-mention-stub',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Dom, Type } from 'main.core';\nimport {\n\tNodeFormatter,\n\ttype ConvertCallbackOptions,\n\ttype NodeFormatterOptions,\n} from 'ui.bbcode.formatter';\nimport type { HtmlFormatterOptions } from '../../html-formatter';\n\nexport class ProjectNodeFormatter extends NodeFormatter\n{\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tname: 'project',\n\t\t\tconvert({ node, formatter }: ConvertCallbackOptions): HTMLAnchorElement | HTMLSpanElement {\n\t\t\t\tconst mentionSettings: HtmlFormatterOptions['mention'] = formatter.getMentionSettings();\n\t\t\t\tif (Type.isStringFilled(mentionSettings?.urlTemplate?.project))\n\t\t\t\t{\n\t\t\t\t\tconst urlTemplate: string = mentionSettings.urlTemplate.project;\n\t\t\t\t\tconst projectUrl: string = urlTemplate.replaceAll('#group_id#', node.getValue());\n\n\t\t\t\t\treturn Dom.create({\n\t\t\t\t\t\ttag: 'a',\n\t\t\t\t\t\tattrs: {\n\t\t\t\t\t\t\thref: formatter.makeSafeHref(projectUrl),\n\t\t\t\t\t\t\tclassName: 'ui-formatter-link ui-formatter-mention',\n\t\t\t\t\t\t\ttarget: '_blank',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn Dom.create({\n\t\t\t\t\ttag: 'span',\n\t\t\t\t\tattrs: {\n\t\t\t\t\t\tclassName: 'ui-formatter-mention-stub',\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\t...options,\n\t\t});\n\t}\n}\n","import { Type, Extension } from 'main.core';\nimport {\n\tFormatter,\n\tNodeFormatter,\n\ttype FormatterOptions,\n\ttype UnknownNodeCallbackOptions,\n\ttype BeforeConvertCallbackOptions,\n} from 'ui.bbcode.formatter';\nimport { BBCodeScheme, BBCodeFragmentNode } from 'ui.bbcode.model';\nimport * as NodeFormatters from './node-formatters';\n\nimport 'ui.icon-set.actions';\n\nexport type HtmlFormatterOptions = FormatterOptions & {\n\tlinkSettings?: {\n\t\tallowedSchemes?: string,\n\t\tdefaultScheme?: 'http',\n\t\tdefaultTarget?: '_self' | '_blank' | '_parent' | '_top',\n\t\tshortLink: {\n\t\t\tenabled?: boolean,\n\t\t\tmaxLength?: number,\n\t\t\tlastFragmentLength?: number,\n\t\t},\n\t\tattributes?: {\n\t\t\t[key: string]: string,\n\t\t},\n\t},\n\tmention: {\n\t\turlTemplate: {\n\t\t\tuser: string,\n\t\t\tproject: string,\n\t\t\tdepartment: string,\n\t\t},\n\t},\n};\n\nconst globalSettings = Extension.getSettings('ui.bbcode.formatter.html-formatter');\n\n/**\n * @memberOf BX.UI.BBCode.Formatter\n */\nexport class HtmlFormatter extends Formatter\n{\n\t#linkSettings: HtmlFormatterOptions['linkSettings'];\n\t#mentionSettings: HtmlFormatterOptions['mention'];\n\n\tconstructor(options: HtmlFormatterOptions = {})\n\t{\n\t\tsuper({\n\t\t\tformatters: Object.values(NodeFormatters).map((FormatterClass: NodeFormatter) => {\n\t\t\t\treturn new FormatterClass();\n\t\t\t}),\n\t\t});\n\n\t\tthis.setNodeFormatters(options.formatters);\n\n\t\tthis.setLinkSettings({\n\t\t\t...globalSettings.linkSettings,\n\t\t\t...options.linkSettings,\n\t\t});\n\n\t\tthis.setMentionSettings({\n\t\t\t...globalSettings.mention,\n\t\t\t...options.mention,\n\t\t});\n\t}\n\n\tstatic decodeAmpersand(source: ?string): string\n\t{\n\t\tif (Type.isStringFilled(source))\n\t\t{\n\t\t\treturn source.replaceAll(/&amp;/gi, '&');\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tstatic decodeSquareBrackets(source: ?string): string\n\t{\n\t\tif (Type.isStringFilled(source))\n\t\t{\n\t\t\treturn source\n\t\t\t\t.replaceAll(/&#91;/g, '[')\n\t\t\t\t.replaceAll(/&#93;/g, ']');\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tstatic stripFormFeedCharacter(source: ?string): string\n\t{\n\t\tif (Type.isStringFilled(source))\n\t\t{\n\t\t\treturn source.replaceAll(/\\f/gi, '');\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tstatic encodeSingleQuotes(source: ?string): string\n\t{\n\t\tif (Type.isStringFilled(source))\n\t\t{\n\t\t\treturn source.replaceAll('\\'', '%27');\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tstatic isAbsolutePath(path: ?string): boolean\n\t{\n\t\treturn String(path).startsWith('/');\n\t}\n\n\tisHrefStartsWithAllowedScheme(sourceHref: ?string): boolean\n\t{\n\t\treturn (\n\t\t\tType.isStringFilled(sourceHref)\n\t\t\t&& (new RegExp(`/^${this.getLinkSettings().allowedSchemes}/`)).test(sourceHref)\n\t\t);\n\t}\n\n\tassignDefaultUrlScheme(sourceHref: ?string): string\n\t{\n\t\tif (Type.isStringFilled(sourceHref))\n\t\t{\n\t\t\tconst defaultScheme: string = this.getLinkSettings().defaultScheme;\n\n\t\t\treturn `${defaultScheme}://${sourceHref}`;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tisShortLinkEnabled(): boolean\n\t{\n\t\tconst { shortLink } = this.getLinkSettings();\n\n\t\treturn (\n\t\t\tType.isPlainObject(shortLink)\n\t\t\t&& shortLink.enabled === true\n\t\t\t&& Type.isInteger(shortLink.maxLength)\n\t\t);\n\t}\n\n\tmakeSafeHref(sourceHref: ?string): string\n\t{\n\t\tif (Type.isStringFilled(sourceHref))\n\t\t{\n\t\t\tlet preparedHref = HtmlFormatter.decodeAmpersand(sourceHref);\n\t\t\tpreparedHref = HtmlFormatter.decodeSquareBrackets(preparedHref);\n\t\t\tpreparedHref = HtmlFormatter.stripFormFeedCharacter(preparedHref);\n\t\t\tpreparedHref = HtmlFormatter.encodeSingleQuotes(preparedHref);\n\n\t\t\tif (\n\t\t\t\t!HtmlFormatter.isAbsolutePath(preparedHref)\n\t\t\t\t&& !this.isHrefStartsWithAllowedScheme(preparedHref)\n\t\t\t)\n\t\t\t{\n\t\t\t\tpreparedHref = this.assignDefaultUrlScheme(preparedHref);\n\t\t\t}\n\n\t\t\treturn preparedHref;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tsetLinkSettings(settings: HtmlFormatterOptions['linkSettings'])\n\t{\n\t\tthis.#linkSettings = { ...settings };\n\t}\n\n\tgetLinkSettings(): HtmlFormatterOptions['linkSettings']\n\t{\n\t\treturn this.#linkSettings;\n\t}\n\n\tsetMentionSettings(settings: HtmlFormatterOptions['mention'])\n\t{\n\t\tthis.#mentionSettings = { ...settings };\n\t}\n\n\tgetMentionSettings(): HtmlFormatterOptions['mention']\n\t{\n\t\treturn this.#mentionSettings;\n\t}\n\n\tgetDefaultUnknownNodeCallback(options): (UnknownNodeCallbackOptions) => NodeFormatter | null\n\t{\n\t\treturn () => {\n\t\t\treturn new NodeFormatter({\n\t\t\t\tname: 'unknown',\n\t\t\t\tbefore({ node }: BeforeConvertCallbackOptions): BBCodeFragmentNode {\n\t\t\t\t\tconst scheme: BBCodeScheme = node.getScheme();\n\n\t\t\t\t\tif (node.isVoid())\n\t\t\t\t\t{\n\t\t\t\t\t\treturn scheme.createFragment({\n\t\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\t\tscheme.createText(node.getOpeningTag()),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn scheme.createFragment({\n\t\t\t\t\t\tchildren: [\n\t\t\t\t\t\t\tscheme.createText(node.getOpeningTag()),\n\t\t\t\t\t\t\t...node.getChildren(),\n\t\t\t\t\t\t\tscheme.createText(node.getClosingTag()),\n\t\t\t\t\t\t],\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tconvert(): DocumentFragment {\n\t\t\t\t\treturn document.createDocumentFragment();\n\t\t\t\t},\n\t\t\t});\n\t\t};\n\t}\n}\n"],"names":["RootNodeFormatter","NodeFormatter","constructor","options","name","convert","document","createDocumentFragment","TextNodeFormatter","node","createTextNode","toString","TabNodeFormatter","LinebreakNodeFormatter","nextSibling","getNextSibling","getName","createElement","getContent","ParagraphNodeFormatter","Dom","create","tag","attributes","getAttributes","BoldNodeFormatter","UnderlineNodeFormatter","ItalicNodeFormatter","StrikethroughNodeFormatter","SpanNodeFormatter","TableNodeFormatter","attrs","classname","TableHeadCellNodeFormatter","TableDataCellNodeFormatter","TableRowNodeFormatter","ListNodeFormatter","tagName","getValue","ListItemNodeFormatter","QuoteNodeFormatter","className","CodeNodeFormatter","before","scheme","getScheme","preparedNode","trimLinebreaks","children","getChildren","newChildren","newNode","createText","forEach","child","isNewLine","push","setContent","setChildren","forChild","element","getPlainTextLength","isText","preparedLine","replaceAll","repeat","text","firstChild","getFirstChild","remove","lastChild","getLastChild","LinkNodeFormatter","validate","nodeValue","fetchNodeValue","startsWithJavascriptScheme","formatter","isShortLinkEnabled","isHrefStartsWithAllowedScheme","toPlainText","nodeContentLength","shortLink","getLinkSettings","maxLength","sourceHref","nodeRoot","createRoot","left","right","split","offset","lastFragmentLength","sourceRightFragmentLength","newLink","clone","setValue","appendChild","lastFragment","value","Type","isStringFilled","nodeAttributes","safeHref","makeSafeHref","defaultTarget","target","href","regexp","test","SpoilerNodeFormatter","after","summary","content","DiskNodeFormatter","data","fileId","getAttribute","fileEntry","files","find","fileOptions","String","id","isPlainObject","file","type","startsWith","src","downloadUrl","controls","UserNodeFormatter","mentionSettings","getMentionSettings","urlTemplate","user","userUrl","DepartmentNodeFormatter","department","departmentUrl","ProjectNodeFormatter","project","projectUrl","globalSettings","Extension","getSettings","HtmlFormatter","Formatter","formatters","Object","values","NodeFormatters","map","FormatterClass","setNodeFormatters","setLinkSettings","linkSettings","setMentionSettings","mention","decodeAmpersand","source","decodeSquareBrackets","stripFormFeedCharacter","encodeSingleQuotes","isAbsolutePath","path","RegExp","allowedSchemes","assignDefaultUrlScheme","defaultScheme","enabled","isInteger","preparedHref","settings","getDefaultUnknownNodeCallback","isVoid","createFragment","getOpeningTag","getClosingTag"],"mappings":";;;;;;;CAEO,MAAMA,iBAAiB,SAASC,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,OAAO;OACbC,OAAO,GAAqB;SAC3B,OAAOC,QAAQ,CAACC,sBAAsB,EAAE;QACxC;OACD,GAAGJ;MACH,CAAC;;CAEJ;;CCZO,MAAMK,iBAAiB,SAASP,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAAE;KAC/C,KAAK,CAAC;OACLC,IAAI,EAAE,OAAO;OACbC,OAAO,CAAC;SAAEI;QAA8B,EAAQ;SAC/C,OAAOH,QAAQ,CAACI,cAAc,CAACD,IAAI,CAACE,QAAQ,EAAE,CAAC;QAC/C;OACD,GAAGR;MACH,CAAC;;CAEJ;;CCXO,MAAMS,gBAAgB,SAASX,iCAAa,CACnD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAAE;KAC/C,KAAK,CAAC;OACLC,IAAI,EAAE,MAAM;OACZC,OAAO,CAAC;SAAEI;QAA8B,EAAQ;SAC/C,OAAOH,QAAQ,CAACI,cAAc,CAACD,IAAI,CAACE,QAAQ,EAAE,CAAC;QAC/C;OACD,GAAGR;MACH,CAAC;;CAEJ;;CCVO,MAAMU,sBAAsB,SAASZ,iCAAa,CACzD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAAE;KAC/C,KAAK,CAAC;OACLC,IAAI,EAAE,YAAY;OAClBC,OAAO,CAAC;SAAEI;QAA8B,EAAwB;SAC/D,MAAMK,WAA+B,GAAGL,IAAI,CAACM,cAAc,EAAE;SAC7D,IAAID,WAAW,IAAIA,WAAW,CAACE,OAAO,EAAE,KAAK,YAAY,EACzD;WACC,OAAOV,QAAQ,CAACW,aAAa,CAAC,IAAI,CAAC;;SAGpC,OAAOX,QAAQ,CAACI,cAAc,CAACD,IAAI,CAACS,UAAU,EAAE,CAAC;QACjD;OACD,GAAGf;MACH,CAAC;;CAEJ;;CCjBO,MAAMgB,sBAAsB,SAASlB,iCAAa,CACzD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,GAAG;OACTC,OAAO,CAAC;SAAEI;QAA8B,EAAwB;SAC/D,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAEb,IAAI,CAACO,OAAO,EAAE;WACnBO,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCfO,MAAMsB,iBAAiB,SAASxB,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,GAAG;OACTC,OAAO,CAAC;SAAEI;QAA8B,EAAe;SACtD,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,GAAG;WACRC,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCfO,MAAMuB,sBAAsB,SAASzB,iCAAa,CACzD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,GAAG;OACTC,OAAO,CAAC;SAAEI;QAA8B,EAAe;SACtD,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,GAAG;WACRC,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCfO,MAAMwB,mBAAmB,SAAS1B,iCAAa,CACtD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,GAAG;OACTC,OAAO,CAAC;SAAEI;QAA8B,EAAe;SACtD,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,GAAG;WACRC,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCfO,MAAMyB,0BAA0B,SAAS3B,iCAAa,CAC7D;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,GAAG;OACTC,OAAO,CAAC;SAAEI;QAA8B,EAAe;SACtD,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,GAAG;WACRC,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCfO,MAAM0B,iBAAiB,SAAS5B,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,MAAM;OACZC,OAAO,CAAC;SAAEI;QAA8B,EAAe;SACtD,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,MAAM;WACXC,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCbO,MAAM2B,kBAAkB,SAAS7B,iCAAa,CACrD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,OAAO;OACbC,OAAO,GAAqB;SAC3B,OAAOe,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,OAAO;WACZS,KAAK,EAAE;aACNC,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAG7B;MACH,CAAC;;CAEJ;;CCnBO,MAAM8B,0BAA0B,SAAShC,iCAAa,CAC7D;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,IAAI;OACVC,OAAO,GAAqB;SAC3B,OAAOe,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,IAAI;WACTS,KAAK,EAAE;aACNC,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAG7B;MACH,CAAC;;CAEJ;;CCjBO,MAAM+B,0BAA0B,SAASjC,iCAAa,CAC7D;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,IAAI;OACVC,OAAO,GAAqB;SAC3B,OAAOe,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,IAAI;WACTS,KAAK,EAAE;aACNC,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAG7B;MACH,CAAC;;CAEJ;;CCjBO,MAAMgC,qBAAqB,SAASlC,iCAAa,CACxD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,IAAI;OACVC,OAAO,GAAqB;SAC3B,OAAOe,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,IAAI;WACTS,KAAK,EAAE;aACNC,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAG7B;MACH,CAAC;;CAEJ;;CCjBO,MAAMiC,iBAAiB,SAASnC,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,EACzC;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,MAAM;OACZC,OAAO,CAAC;SAAEI;QAA8B,EAAuC;SAC9E,MAAM4B,OAAO,GAAG5B,IAAI,CAAC6B,QAAQ,EAAE,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI;SAErD,OAAOlB,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAEe,OAAO;WACZd,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCjBO,MAAMoC,qBAAqB,SAAStC,iCAAa,CACxD;GACCC,WAAW,CAACC,OAA6B,EACzC;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,GAAG;OACTC,OAAO,CAAC;SAAEI;QAA8B,EAAiB;SACxD,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,IAAI;WACTC,UAAU,EAAEd,IAAI,CAACe,aAAa;UAC9B,CAAC;QACF;OACD,GAAGrB;MACH,CAAC;;CAEJ;;CCbO,MAAMqC,kBAAkB,SAASvC,iCAAa,CACrD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,OAAO;OACbC,OAAO,GAAqB;SAC3B,OAAOe,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,YAAY;WACjBS,KAAK,EAAE;aACNU,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAGtC;MACH,CAAC;;CAEJ;;CCNO,MAAMuC,iBAAiB,SAASzC,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,MAAM;OACZuC,MAAM,CAAC;SAAElC;QAAoC,EAAqB;SACjE,MAAMmC,MAAoB,GAAGnC,IAAI,CAACoC,SAAS,EAAE;SAC7C,MAAMC,YAA+B,GAAGJ,iBAAiB,CAACK,cAAc,CAACtC,IAAI,CAAC;SAC9E,MAAMuC,QAA+B,GAAGF,YAAY,CAACG,WAAW,EAAE;SAClE,MAAMC,WAAkC,GAAG,EAAE;SAE7C,IAAIC,OAAuB,GAAGP,MAAM,CAACQ,UAAU,EAAE;SACjDJ,QAAQ,CAACK,OAAO,CAAEC,KAAyC,IAAK;WAC/D,IAAIV,MAAM,CAACW,SAAS,CAACD,KAAK,CAAC,EAC3B;aACCJ,WAAW,CAACM,IAAI,CAACL,OAAO,EAAEG,KAAK,CAAC;aAChCH,OAAO,GAAGP,MAAM,CAACQ,UAAU,EAAE;YAC7B,MAED;aACCD,OAAO,CAACM,UAAU,CAACN,OAAO,CAACjC,UAAU,EAAE,GAAGoC,KAAK,CAACpC,UAAU,EAAE,CAAC;;UAE9D,CAAC;SAEF4B,YAAY,CAACY,WAAW,CAAC,CAAC,GAAGR,WAAW,EAAEC,OAAO,CAAC,CAAC;SAEnD,OAAOL,YAAY;QACnB;OACDzC,OAAO,GAAmB;SACzB,OAAOe,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,KAAK;WACVS,KAAK,EAAE;aACNU,SAAS,EAAE;;UAEZ,CAAC;QACF;OACDkB,QAAQ,CAAC;SAAElD,IAAI;SAAEmD;QAAkC,EAAQ;SAC1D,IAAInD,IAAI,CAACoD,kBAAkB,EAAE,KAAK,CAAC,EACnC;WACC,OAAO,IAAI;;SAGZ,MAAMjB,MAAoB,GAAGnC,IAAI,CAACoC,SAAS,EAAE;SAC7C,IAAID,MAAM,CAACkB,MAAM,CAACrD,IAAI,CAAC,EACvB;WACC,MAAMsD,YAAoB,GAAGtD,IAAI,CAACE,QAAQ,EAAE,CAACqD,UAAU,CAAC,KAAK,EAAE,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;WAE7E,OAAO7C,aAAG,CAACC,MAAM,CAAC;aACjBC,GAAG,EAAE,MAAM;aACXS,KAAK,EAAE;eACNU,SAAS,EAAE;cACX;aACDyB,IAAI,EAAEH;YACN,CAAC;;SAGH,OAAOH,OAAO;QACd;OACD,GAAGzD;MACH,CAAC;;GAGH,OAAO4C,cAAc,CAACtC,IAAuB,EAC7C;KACC,MAAMmC,MAAoB,GAAGnC,IAAI,CAACoC,SAAS,EAAE;KAE7C,IAAIsB,UAAU,GAAG1D,IAAI,CAAC2D,aAAa,EAAE;KACrC,OAAOxB,MAAM,CAACW,SAAS,CAACY,UAAU,CAAC,EACnC;OACCA,UAAU,CAACE,MAAM,EAAE;OACnBF,UAAU,GAAG1D,IAAI,CAAC2D,aAAa,EAAE;;KAGlC,IAAIE,SAAS,GAAG7D,IAAI,CAAC8D,YAAY,EAAE;KACnC,OAAO3B,MAAM,CAACW,SAAS,CAACe,SAAS,CAAC,EAClC;OACCA,SAAS,CAACD,MAAM,EAAE;OAClBC,SAAS,GAAG7D,IAAI,CAAC2D,aAAa,EAAE;;KAGjC,OAAO3D,IAAI;;CAEb;;CCrFO,MAAM+D,iBAAiB,SAASvE,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,KAAK;OACXqE,QAAQ,CAAC;SAAEhE;QAA+B,EAAW;SACpD,MAAMiE,SAAiB,GAAGF,iBAAiB,CAACG,cAAc,CAAClE,IAAI,CAAC;SAEhE,OAAO,CAAC+D,iBAAiB,CAACI,0BAA0B,CAACF,SAAS,CAAC;QAC/D;OACD/B,MAAM,CAAC;SAAElC,IAAI;SAAEoE;QAAiC,EAAqB;SACpE,IACCA,SAAS,CAACC,kBAAkB,EAAE,IAC3BD,SAAS,CAACE,6BAA6B,CAACtE,IAAI,CAACuE,WAAW,EAAE,CAAC,EAE/D;WACC,MAAMpC,MAAoB,GAAGnC,IAAI,CAACoC,SAAS,EAAE;WAC7C,MAAMoC,iBAAyB,GAAGxE,IAAI,CAACoD,kBAAkB,EAAE;WAC3D,MAAM;aAAEqB;YAAW,GAAGL,SAAS,CAACM,eAAe,EAAE;WACjD,IAAIF,iBAAiB,GAAGC,SAAS,CAACE,SAAS,EAC3C;aACC,MAAMC,UAAkB,GAAGb,iBAAiB,CAACG,cAAc,CAAClE,IAAI,CAAC;aAEjE,MAAM6E,QAAwB,GAAG1C,MAAM,CAAC2C,UAAU,CAAC;eAClDvC,QAAQ,EAAEvC,IAAI,CAACwC,WAAW;cAC1B,CAAC;aACF,MAAM,CAACuC,IAAI,EAAEC,KAAK,CAAC,GAAGH,QAAQ,CAACI,KAAK,CAAC;eACpCC,MAAM,EAAET,SAAS,CAACE,SAAS,GAAGF,SAAS,CAACU;cACxC,CAAC;aACF,MAAMC,yBAAiC,GAAGJ,KAAK,CAAC5B,kBAAkB,EAAE;aACpE,MAAMiC,OAA0B,GAAGrF,IAAI,CAACsF,KAAK,EAAE;aAC/CD,OAAO,CAACE,QAAQ,CAACX,UAAU,CAAC;aAE5B,IAAIQ,yBAAyB,GAAGX,SAAS,CAACU,kBAAkB,EAC5D;eACCE,OAAO,CAACG,WAAW,CAClB,GAAGT,IAAI,CAACvC,WAAW,EAAE,EACrBL,MAAM,CAACQ,UAAU,CAAC,KAAK,CAAC,CACxB;eAED,MAAM,GAAG8C,YAAY,CAAC,GAAGT,KAAK,CAACC,KAAK,CAAC;iBACpCC,MAAM,EAAEE,yBAAyB,GAAGX,SAAS,CAACU;gBAC9C,CAAC;eAEFE,OAAO,CAACG,WAAW,CAAC,GAAGC,YAAY,CAACjD,WAAW,EAAE,CAAC;eAElD,OAAO6C,OAAO;;aAGfA,OAAO,CAACpC,WAAW,CAAC,CACnB,GAAG8B,IAAI,CAACvC,WAAW,EAAE,EACrBL,MAAM,CAACQ,UAAU,CAAC,KAAK,CAAC,EACxB,GAAGqC,KAAK,CAACxC,WAAW,EAAE,CACtB,CAAC;aAEF,OAAO6C,OAAO;;;SAIhB,OAAOrF,IAAI;QACX;OACDJ,OAAO,CAAC;SAAEI,IAAI;SAAEoE;QAAmC,EAAwC;SAC1F,MAAMQ,UAAkB,GAAG,CAAC,MAAM;WACjC,MAAMc,KAAc,GAAG1F,IAAI,CAAC6B,QAAQ,EAAE;WACtC,IAAI8D,cAAI,CAACC,cAAc,CAACF,KAAK,CAAC,EAC9B;aACC,OAAOA,KAAK;;WAGb,OAAO1F,IAAI,CAACS,UAAU,EAAE;UACxB,GAAG;SACJ,MAAMoF,cAAuC,GAAG7F,IAAI,CAACe,aAAa,EAAE;SACpE,MAAM+E,QAAgB,GAAG1B,SAAS,CAAC2B,YAAY,CAACnB,UAAU,CAAC;SAC3D,MAAM;WAAEoB,aAAa;WAAElF;UAAY,GAAGsD,SAAS,CAACM,eAAe,EAAE;SAEjE,OAAO/D,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,GAAG;WACRS,KAAK,EAAE;aACN,GAAGuE,cAAc;aACjB,GAAG/E,UAAU;aACbmF,MAAM,EAAED,aAAa;aACrBE,IAAI,EAAEJ;;UAEP,CAAC;QACF;OACD,GAAGpG;MACH,CAAC;;GAGH,OAAOwE,cAAc,CAAClE,IAAuB,EAC7C;KACC,MAAM0F,KAAc,GAAG1F,IAAI,CAAC6B,QAAQ,EAAE;KACtC,IAAI8D,cAAI,CAACC,cAAc,CAACF,KAAK,CAAC,EAC9B;OACC,OAAOA,KAAK;;KAGb,OAAO1F,IAAI,CAACuE,WAAW,EAAE;;GAG1B,OAAOJ,0BAA0B,CAACS,UAAkB,EACpD;KACC,IAAIe,cAAI,CAACC,cAAc,CAAChB,UAAU,CAAC,EACnC;;OAEC,MAAMuB,MAAM,GAAG,0HAA0H;OAEzI,OAAOA,MAAM,CAACC,IAAI,CAACxB,UAAU,CAAC;;KAG/B,OAAO,KAAK;;CAEd;;CCrHO,MAAMyB,oBAAoB,SAAS7G,iCAAa,CACvD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,SAAS;OACfC,OAAO,CAAC;SAAEI;QAA8B,EAAsB;SAC7D,OAAOW,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,SAAS;WACdS,KAAK,EAAE;aACNU,SAAS,EAAE;YACX;WACDO,QAAQ,EAAE,CACT5B,aAAG,CAACC,MAAM,CAAC;aACVC,GAAG,EAAE,SAAS;aACdS,KAAK,EAAE;eACNU,SAAS,EAAE;cACX;aACDyB,IAAI,EAAEzD,IAAI,CAAC6B,QAAQ;YACnB,CAAC;UAEH,CAAC;QACF;OACDyE,KAAK,CAAC;SAAEnD;QAA+B,EAAe;SACrD,MAAM,CAACoD,OAAO,EAAE,GAAGC,OAAO,CAAC,GAAGrD,OAAO,CAACZ,QAAQ;SAE9CY,OAAO,CAACqC,WAAW,CAACe,OAAO,CAAC;SAC5BpD,OAAO,CAACqC,WAAW,CAClB7E,aAAG,CAACC,MAAM,CAAC;WACVC,GAAG,EAAE,KAAK;WACVS,KAAK,EAAE;aACNU,SAAS,EAAE;YACX;WACDO,QAAQ,EAAE,CACT,GAAGiE,OAAO;UAEX,CAAC,CACF;SAED,OAAOrD,OAAO;QACd;OACD,GAAGzD;MACH,CAAC;;CAEJ;;CC7CO,MAAM+G,iBAAiB,SAASjH,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,MAAM;OACZC,OAAO,CAAC;SAAEI,IAAI;SAAEoE,SAAS;SAAEsC;QAA8B,EAAe;SACvE,MAAMC,MAAc,GAAG3G,IAAI,CAAC4G,YAAY,CAAC,IAAI,CAAC;SAC9C,MAAMC,SAAkC,GAAGH,IAAI,CAACI,KAAK,CAACC,IAAI,CAAEC,WAAW,IAAK;WAC3E,OAAOC,MAAM,CAACD,WAAW,CAACE,EAAE,CAAC,KAAKD,MAAM,CAACN,MAAM,CAAC;UAChD,CAAC;SAEF,IAAIhB,cAAI,CAACwB,aAAa,CAACN,SAAS,CAAC,EACjC;WAAA;WACC,MAAMG,WAAoC,GAAGH,SAAS,uCAATA,SAAS,CAAEH,IAAI,qBAAf,gBAAiBU,IAAI;WAClE,IAAIzB,cAAI,CAACwB,aAAa,CAACH,WAAW,CAAC,EACnC;aACC,IAAIA,WAAW,CAACK,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,EACxC;eACC,OAAO3G,aAAG,CAACC,MAAM,CAAC;iBACjBC,GAAG,EAAE,KAAK;iBACVS,KAAK,EAAE;mBACNU,SAAS,EAAE;kBACX;iBACDO,QAAQ,EAAE,CACT5B,aAAG,CAACC,MAAM,CAAC;mBACVC,GAAG,EAAE,KAAK;mBACVS,KAAK,EAAE;qBACNiG,GAAG,EAAEnD,SAAS,CAAC2B,YAAY,CAACiB,WAAW,CAACQ,WAAW;;kBAEpD,CAAC;gBAEH,CAAC;;aAGH,IAAIR,WAAW,CAACK,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC,EACxC;eACC,OAAO3G,aAAG,CAACC,MAAM,CAAC;iBACjBC,GAAG,EAAE,KAAK;iBACVS,KAAK,EAAE;mBACNU,SAAS,EAAE;kBACX;iBACDO,QAAQ,EAAE,CACT5B,aAAG,CAACC,MAAM,CAAC;mBACVC,GAAG,EAAE,OAAO;mBACZS,KAAK,EAAE;qBACNiG,GAAG,EAAEnD,SAAS,CAAC2B,YAAY,CAACiB,WAAW,CAACQ,WAAW,CAAC;qBACpDC,QAAQ,EAAE;;kBAEX,CAAC;gBAEH,CAAC;;aAGH,OAAO9G,aAAG,CAACC,MAAM,CAAC;eACjBC,GAAG,EAAE,GAAG;eACRS,KAAK,EAAE;iBACN4E,IAAI,EAAE9B,SAAS,CAAC2B,YAAY,CAACiB,WAAW,CAACQ,WAAW;gBACpD;eACD/D,IAAI,EAAEuD,WAAW,CAACrH;cAClB,CAAC;;;SAIJ,OAAO,IAAI;QACX;OACD,GAAGD;MACH,CAAC;;CAEJ;;CCtEO,MAAMgI,iBAAiB,SAASlI,iCAAa,CACpD;GACCC,WAAW,CAACC,OAA6B,EACzC;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,MAAM;OACZC,OAAO,CAAC;SAAEI,IAAI;SAAEoE;QAAmC,EAAqB;SAAA;SACvE,MAAMuD,eAAgD,GAAGvD,SAAS,CAACwD,kBAAkB,EAAE;SACvF,IAAIjC,cAAI,CAACC,cAAc,CAAC+B,eAAe,6CAAfA,eAAe,CAAEE,WAAW,qBAA5B,sBAA8BC,IAAI,CAAC,EAC3D;WACC,MAAMD,WAAmB,GAAGF,eAAe,CAACE,WAAW,CAACC,IAAI;WAC5D,MAAMC,OAAe,GAAGF,WAAW,CAACtE,UAAU,CAAC,MAAM,EAAEvD,IAAI,CAAC6B,QAAQ,EAAE,CAAC;WAEvE,OAAOlB,aAAG,CAACC,MAAM,CAAC;aACjBC,GAAG,EAAE,GAAG;aACRS,KAAK,EAAE;eACNU,SAAS,EAAE,wCAAwC;eACnDkE,IAAI,EAAE9B,SAAS,CAAC2B,YAAY,CAACgC,OAAO,CAAC;eACrC9B,MAAM,EAAE;;YAET,CAAC;;SAGH,OAAOtF,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,MAAM;WACXS,KAAK,EAAE;aACNU,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAGtC;MACH,CAAC;;CAEJ;;CCjCO,MAAMsI,uBAAuB,SAASxI,iCAAa,CAC1D;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,YAAY;OAClBC,OAAO,CAAC;SAAEI,IAAI;SAAEoE;QAAmC,EAAuC;SAAA;SACzF,MAAMuD,eAAgD,GAAGvD,SAAS,CAACwD,kBAAkB,EAAE;SACvF,IAAIjC,cAAI,CAACC,cAAc,CAAC+B,eAAe,6CAAfA,eAAe,CAAEE,WAAW,qBAA5B,sBAA8BI,UAAU,CAAC,EACjE;WACC,MAAMJ,WAAmB,GAAGF,eAAe,CAACE,WAAW,CAACI,UAAU;WAClE,MAAMC,aAAqB,GAAGL,WAAW,CAACtE,UAAU,CAAC,MAAM,EAAEvD,IAAI,CAAC6B,QAAQ,EAAE,CAAC;WAE7E,OAAOlB,aAAG,CAACC,MAAM,CAAC;aACjBC,GAAG,EAAE,GAAG;aACRS,KAAK,EAAE;eACNU,SAAS,EAAE,wCAAwC;eACnDkE,IAAI,EAAE9B,SAAS,CAAC2B,YAAY,CAACmC,aAAa,CAAC;eAC3CjC,MAAM,EAAE;;YAET,CAAC;;SAGH,OAAOtF,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,MAAM;WACXS,KAAK,EAAE;aACNU,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAGtC;MACH,CAAC;;CAEJ;;CCjCO,MAAMyI,oBAAoB,SAAS3I,iCAAa,CACvD;GACCC,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLC,IAAI,EAAE,SAAS;OACfC,OAAO,CAAC;SAAEI,IAAI;SAAEoE;QAAmC,EAAuC;SAAA;SACzF,MAAMuD,eAAgD,GAAGvD,SAAS,CAACwD,kBAAkB,EAAE;SACvF,IAAIjC,cAAI,CAACC,cAAc,CAAC+B,eAAe,6CAAfA,eAAe,CAAEE,WAAW,qBAA5B,sBAA8BO,OAAO,CAAC,EAC9D;WACC,MAAMP,WAAmB,GAAGF,eAAe,CAACE,WAAW,CAACO,OAAO;WAC/D,MAAMC,UAAkB,GAAGR,WAAW,CAACtE,UAAU,CAAC,YAAY,EAAEvD,IAAI,CAAC6B,QAAQ,EAAE,CAAC;WAEhF,OAAOlB,aAAG,CAACC,MAAM,CAAC;aACjBC,GAAG,EAAE,GAAG;aACRS,KAAK,EAAE;eACN4E,IAAI,EAAE9B,SAAS,CAAC2B,YAAY,CAACsC,UAAU,CAAC;eACxCrG,SAAS,EAAE,wCAAwC;eACnDiE,MAAM,EAAE;;YAET,CAAC;;SAGH,OAAOtF,aAAG,CAACC,MAAM,CAAC;WACjBC,GAAG,EAAE,MAAM;WACXS,KAAK,EAAE;aACNU,SAAS,EAAE;;UAEZ,CAAC;QACF;OACD,GAAGtC;MACH,CAAC;;CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CCLA,MAAM4I,cAAc,GAAGC,mBAAS,CAACC,WAAW,CAAC,oCAAoC,CAAC;;CAElF;CACA;CACA;CAFA;CAAA;AAGA,CAAO,MAAMC,aAAa,SAASC,6BAAS,CAC5C;GAICjJ,WAAW,CAACC,OAA6B,GAAG,EAAE,EAC9C;KACC,KAAK,CAAC;OACLiJ,UAAU,EAAEC,MAAM,CAACC,MAAM,CAACC,cAAc,CAAC,CAACC,GAAG,CAAEC,cAA6B,IAAK;SAChF,OAAO,IAAIA,cAAc,EAAE;QAC3B;MACD,CAAC;KAAC;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAEH,IAAI,CAACC,iBAAiB,CAACvJ,OAAO,CAACiJ,UAAU,CAAC;KAE1C,IAAI,CAACO,eAAe,CAAC;OACpB,GAAGZ,cAAc,CAACa,YAAY;OAC9B,GAAGzJ,OAAO,CAACyJ;MACX,CAAC;KAEF,IAAI,CAACC,kBAAkB,CAAC;OACvB,GAAGd,cAAc,CAACe,OAAO;OACzB,GAAG3J,OAAO,CAAC2J;MACX,CAAC;;GAGH,OAAOC,eAAe,CAACC,MAAe,EACtC;KACC,IAAI5D,cAAI,CAACC,cAAc,CAAC2D,MAAM,CAAC,EAC/B;OACC,OAAOA,MAAM,CAAChG,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC;;KAGzC,OAAO,EAAE;;GAGV,OAAOiG,oBAAoB,CAACD,MAAe,EAC3C;KACC,IAAI5D,cAAI,CAACC,cAAc,CAAC2D,MAAM,CAAC,EAC/B;OACC,OAAOA,MAAM,CACXhG,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CACzBA,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC;;KAG5B,OAAO,EAAE;;GAGV,OAAOkG,sBAAsB,CAACF,MAAe,EAC7C;KACC,IAAI5D,cAAI,CAACC,cAAc,CAAC2D,MAAM,CAAC,EAC/B;OACC,OAAOA,MAAM,CAAChG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC;;KAGrC,OAAO,EAAE;;GAGV,OAAOmG,kBAAkB,CAACH,MAAe,EACzC;KACC,IAAI5D,cAAI,CAACC,cAAc,CAAC2D,MAAM,CAAC,EAC/B;OACC,OAAOA,MAAM,CAAChG,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC;;KAGtC,OAAO,EAAE;;GAGV,OAAOoG,cAAc,CAACC,IAAa,EACnC;KACC,OAAO3C,MAAM,CAAC2C,IAAI,CAAC,CAACtC,UAAU,CAAC,GAAG,CAAC;;GAGpChD,6BAA6B,CAACM,UAAmB,EACjD;KACC,OACCe,cAAI,CAACC,cAAc,CAAChB,UAAU,CAAC,IAC3B,IAAIiF,MAAM,CAAE,KAAI,IAAI,CAACnF,eAAe,EAAE,CAACoF,cAAe,GAAE,CAAC,CAAE1D,IAAI,CAACxB,UAAU,CAAC;;GAIjFmF,sBAAsB,CAACnF,UAAmB,EAC1C;KACC,IAAIe,cAAI,CAACC,cAAc,CAAChB,UAAU,CAAC,EACnC;OACC,MAAMoF,aAAqB,GAAG,IAAI,CAACtF,eAAe,EAAE,CAACsF,aAAa;OAElE,OAAQ,GAAEA,aAAc,MAAKpF,UAAW,EAAC;;KAG1C,OAAO,EAAE;;GAGVP,kBAAkB,GAClB;KACC,MAAM;OAAEI;MAAW,GAAG,IAAI,CAACC,eAAe,EAAE;KAE5C,OACCiB,cAAI,CAACwB,aAAa,CAAC1C,SAAS,CAAC,IAC1BA,SAAS,CAACwF,OAAO,KAAK,IAAI,IAC1BtE,cAAI,CAACuE,SAAS,CAACzF,SAAS,CAACE,SAAS,CAAC;;GAIxCoB,YAAY,CAACnB,UAAmB,EAChC;KACC,IAAIe,cAAI,CAACC,cAAc,CAAChB,UAAU,CAAC,EACnC;OACC,IAAIuF,YAAY,GAAG1B,aAAa,CAACa,eAAe,CAAC1E,UAAU,CAAC;OAC5DuF,YAAY,GAAG1B,aAAa,CAACe,oBAAoB,CAACW,YAAY,CAAC;OAC/DA,YAAY,GAAG1B,aAAa,CAACgB,sBAAsB,CAACU,YAAY,CAAC;OACjEA,YAAY,GAAG1B,aAAa,CAACiB,kBAAkB,CAACS,YAAY,CAAC;OAE7D,IACC,CAAC1B,aAAa,CAACkB,cAAc,CAACQ,YAAY,CAAC,IACxC,CAAC,IAAI,CAAC7F,6BAA6B,CAAC6F,YAAY,CAAC,EAErD;SACCA,YAAY,GAAG,IAAI,CAACJ,sBAAsB,CAACI,YAAY,CAAC;;OAGzD,OAAOA,YAAY;;KAGpB,OAAO,EAAE;;GAGVjB,eAAe,CAACkB,QAA8C,EAC9D;KACC,4CAAI,kCAAiB;OAAE,GAAGA;MAAU;;GAGrC1F,eAAe,GACf;KACC,+CAAO,IAAI;;GAGZ0E,kBAAkB,CAACgB,QAAyC,EAC5D;KACC,4CAAI,wCAAoB;OAAE,GAAGA;MAAU;;GAGxCxC,kBAAkB,GAClB;KACC,+CAAO,IAAI;;GAGZyC,6BAA6B,CAAC3K,OAAO,EACrC;KACC,OAAO,MAAM;OACZ,OAAO,IAAIF,iCAAa,CAAC;SACxBG,IAAI,EAAE,SAAS;SACfuC,MAAM,CAAC;WAAElC;UAAoC,EAAsB;WAClE,MAAMmC,MAAoB,GAAGnC,IAAI,CAACoC,SAAS,EAAE;WAE7C,IAAIpC,IAAI,CAACsK,MAAM,EAAE,EACjB;aACC,OAAOnI,MAAM,CAACoI,cAAc,CAAC;eAC5BhI,QAAQ,EAAE,CACTJ,MAAM,CAACQ,UAAU,CAAC3C,IAAI,CAACwK,aAAa,EAAE,CAAC;cAExC,CAAC;;WAGH,OAAOrI,MAAM,CAACoI,cAAc,CAAC;aAC5BhI,QAAQ,EAAE,CACTJ,MAAM,CAACQ,UAAU,CAAC3C,IAAI,CAACwK,aAAa,EAAE,CAAC,EACvC,GAAGxK,IAAI,CAACwC,WAAW,EAAE,EACrBL,MAAM,CAACQ,UAAU,CAAC3C,IAAI,CAACyK,aAAa,EAAE,CAAC;YAExC,CAAC;UACF;SACD7K,OAAO,GAAqB;WAC3B,OAAOC,QAAQ,CAACC,sBAAsB,EAAE;;QAEzC,CAAC;MACF;;CAEH;;;;;;;;"}